["^ ","~:output",["^ ","~:js","goog.provide('reagent.ratom');\nreagent.ratom.debug = false;\nreagent.ratom.generation = (0);\nreagent.ratom._running = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nreagent.ratom.reactive_QMARK_ = (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ == null)));\n});\nreagent.ratom.running = (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len = (function reagent$ratom$arr_len(x){\nif((x == null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq = (function reagent$ratom$arr_eq(x,y){\nvar len = reagent.ratom.arr_len(x);\nif((len === reagent.ratom.arr_len(y))){\nvar i = (0);\nwhile(true){\nvar or__4160__auto__ = (i === len);\nif(or__4160__auto__){\nreturn or__4160__auto__;\n} else {\nif(((x[i]) === (y[i]))){\nvar G__31652 = (i + (1));\ni = G__31652;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn false;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context = (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__31588 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31589 = obj;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31589);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31588);\n}});\n/**\n * Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture = (function reagent$ratom$deref_capture(f,r){\n(r.captured = null);\n\n\n\nvar res = reagent.ratom.in_context(r,f);\nvar c = r.captured;\n(r.dirty_QMARK_ = false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ = (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5739__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar r = temp__5739__auto__;\nvar c = r.captured;\nif((c == null)){\nreturn (r.captured = [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches = (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w = (function reagent$ratom$add_w(this$,key,f){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.remove_w = (function reagent$ratom$remove_w(this$,key){\nvar w = this$.watches;\n(this$.watches = reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr = null);\n});\nreagent.ratom.notify_w = (function reagent$ratom$notify_w(this$,old,new$){\nvar w = this$.watchesArr;\nvar a = (((w == null))?(this$.watchesArr = cljs.core.reduce_kv((function (p1__31590_SHARP_,p2__31591_SHARP_,p3__31592_SHARP_){\nvar G__31593 = p1__31590_SHARP_;\nG__31593.push(p2__31591_SHARP_);\n\nG__31593.push(p3__31592_SHARP_);\n\nreturn G__31593;\n}),[],this$.watches)):w);\nvar len = a.length;\nvar i = (0);\nwhile(true){\nif((i < len)){\nvar k_31653 = (a[i]);\nvar f_31654 = (a[(i + (1))]);\n(f_31654.cljs$core$IFn$_invoke$arity$4 ? f_31654.cljs$core$IFn$_invoke$arity$4(k_31653,this$,old,new$) : f_31654.call(null,k_31653,this$,old,new$));\n\nvar G__31655 = ((2) + i);\ni = G__31655;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom = (function reagent$ratom$pr_atom(a,writer,opts,s,v){\ncljs.core._write(writer,[\"#object[reagent.ratom.\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\" \"].join(''));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__31594 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31595 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31595);\n\ntry{return v;\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31594);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\"]\");\n});\nreagent.ratom.rea_queue = null;\nreagent.ratom.rea_enqueue = (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue == null)){\n(reagent.ratom.rea_queue = []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom = function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom = (function (state,meta,validator,watches){\nthis.state = state;\nthis.meta = meta;\nthis.validator = validator;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RAtom\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,new_value){\nvar self__ = this;\nvar a__$1 = this;\nif((self__.validator == null)){\n} else {\n}\n\nvar old_value = self__.state;\n(self__.state = new_value);\n\nif((self__.watches == null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){\nvar self__ = this;\nvar ___$1 = this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"meta\",\"meta\",-1154898805,null),new cljs.core.Symbol(null,\"validator\",\"validator\",-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type = true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr = \"reagent.ratom/RAtom\");\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"reagent.ratom/RAtom\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom = (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom = (function reagent$ratom$atom(var_args){\nvar G__31599 = arguments.length;\nswitch (G__31599) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__4792__auto__ = [];\nvar len__4771__auto___31659 = arguments.length;\nvar i__4772__auto___31660 = (0);\nwhile(true){\nif((i__4772__auto___31660 < len__4771__auto___31659)){\nargs_arr__4792__auto__.push((arguments[i__4772__auto___31660]));\n\nvar G__31661 = (i__4772__auto___31660 + (1));\ni__4772__auto___31660 = G__31661;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4793__auto__ = (new cljs.core.IndexedSeq(args_arr__4792__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4793__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 = (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic = (function (x,p__31600){\nvar map__31601 = p__31600;\nvar map__31601__$1 = cljs.core.__destructure_map(map__31601);\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31601__$1,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964));\nvar validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31601__$1,new cljs.core.Keyword(null,\"validator\",\"validator\",-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo = (function (seq31597){\nvar G__31598 = cljs.core.first(seq31597);\nvar seq31597__$1 = cljs.core.next(seq31597);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31598,seq31597__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity = (1));\n\nreagent.ratom.cached_reaction = (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m = o.reagReactionCache;\nvar m__$1 = (((m == null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r = (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r == null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ == null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 = (function (){var G__31602 = f;\nvar G__31603 = new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360);\nvar G__31604 = (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __31664 = o.reagReactionCache;\nvar __31665__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__31664,k);\n(o.reagReactionCache = __31665__$1);\n\nif((!((obj == null)))){\n(obj.reaction = null);\n} else {\n}\n\nif((!((destroy == null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__31602,G__31603,G__31604) : reagent.ratom.make_reaction.call(null,G__31602,G__31603,G__31604));\n})();\nvar v = cljs.core._deref(r__$1);\n(o.reagReactionCache = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj == null)))){\n(obj.reaction = r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track = (function (f,args,reaction){\nthis.f = f;\nthis.args = args;\nthis.reaction = reaction;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.Track)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Track\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"f\",\"f\",-1597136552),self__.f], null));\n}));\n\n(reagent.ratom.Track.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"args\",\"args\",-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type = true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr = \"reagent.ratom/Track\");\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"reagent.ratom/Track\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track = (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track = (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ = (function reagent$ratom$make_track_BANG_(f,args){\nvar t = reagent.ratom.make_track(f,args);\nvar r = (function (){var G__31605 = (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__31606 = new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437);\nvar G__31607 = true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__31605,G__31606,G__31607) : reagent.ratom.make_reaction.call(null,G__31605,G__31606,G__31607));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track = (function reagent$ratom$track(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___31666 = arguments.length;\nvar i__4772__auto___31667 = (0);\nwhile(true){\nif((i__4772__auto___31667 < len__4771__auto___31666)){\nargs__4777__auto__.push((arguments[i__4772__auto___31667]));\n\nvar G__31668 = (i__4772__auto___31667 + (1));\ni__4772__auto___31667 = G__31668;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo = (function (seq31608){\nvar G__31609 = cljs.core.first(seq31608);\nvar seq31608__$1 = cljs.core.next(seq31608);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31609,seq31608__$1);\n}));\n\nreagent.ratom.track_BANG_ = (function reagent$ratom$track_BANG_(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___31670 = arguments.length;\nvar i__4772__auto___31671 = (0);\nwhile(true){\nif((i__4772__auto___31671 < len__4771__auto___31670)){\nargs__4777__auto__.push((arguments[i__4772__auto___31671]));\n\nvar G__31672 = (i__4772__auto___31671 + (1));\ni__4772__auto___31671 = G__31672;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo = (function (seq31610){\nvar G__31611 = cljs.core.first(seq31610);\nvar seq31610__$1 = cljs.core.next(seq31610);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31611,seq31610__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor = (function (ratom,path,reaction,state,watches){\nthis.ratom = ratom;\nthis.path = path;\nthis.reaction = reaction;\nthis.state = state;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.RCursor.prototype._peek = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__31612 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31613 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31613);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31612);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state = (function (oldstate,newstate){\nvar self__ = this;\nvar this$ = this;\nif((oldstate === newstate)){\nreturn null;\n} else {\n(self__.state = newstate);\n\nif((!((self__.watches == null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"RCursor\",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\"path\",\"path\",-188191168),self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){\nvar self__ = this;\nvar ___$1 = this;\nreturn (((other instanceof reagent.ratom.RCursor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,new_value){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31615 = a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31615) : f.call(null,G__31615));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31616 = a__$1._peek();\nvar G__31617 = x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31616,G__31617) : f.call(null,G__31616,G__31617));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31618 = a__$1._peek();\nvar G__31619 = x;\nvar G__31620 = y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31618,G__31619,G__31620) : f.call(null,G__31618,G__31619,G__31620));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldstate = self__.state;\nvar newstate = (function (){var temp__5737__auto__ = self__.reaction;\nif((temp__5737__auto__ == null)){\nvar f = (((((!((self__.ratom == null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ & (32768))) || ((cljs.core.PROTOCOL_SENTINEL === self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r = temp__5737__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"ratom\",\"ratom\",1514010260,null),new cljs.core.Symbol(null,\"path\",\"path\",1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"reaction\",\"reaction\",2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type = true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr = \"reagent.ratom/RCursor\");\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"reagent.ratom/RCursor\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor = (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor = (function reagent$ratom$cursor(src,path){\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy = (function reagent$ratom$with_let_destroy(v){\nvar temp__5739__auto__ = v.destroy;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar f = temp__5739__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values = (function reagent$ratom$with_let_values(key){\nvar temp__5737__auto__ = reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5737__auto__ == null)){\nreturn [];\n} else {\nvar c = temp__5737__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable = function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_31679 = (function (this$){\nvar x__4463__auto__ = (((this$ == null))?null:this$);\nvar m__4464__auto__ = (reagent.ratom.dispose_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4464__auto__.call(null,this$));\n} else {\nvar m__4461__auto__ = (reagent.ratom.dispose_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4461__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.dispose!\",this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ = (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 == null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_31679(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_31680 = (function (this$,f){\nvar x__4463__auto__ = (((this$ == null))?null:this$);\nvar m__4464__auto__ = (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4464__auto__.call(null,this$,f));\n} else {\nvar m__4461__auto__ = (reagent.ratom.add_on_dispose_BANG_[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__4461__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\"IDisposable.add-on-dispose!\",this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ = (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 == null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_31680(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable = function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_31681 = (function (this$){\nvar x__4463__auto__ = (((this$ == null))?null:this$);\nvar m__4464__auto__ = (reagent.ratom.run[goog.typeOf(x__4463__auto__)]);\nif((!((m__4464__auto__ == null)))){\nreturn (m__4464__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4464__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4464__auto__.call(null,this$));\n} else {\nvar m__4461__auto__ = (reagent.ratom.run[\"_\"]);\nif((!((m__4461__auto__ == null)))){\nreturn (m__4461__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4461__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4461__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\"IRunnable.run\",this$);\n}\n}\n});\nreagent.ratom.run = (function reagent$ratom$run(this$){\nif((((!((this$ == null)))) && ((!((this$.reagent$ratom$IRunnable$run$arity$1 == null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_31681(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change = (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction = (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f = f;\nthis.state = state;\nthis.dirty_QMARK_ = dirty_QMARK_;\nthis.nocache_QMARK_ = nocache_QMARK_;\nthis.watching = watching;\nthis.watches = watches;\nthis.auto_run = auto_run;\nthis.caught = caught;\nthis.cljs$lang$protocol_mask$partition0$ = 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at = (function (){\nvar self__ = this;\nvar this$ = this;\nvar _STAR_ratom_context_STAR__orig_val__31622 = reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__31623 = null;\n(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__temp_val__31623);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ = _STAR_ratom_context_STAR__orig_val__31622);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change = (function (sender,oldval,newval){\nvar self__ = this;\nvar this$ = this;\nif((((oldval === newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run == null)){\n(self__.dirty_QMARK_ = true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run === true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching = (function (derefed){\nvar self__ = this;\nvar this$ = this;\nvar new$ = cljs.core.set(derefed);\nvar old = cljs.core.set(self__.watching);\n(self__.watching = derefed);\n\nvar seq__31624_31682 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__31625_31683 = null;\nvar count__31626_31684 = (0);\nvar i__31627_31685 = (0);\nwhile(true){\nif((i__31627_31685 < count__31626_31684)){\nvar w_31686 = chunk__31625_31683.cljs$core$IIndexed$_nth$arity$2(null,i__31627_31685);\ncljs.core._add_watch(w_31686,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__31687 = seq__31624_31682;\nvar G__31688 = chunk__31625_31683;\nvar G__31689 = count__31626_31684;\nvar G__31690 = (i__31627_31685 + (1));\nseq__31624_31682 = G__31687;\nchunk__31625_31683 = G__31688;\ncount__31626_31684 = G__31689;\ni__31627_31685 = G__31690;\ncontinue;\n} else {\nvar temp__5735__auto___31692 = cljs.core.seq(seq__31624_31682);\nif(temp__5735__auto___31692){\nvar seq__31624_31693__$1 = temp__5735__auto___31692;\nif(cljs.core.chunked_seq_QMARK_(seq__31624_31693__$1)){\nvar c__4591__auto___31694 = cljs.core.chunk_first(seq__31624_31693__$1);\nvar G__31695 = cljs.core.chunk_rest(seq__31624_31693__$1);\nvar G__31696 = c__4591__auto___31694;\nvar G__31697 = cljs.core.count(c__4591__auto___31694);\nvar G__31698 = (0);\nseq__31624_31682 = G__31695;\nchunk__31625_31683 = G__31696;\ncount__31626_31684 = G__31697;\ni__31627_31685 = G__31698;\ncontinue;\n} else {\nvar w_31700 = cljs.core.first(seq__31624_31693__$1);\ncljs.core._add_watch(w_31700,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__31701 = cljs.core.next(seq__31624_31693__$1);\nvar G__31702 = null;\nvar G__31703 = (0);\nvar G__31704 = (0);\nseq__31624_31682 = G__31701;\nchunk__31625_31683 = G__31702;\ncount__31626_31684 = G__31703;\ni__31627_31685 = G__31704;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__31628 = cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__31629 = null;\nvar count__31630 = (0);\nvar i__31631 = (0);\nwhile(true){\nif((i__31631 < count__31630)){\nvar w = chunk__31629.cljs$core$IIndexed$_nth$arity$2(null,i__31631);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__31705 = seq__31628;\nvar G__31706 = chunk__31629;\nvar G__31707 = count__31630;\nvar G__31708 = (i__31631 + (1));\nseq__31628 = G__31705;\nchunk__31629 = G__31706;\ncount__31630 = G__31707;\ni__31631 = G__31708;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__31628);\nif(temp__5735__auto__){\nvar seq__31628__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__31628__$1)){\nvar c__4591__auto__ = cljs.core.chunk_first(seq__31628__$1);\nvar G__31709 = cljs.core.chunk_rest(seq__31628__$1);\nvar G__31710 = c__4591__auto__;\nvar G__31711 = cljs.core.count(c__4591__auto__);\nvar G__31712 = (0);\nseq__31628 = G__31709;\nchunk__31629 = G__31710;\ncount__31630 = G__31711;\ni__31631 = G__31712;\ncontinue;\n} else {\nvar w = cljs.core.first(seq__31628__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__31713 = cljs.core.next(seq__31628__$1);\nvar G__31714 = null;\nvar G__31715 = (0);\nvar G__31716 = (0);\nseq__31628 = G__31713;\nchunk__31629 = G__31714;\ncount__31630 = G__31715;\ni__31631 = G__31716;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run = (function (){\nvar self__ = this;\nvar this$ = this;\nif(((self__.dirty_QMARK_) && ((!((self__.watching == null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture = (function (f__$1){\nvar self__ = this;\nvar this$ = this;\ntry{(self__.caught = null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e31632){var e = e31632;\n(self__.state = e);\n\n(self__.caught = e);\n\nreturn (self__.dirty_QMARK_ = false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run = (function (check){\nvar self__ = this;\nvar this$ = this;\nvar oldstate = self__.state;\nvar res = (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state = res);\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts = (function (p__31633){\nvar self__ = this;\nvar map__31634 = p__31633;\nvar map__31634__$1 = cljs.core.__destructure_map(map__31634);\nvar auto_run__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31634__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31634__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31634__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar no_cache = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31634__$1,new cljs.core.Keyword(null,\"no-cache\",\"no-cache\",1588056370));\nvar this$ = this;\nif((!((auto_run__$1 == null)))){\n(this$.auto_run = auto_run__$1);\n} else {\n}\n\nif((!((on_set == null)))){\n(this$.on_set = on_set);\n} else {\n}\n\nif((!((on_dispose == null)))){\n(this$.on_dispose = on_dispose);\n} else {\n}\n\nif((!((no_cache == null)))){\nreturn (this$.nocache_QMARK_ = no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Reaction\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){\nvar self__ = this;\nvar o__$1 = this;\nreturn (o__$1 === other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar s = self__.state;\nvar wg = self__.watching;\n(self__.watching = null);\n\n(self__.state = null);\n\n(self__.auto_run = null);\n\n(self__.dirty_QMARK_ = true);\n\nvar seq__31635_31718 = cljs.core.seq(cljs.core.set(wg));\nvar chunk__31636_31719 = null;\nvar count__31637_31720 = (0);\nvar i__31638_31721 = (0);\nwhile(true){\nif((i__31638_31721 < count__31637_31720)){\nvar w_31722 = chunk__31636_31719.cljs$core$IIndexed$_nth$arity$2(null,i__31638_31721);\ncljs.core._remove_watch(w_31722,this$__$1);\n\n\nvar G__31723 = seq__31635_31718;\nvar G__31724 = chunk__31636_31719;\nvar G__31725 = count__31637_31720;\nvar G__31726 = (i__31638_31721 + (1));\nseq__31635_31718 = G__31723;\nchunk__31636_31719 = G__31724;\ncount__31637_31720 = G__31725;\ni__31638_31721 = G__31726;\ncontinue;\n} else {\nvar temp__5735__auto___31727 = cljs.core.seq(seq__31635_31718);\nif(temp__5735__auto___31727){\nvar seq__31635_31728__$1 = temp__5735__auto___31727;\nif(cljs.core.chunked_seq_QMARK_(seq__31635_31728__$1)){\nvar c__4591__auto___31729 = cljs.core.chunk_first(seq__31635_31728__$1);\nvar G__31730 = cljs.core.chunk_rest(seq__31635_31728__$1);\nvar G__31731 = c__4591__auto___31729;\nvar G__31732 = cljs.core.count(c__4591__auto___31729);\nvar G__31733 = (0);\nseq__31635_31718 = G__31730;\nchunk__31636_31719 = G__31731;\ncount__31637_31720 = G__31732;\ni__31638_31721 = G__31733;\ncontinue;\n} else {\nvar w_31734 = cljs.core.first(seq__31635_31728__$1);\ncljs.core._remove_watch(w_31734,this$__$1);\n\n\nvar G__31735 = cljs.core.next(seq__31635_31728__$1);\nvar G__31736 = null;\nvar G__31737 = (0);\nvar G__31738 = (0);\nseq__31635_31718 = G__31735;\nchunk__31636_31719 = G__31736;\ncount__31637_31720 = G__31737;\ni__31638_31721 = G__31738;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose == null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5739__auto__ = this$__$1.on_dispose_arr;\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar a = temp__5739__auto__;\nvar n__4648__auto__ = a.length;\nvar i = (0);\nwhile(true){\nif((i < n__4648__auto__)){\nvar fexpr__31639_31739 = (a[i]);\n(fexpr__31639_31739.cljs$core$IFn$_invoke$arity$1 ? fexpr__31639_31739.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__31639_31739.call(null,this$__$1));\n\nvar G__31740 = (i + (1));\ni = G__31740;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 = (function (this$,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5737__auto__ = this$__$1.on_dispose_arr;\nif((temp__5737__auto__ == null)){\nreturn (this$__$1.on_dispose_arr = [f__$1]);\n} else {\nvar a = temp__5737__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (a,newval){\nvar self__ = this;\nvar a__$1 = this;\n\nvar oldval = self__.state;\n(self__.state = newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f__$1){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31640 = a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__31640) : f__$1.call(null,G__31640));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f__$1,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31641 = a__$1._peek_at();\nvar G__31642 = x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__31641,G__31642) : f__$1.call(null,G__31641,G__31642));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f__$1,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__31643 = a__$1._peek_at();\nvar G__31644 = x;\nvar G__31645 = y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__31643,G__31644,G__31645) : f__$1.call(null,G__31643,G__31644,G__31645));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f__$1,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ = cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f__$1){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nvar was_empty = cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) && (cljs.core.empty_QMARK_(self__.watches)) && ((self__.auto_run == null)))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\nvar temp__5739__auto___31741 = self__.caught;\nif((temp__5739__auto___31741 == null)){\n} else {\nvar e_31742 = temp__5739__auto___31741;\nthrow e_31742;\n}\n\nvar non_reactive_31743 = (reagent.ratom._STAR_ratom_context_STAR_ == null);\nif(non_reactive_31743){\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n} else {\n}\n\nif(((non_reactive_31743) && ((self__.auto_run == null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_31744 = self__.state;\n(self__.state = (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_31744,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_31744,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"dirty?\",\"dirty?\",-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"nocache?\",\"nocache?\",-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watching\",\"watching\",1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"auto-run\",\"auto-run\",-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"caught\",\"caught\",2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type = true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr = \"reagent.ratom/Reaction\");\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"reagent.ratom/Reaction\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction = (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.flush_BANG_ = (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q = reagent.ratom.rea_queue;\nif((q == null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue = null);\n\nvar n__4648__auto___31745 = q.length;\nvar i_31746 = (0);\nwhile(true){\nif((i_31746 < n__4648__auto___31745)){\nvar r_31747 = (q[i_31746]);\nr_31747._queued_run();\n\nvar G__31748 = (i_31746 + (1));\ni_31746 = G__31748;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush = reagent.ratom.flush_BANG_);\nreagent.ratom.make_reaction = (function reagent$ratom$make_reaction(var_args){\nvar args__4777__auto__ = [];\nvar len__4771__auto___31749 = arguments.length;\nvar i__4772__auto___31750 = (0);\nwhile(true){\nif((i__4772__auto___31750 < len__4771__auto___31749)){\nargs__4777__auto__.push((arguments[i__4772__auto___31750]));\n\nvar G__31751 = (i__4772__auto___31750 + (1));\ni__4772__auto___31750 = G__31751;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4778__auto__ = ((((1) < args__4777__auto__.length))?(new cljs.core.IndexedSeq(args__4777__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4778__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic = (function (f,p__31648){\nvar map__31649 = p__31648;\nvar map__31649__$1 = cljs.core.__destructure_map(map__31649);\nvar auto_run = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31649__$1,new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437));\nvar on_set = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31649__$1,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470));\nvar on_dispose = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31649__$1,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360));\nvar reaction = reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"auto-run\",\"auto-run\",1958400437),auto_run,new cljs.core.Keyword(null,\"on-set\",\"on-set\",-140953470),on_set,new cljs.core.Keyword(null,\"on-dispose\",\"on-dispose\",2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo = (function (seq31646){\nvar G__31647 = cljs.core.first(seq31646);\nvar seq31646__$1 = cljs.core.next(seq31646);\nvar self__4758__auto__ = this;\nreturn self__4758__auto__.cljs$core$IFn$_invoke$arity$variadic(G__31647,seq31646__$1);\n}));\n\nreagent.ratom.temp_reaction = reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of 'watches' of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction = (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r = reagent.ratom.temp_reaction;\nvar res = reagent.ratom.deref_capture(f,r);\nif((r.watching == null)){\n} else {\n(reagent.ratom.temp_reaction = reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f = f);\n\n(r.auto_run = (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\ngoog.object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs = (function reagent$ratom$check_derefs(f){\nvar ctx = ({});\nvar res = reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured == null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper = (function (state,callback,changed,watches){\nthis.state = state;\nthis.callback = callback;\nthis.changed = changed;\nthis.watches = watches;\nthis.cljs$lang$protocol_mask$partition1$ = 114690;\nthis.cljs$lang$protocol_mask$partition0$ = 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 = (function (this$){\nvar self__ = this;\nvar this$__$1 = this;\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 = (function (this$,newval){\nvar self__ = this;\nvar this$__$1 = this;\nvar oldval = self__.state;\n(self__.changed = true);\n\n(self__.state = newval);\n\nif((!((self__.watches == null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 = (function (a,f){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 = (function (a,f,x){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 = (function (a,f,x,y){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 = (function (a,f,x,y,more){\nvar self__ = this;\nvar a__$1 = this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar self__ = this;\nvar this$__$1 = this;\nreturn (((other instanceof reagent.ratom.Wrapper)) && ((!(self__.changed))) && (cljs.core.not(other.changed)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,old,new$){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){\nvar self__ = this;\nvar this$__$1 = this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,w,opts){\nvar self__ = this;\nvar a__$1 = this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\"Wrapper\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"val\",\"val\",128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Wrapper.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"changed\",\"changed\",-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"watches\",\"watches\",1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type = true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr = \"reagent.ratom/Wrapper\");\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter = (function (this__4404__auto__,writer__4405__auto__,opt__4406__auto__){\nreturn cljs.core._write(writer__4405__auto__,\"reagent.ratom/Wrapper\");\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper = (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper = (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","reagent/ratom.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$react-dom","~$module$node_modules$react_dom$index","~$mathjs","~$module$node_modules$mathjs$lib$cjs$index"],"~:use-macros",["^ ","~$warn","~$reagent.debug","~$dev?","^F"],"~:excludes",["~#set",["~$atom"]],"~:macros",["^ ","~$with-let",["^ ","~:arglists",["~#list",[["~$bindings","~$&","~$body"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","~:name","~$reagent.ratom/with-let","~:ns","~$reagent.ratom","~:macro",true],"~$reaction",["^ ","^M",["^N",[["~$&","^P"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^Q","~$reagent.ratom/reaction","^S","^T","^U",true],"~$run!",["^ ","^M",["^N",[["~$&","^P"]]],"~:doc","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^Q","~$reagent.ratom/run!","^S","^T","^U",true]],"^Q","^T","~:op","^S","~:imports",null,"~:requires",["^ ","~$reagent.impl.util","^12","~$obj","~$goog.object","~$cljs.core","^15","~$goog","^16","^14","^14","~$reagent.impl.batching","^17","~$clojure.set","^18","~$util","^12","~$s","^18","~$batch","^17","^F","^F"],"~:seen",["^I",["~:require","~:require-macros"]],"~:uses",null,"^1=",["^ ","^T","^T","^F","^F","^15","^15"],"~:form",["^N",["~$ns","^T",["^N",["~:refer-clojure","~:exclude",["^J"]]],["^N",["^1=",["^T"]]],["^N",["^1<",["^12","~:as","^19"],["^F","~:refer-macros",["^E","^G"]],["^17","^1C","^1:"],["^18","^1C","~$s"],["^14","^1C","^13"]]]]],"~:flags",["^ ","^1=",["^I",[]],"^1<",["^I",[]]],"~:js-deps",["^ "],"~:deps",["^16","^15","^12","^F","^17","^18","^14"]],"^S","^T","~:resource-id",["~:shadow.build.classpath/resource","reagent/ratom.cljs"],"~:compiled-at",1619136942550,"~:resource-name","reagent/ratom.cljs","~:warnings",[],"~:source","(ns reagent.ratom\n  (:refer-clojure :exclude [atom])\n  (:require-macros [reagent.ratom])\n  (:require [reagent.impl.util :as util]\n            [reagent.debug :refer-macros [warn dev?]]\n            [reagent.impl.batching :as batch]\n            [clojure.set :as s]\n            [goog.object :as obj]))\n\n(declare flush!)\n\n(declare ^:dynamic *ratom-context*)\n(defonce ^boolean debug false)\n(defonce ^:private generation 0)\n(defonce ^:private -running (clojure.core/atom 0))\n\n(defn ^boolean reactive? []\n  (some? *ratom-context*))\n\n\n;;; Utilities\n\n(defn running []\n  (+ @-running))\n\n(defn- ^number arr-len [x]\n  (if (nil? x) 0 (alength x)))\n\n(defn- ^boolean arr-eq [x y]\n  (let [len (arr-len x)]\n    (and (== len (arr-len y))\n         (loop [i 0]\n           (or (== i len)\n               (if (identical? (aget x i) (aget y i))\n                 (recur (inc i))\n                 false))))))\n\n(defn- in-context\n  \"When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated\"\n  [obj f]\n  (binding [*ratom-context* obj]\n    (f)))\n\n(defn- deref-capture\n  \"Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs.\"\n  [f ^clj r]\n  (set! (.-captured r) nil)\n  (when (dev?)\n    (set! (.-ratomGeneration r) (set! generation (inc generation))))\n  (let [res (in-context r f)\n        c (.-captured r)]\n    (set! (.-dirty? r) false)\n    ;; Optimize common case where derefs occur in same order\n    (when-not (arr-eq c (.-watching r))\n      (._update-watching r c))\n    res))\n\n(defn- notify-deref-watcher!\n  \"Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`\"\n  [derefed]\n  (when-some [^clj r *ratom-context*]\n    (let [c (.-captured r)]\n      (if (nil? c)\n        (set! (.-captured r) (array derefed))\n        (.push c derefed)))))\n\n(defn- check-watches [old new]\n  (when debug\n    (swap! -running + (- (count new) (count old))))\n  new)\n\n(defn- add-w [^clj this key f]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (assoc w key f)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- remove-w [^clj this key]\n  (let [w (.-watches this)]\n    (set! (.-watches this) (check-watches w (dissoc w key)))\n    (set! (.-watchesArr this) nil)))\n\n(defn- notify-w [^clj this old new]\n  (let [w (.-watchesArr this)\n        a (if (nil? w)\n            ;; Copy watches to array for speed\n            (->> (.-watches this)\n                 (reduce-kv #(doto %1 (.push %2) (.push %3)) #js[])\n                 (set! (.-watchesArr this)))\n            w)\n        len (alength a)]\n    (loop [i 0]\n      (when (< i len)\n        (let [k (aget a i)\n              f (aget a (inc i))]\n          (f k this old new))\n        (recur (+ 2 i))))))\n\n(defn- pr-atom [a writer opts s v]\n  (-write writer (str \"#object[reagent.ratom.\" s \" \"))\n  (pr-writer (binding [*ratom-context* nil] v) writer opts)\n  (-write writer \"]\"))\n\n\n;;; Queueing\n\n(defonce ^:private rea-queue nil)\n\n(defn- rea-enqueue [r]\n  (when (nil? rea-queue)\n    (set! rea-queue (array))\n    (batch/schedule))\n  (.push rea-queue r))\n\n;;; Atom\n\n(defprotocol IReactiveAtom)\n\n(deftype RAtom [^:mutable state meta validator ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IDeref\n  (-deref [this]\n    (notify-deref-watcher! this)\n    state)\n\n  IReset\n  (-reset! [a new-value]\n    (when-not (nil? validator)\n      (assert (validator new-value) \"Validator rejected reference state\"))\n    (let [old-value state]\n      (set! state new-value)\n      (when-not (nil? watches)\n        (notify-w a old-value new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IWithMeta\n  (-with-meta [_ new-meta] (RAtom. state new-meta validator watches))\n\n  IMeta\n  (-meta [_] meta)\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RAtom\" {:val (-deref a)}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn atom\n  \"Like clojure.core/atom, except that it keeps track of derefs.\"\n  ([x] (->RAtom x nil nil nil))\n  ([x & {:keys [meta validator]}] (->RAtom x meta validator nil)))\n\n\n;;; track\n\n(declare make-reaction)\n\n(defn- cached-reaction [f ^clj o k ^clj obj destroy]\n  (let [m (.-reagReactionCache o)\n        m (if (nil? m) {} m)\n        r (m k nil)]\n    (cond\n      (some? r) (-deref r)\n      (nil? *ratom-context*) (f)\n      :else (let [r (make-reaction\n                     f :on-dispose (fn [x]\n                                     (when debug (swap! -running dec))\n                                     (as-> (.-reagReactionCache o) _\n                                       (dissoc _ k)\n                                       (set! (.-reagReactionCache o) _))\n                                     (when (some? obj)\n                                       (set! (.-reaction obj) nil))\n                                     (when (some? destroy)\n                                       (destroy x))))\n                  v (-deref r)]\n              (set! (.-reagReactionCache o) (assoc m k r))\n              (when debug (swap! -running inc))\n              (when (some? obj)\n                (set! (.-reaction obj) r))\n              v))))\n\n(deftype Track [f args ^:mutable reaction]\n  IReactiveAtom\n\n  IDeref\n  (-deref [this]\n    (if-some [r reaction]\n      (-deref r)\n      (cached-reaction #(apply f args) f args this nil)))\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? Track other)\n         (= f (.-f other))\n         (= args (.-args other))))\n\n  IHash\n  (-hash [_] (hash [f args]))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Track\" {:val (-deref a)\n                                                    :f f})))\n\n(defn make-track [f args]\n  (Track. f args nil))\n\n(defn make-track! [f args]\n  (let [t (make-track f args)\n        r (make-reaction #(-deref t)\n                         :auto-run true)]\n    @r\n    r))\n\n(defn track [f & args]\n  {:pre [(ifn? f)]}\n  (make-track f args))\n\n(defn track! [f & args]\n  {:pre [(ifn? f)]}\n  (make-track! f args))\n\n;;; cursor\n\n(deftype RCursor [ratom path ^:mutable reaction\n                  ^:mutable state ^:mutable watches]\n  IAtom\n  IReactiveAtom\n\n  IEquiv\n  (-equiv [_ ^clj other]\n    (and (instance? RCursor other)\n         (= path (.-path other))\n         (= ratom (.-ratom other))))\n\n  Object\n  (_peek [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_set-state [this oldstate newstate]\n    (when-not (identical? oldstate newstate)\n      (set! state newstate)\n      (when (some? watches)\n        (notify-w this oldstate newstate))))\n\n  IDeref\n  (-deref [this]\n    (let [oldstate state\n          newstate (if-some [r reaction]\n                     (-deref r)\n                     (let [f (if (satisfies? IDeref ratom)\n                               #(get-in @ratom path)\n                               #(ratom path))]\n                       (cached-reaction f ratom path this nil)))]\n      (._set-state this oldstate newstate)\n      newstate))\n\n  IReset\n  (-reset! [this new-value]\n    (let [oldstate state]\n      (._set-state this oldstate new-value)\n      (if (satisfies? IDeref ratom)\n        (if (= path [])\n          (reset! ratom new-value)\n          (swap! ratom assoc-in path new-value))\n        (ratom path new-value))\n      new-value))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek a))))\n  (-swap! [a f x]        (-reset! a (f (._peek a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek a) x y more)))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"RCursor\" {:val (-deref a)\n                                                      :path path}))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IHash\n  (-hash [_] (hash [ratom path])))\n\n(defn cursor\n  [^clj src path]\n  (assert (or (satisfies? IReactiveAtom src)\n              (and (ifn? src)\n                   (not (vector? src))))\n          (str \"src must be a reactive atom or a function, not \"\n               (pr-str src)\n               \" while attempting to get path: \"\n               (pr-str path)))\n  (->RCursor src path nil nil nil))\n\n\n;;; with-let support\n\n(defn with-let-destroy [v]\n  (when-some [f (.-destroy v)]\n    (f)))\n\n(defn with-let-values [key]\n  (if-some [c *ratom-context*]\n    (cached-reaction array c key nil with-let-destroy)\n    (array)))\n\n\n;;;; reaction\n\n(defprotocol IDisposable\n  (dispose! [this])\n  (add-on-dispose! [this f]))\n\n(defprotocol IRunnable\n  (run [this]))\n\n(defn- handle-reaction-change [^clj this sender old new]\n  (._handle-change this sender old new))\n\n;; Fields of a Reaction javascript object\n;; - auto_run\n;; - captured\n;; - caught\n;; - f\n;; - ratomGeneration\n;; - state\n;; - watches\n;; - watching\n(deftype Reaction [f ^:mutable state ^:mutable ^boolean dirty? ^boolean nocache?\n                   ^:mutable watching ^:mutable watches ^:mutable auto-run\n                   ^:mutable caught]\n  IAtom\n  IReactiveAtom\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]\n    (let [was-empty (empty? watches)]\n      (remove-w this key)\n      (when (and (not was-empty)\n                 (empty? watches)\n                 (nil? auto-run))\n        (dispose! this))))\n\n  IReset\n  (-reset! [a newval]\n    (assert (fn? (.-on-set a)) \"Reaction is read only; on-set is not allowed\")\n    (let [oldval state]\n      (set! state newval)\n      (.on-set a oldval newval)\n      (notify-w a oldval newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f (._peek-at a))))\n  (-swap! [a f x]        (-reset! a (f (._peek-at a) x)))\n  (-swap! [a f x y]      (-reset! a (f (._peek-at a) x y)))\n  (-swap! [a f x y more] (-reset! a (apply f (._peek-at a) x y more)))\n\n  Object\n  (_peek-at [this]\n    (binding [*ratom-context* nil]\n      (-deref this)))\n\n  (_handle-change [this sender oldval newval]\n    (when-not (or (identical? oldval newval)\n                  dirty?)\n      (if (nil? auto-run)\n        (do\n          (set! dirty? true)\n          (rea-enqueue this))\n        (if (true? auto-run)\n          (._run this false)\n          (auto-run this)))))\n\n  (_update-watching [this derefed]\n    (let [new (set derefed)\n          old (set watching)]\n      (set! watching derefed)\n      (doseq [w (s/difference new old)]\n        (-add-watch w this handle-reaction-change))\n      (doseq [w (s/difference old new)]\n        (-remove-watch w this))))\n\n  (_queued-run [this]\n    (when (and dirty? (some? watching))\n      (._run this true)))\n\n  (_try-capture [this f]\n    (try\n      (set! caught nil)\n      (deref-capture f this)\n      (catch :default e\n        (set! state e)\n        (set! caught e)\n        (set! dirty? false))))\n\n  (_run [this check]\n    (let [oldstate state\n          res (if check\n                (._try-capture this f)\n                (deref-capture f this))]\n      (when-not nocache?\n        (set! state res)\n        ;; Use = to determine equality from reactions, since\n        ;; they are likely to produce new data structures.\n        (when-not (or (nil? watches)\n                      (= oldstate res))\n          (notify-w this oldstate res)))\n      res))\n\n  (_set-opts [this {:keys [auto-run on-set on-dispose no-cache]}]\n    (when (some? auto-run)\n      (set! (.-auto-run this) auto-run))\n    (when (some? on-set)\n      (set! (.-on-set this) on-set))\n    (when (some? on-dispose)\n      (set! (.-on-dispose this) on-dispose))\n    (when (some? no-cache)\n      (set! (.-nocache? this) no-cache)))\n\n  IRunnable\n  (run [this]\n    (flush!)\n    (._run this false))\n\n  IDeref\n  (-deref [this]\n    (when-some [e caught]\n      (throw e))\n    (let [non-reactive (nil? *ratom-context*)]\n      (when non-reactive\n        (flush!))\n      (if (and non-reactive (nil? auto-run))\n        (when dirty?\n          (let [oldstate state]\n            (set! state (f))\n            (when-not (or (nil? watches) (= oldstate state))\n              (notify-w this oldstate state))))\n        (do\n          (notify-deref-watcher! this)\n          (when dirty?\n            (._run this false)))))\n    state)\n\n  IDisposable\n  (dispose! [this]\n    (let [s state\n          wg watching]\n      (set! watching nil)\n      (set! state nil)\n      (set! auto-run nil)\n      (set! dirty? true)\n      (doseq [w (set wg)]\n        (-remove-watch w this))\n      (when (some? (.-on-dispose this))\n        (.on-dispose this s))\n      (when-some [a (.-on-dispose-arr this)]\n        (dotimes [i (alength a)]\n          ((aget a i) this)))))\n\n  (add-on-dispose! [this f]\n    ;; f is called with the reaction as argument when it is no longer active\n    (if-some [a (.-on-dispose-arr this)]\n      (.push a f)\n      (set! (.-on-dispose-arr this) (array f))))\n\n  IEquiv\n  (-equiv [o other] (identical? o other))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Reaction\" {:val (-deref a)}))\n\n  IHash\n  (-hash [this] (goog/getUid this)))\n\n(defn flush! []\n  (loop []\n    (let [q rea-queue]\n      (when-not (nil? q)\n        (set! rea-queue nil)\n        (dotimes [i (alength q)]\n          (let [^Reaction r (aget q i)]\n            (._queued-run r)))\n        (recur)))))\n\n(set! batch/ratom-flush flush!)\n\n(defn make-reaction [f & {:keys [auto-run on-set on-dispose]}]\n  (let [reaction (->Reaction f nil true false nil nil nil nil)]\n    (._set-opts reaction {:auto-run auto-run\n                          :on-set on-set\n                          :on-dispose on-dispose})\n    reaction))\n\n\n\n(def ^:private temp-reaction (make-reaction nil))\n\n\n(defn run-in-reaction\n  \"Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`.\"\n  [f obj key run opts]\n  (let [r temp-reaction\n        res (deref-capture f r)]\n    (when-not (nil? (.-watching r))\n      (set! temp-reaction (make-reaction nil))\n      (._set-opts r opts)\n      (set! (.-f r) f)\n      (set! (.-auto-run r) #(run obj))\n      (obj/set obj key r))\n    res))\n\n(defn check-derefs [f]\n  (let [ctx (js-obj)\n        res (in-context ctx f)]\n    [res (some? (.-captured ctx))]))\n\n\n;;; wrap\n\n(deftype Wrapper [^:mutable state callback ^:mutable ^boolean changed\n                  ^:mutable watches]\n\n  IAtom\n\n  IDeref\n  (-deref [this]\n    (when (dev?)\n      (when (and changed (some? *ratom-context*))\n        (warn \"derefing stale wrap: \"\n              (pr-str this))))\n    state)\n\n  IReset\n  (-reset! [this newval]\n    (let [oldval state]\n      (set! changed true)\n      (set! state newval)\n      (when (some? watches)\n        (notify-w this oldval newval))\n      (callback newval)\n      newval))\n\n  ISwap\n  (-swap! [a f]          (-reset! a (f state)))\n  (-swap! [a f x]        (-reset! a (f state x)))\n  (-swap! [a f x y]      (-reset! a (f state x y)))\n  (-swap! [a f x y more] (-reset! a (apply f state x y more)))\n\n  IEquiv\n  (-equiv [this ^clj other]\n    (and (instance? Wrapper other)\n         ;; If either of the wrappers have changed, equality\n         ;; cannot be relied on.\n         (not changed)\n         (not (.-changed other))\n         (= state (.-state other))\n         (= callback (.-callback other))))\n\n  IWatchable\n  (-notify-watches [this old new] (notify-w this old new))\n  (-add-watch [this key f]        (add-w this key f))\n  (-remove-watch [this key]       (remove-w this key))\n\n  IPrintWithWriter\n  (-pr-writer [a w opts] (pr-atom a w opts \"Wrapper\" {:val (-deref a)})))\n\n(defn make-wrapper [value callback-fn args]\n  (->Wrapper value\n             (util/make-partial-fn callback-fn args)\n             false nil))\n\n\n\n\n#_(do\n  (defn ratom-perf []\n    (set! debug false)\n    (dotimes [_ 10]\n      (let [nite 100000\n            a (atom 0)\n            f (fn []\n                (quot @a 10))\n            mid (make-reaction f)\n            res (track! (fn []\n                          ;; (with-let [x 1])\n                          ;; @(track f)\n                          (inc @mid)\n                          ))]\n        @res\n        (time (dotimes [x nite]\n                (swap! a inc)\n                (flush!)))\n        (dispose! res))))\n  (ratom-perf))\n","~:reader-features",["^I",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["reagent.ratom/debug","reagent.ratom/generation","reagent.ratom/-running","cljs.core.atom","reagent.ratom/reactive?","reagent.ratom/*ratom-context*","reagent.ratom/running","cljs.core/deref","reagent.ratom/arr-len","x","reagent.ratom/arr-eq","y","len","i","or__4160__auto__","reagent.ratom/in-context","obj","f","*ratom-context*-orig-val__31588","*ratom-context*-temp-val__31589","reagent.ratom/deref-capture","r","res","c","reagent.ratom/notify-deref-watcher!","derefed","temp__5739__auto__","reagent.ratom/check-watches","old","new","cljs.core.swap_BANG_","cljs.core/+","cljs.core/count","reagent.ratom/add-w","this","key","w","cljs.core.assoc","reagent.ratom/remove-w","cljs.core.dissoc","reagent.ratom/notify-w","a","p1__31590#","p2__31591#","p3__31592#","cljs.core/reduce-kv","G__31593","k","reagent.ratom/pr-atom","writer","opts","s","v","cljs.core/-write","cljs.core/pr-writer","*ratom-context*-orig-val__31594","*ratom-context*-temp-val__31595","reagent.ratom/rea-queue","reagent.ratom/rea-enqueue","reagent.impl.batching/schedule","reagent.ratom/IReactiveAtom","cljs.core/PROTOCOL_SENTINEL","this__4404__auto__","writer__4405__auto__","opt__4406__auto__","reagent.ratom/RAtom","reagent.ratom/->RAtom","state","meta","validator","watches","o","other","new-value","old-value","more","cljs.core.apply","_","new-meta","goog/getUid","var_args","G__31599","reagent.ratom/atom","args-arr__4792__auto__","len__4771__auto__","i__4772__auto__","argseq__4793__auto__","cljs.core/IndexedSeq","p__31600","map__31601","cljs.core/--destructure-map","cljs.core.get","seq31597","G__31598","cljs.core/first","cljs.core/next","self__4758__auto__","reagent.ratom/cached-reaction","destroy","m","cljs.core/-deref","G__31602","G__31603","G__31604","reagent.ratom/make-reaction","cljs.core/dec","cljs.core/inc","reagent.ratom/Track","reagent.ratom/->Track","args","reaction","temp__5737__auto__","cljs.core._EQ_","cljs.core/hash","reagent.ratom/make-track","reagent.ratom/make-track!","t","G__31605","G__31606","G__31607","args__4777__auto__","argseq__4778__auto__","reagent.ratom/track","seq31608","G__31609","reagent.ratom/track!","seq31610","G__31611","reagent.ratom/RCursor","reagent.ratom/->RCursor","ratom","path","*ratom-context*-orig-val__31612","*ratom-context*-temp-val__31613","oldstate","newstate","cljs.core/native-satisfies?","cljs.core/IDeref","cljs.core.get_in","cljs.core/reset!","cljs.core/assoc-in","G__31615","G__31616","G__31617","G__31618","G__31619","G__31620","reagent.ratom/cursor","src","reagent.ratom/with-let-destroy","reagent.ratom/with-let-values","cljs.core/array","reagent$ratom$IDisposable$dispose_BANG_$dyn","x__4463__auto__","m__4464__auto__","reagent.ratom/dispose!","goog/typeOf","m__4461__auto__","cljs.core/missing-protocol","reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn","reagent.ratom/add-on-dispose!","reagent.ratom/IDisposable","reagent$ratom$IRunnable$run$dyn","reagent.ratom/run","reagent.ratom/IRunnable","reagent.ratom/handle-reaction-change","sender","p__31633","map__31634","reagent.ratom/Reaction","reagent.ratom/->Reaction","dirty?","nocache?","watching","auto-run","caught","was-empty","cljs.core/empty?","newval","oldval","G__31640","G__31641","G__31642","G__31643","G__31644","G__31645","*ratom-context*-orig-val__31622","*ratom-context*-temp-val__31623","cljs.core/set","seq__31624","cljs.core/seq","chunk__31625","count__31626","i__31627","temp__5735__auto__","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","clojure.set.difference","cljs.core/-add-watch","seq__31628","chunk__31629","count__31630","i__31631","cljs.core/-remove-watch","e31632","e","check","on-set","on-dispose","no-cache","reagent.ratom/flush!","non-reactive","wg","seq__31635","chunk__31636","count__31637","i__31638","n__4648__auto__","fexpr__31639","q","reagent.impl.batching/ratom-flush","p__31648","map__31649","seq31646","G__31647","reagent.ratom/temp-reaction","reagent.ratom/run-in-reaction","run","goog.object/set","reagent.ratom/check-derefs","ctx","reagent.ratom/Wrapper","reagent.ratom/->Wrapper","callback","changed","cljs.core/not","reagent.ratom/make-wrapper","value","callback-fn","reagent.impl.util/make-partial-fn"]],"~:used-vars",["^I",["~$cljs.core/PROTOCOL_SENTINEL","~$reagent.ratom/check-derefs","~$reagent.ratom/generation","~$reagent.ratom/make-track!","~$reagent.ratom/run","~$reagent.ratom/remove-w","~$cljs.core/=","~$reagent.ratom/->RAtom","~$cljs.core/-write","~$cljs.core/-deref","~$cljs.core/pr-writer","~$cljs.core/hash","~$cljs.core/-reset!","~$cljs.core/count","~$cljs.core/deref","~$reagent.ratom/arr-len","~$cljs.core/apply","~$goog/getUid","~$reagent.ratom/flush!","~$reagent.ratom/notify-deref-watcher!","~$cljs.core/dissoc","~$reagent.ratom/check-watches","~$reagent.ratom/with-let-destroy","~$cljs.core/chunk-rest","~$cljs.core/atom","~$reagent.ratom/debug","~$reagent.ratom/rea-enqueue","~$reagent.ratom/RCursor","~$reagent.ratom/make-wrapper","~$cljs.core/native-satisfies?","~$cljs.core/empty?","~$reagent.ratom/IReactiveAtom","~$reagent.ratom/track","~$reagent.impl.util/make-partial-fn","~$cljs.core/reset!","~$reagent.ratom/cached-reaction","~$reagent.ratom/Wrapper","~$cljs.core/-add-watch","~$reagent.ratom/track!","~$reagent.ratom/dispose!","~$reagent.ratom/->Reaction","~$reagent.ratom/running","~$reagent.ratom/make-reaction","~$reagent.ratom/IRunnable","~$reagent.ratom/notify-w","~$reagent.ratom/rea-queue","~$reagent.ratom/add-on-dispose!","~$reagent.impl.batching/ratom-flush","~$cljs.core/swap!","~$reagent.ratom/arr-eq","~$reagent.ratom/handle-reaction-change","~$goog.object/set","~$reagent.ratom/temp-reaction","~$cljs.core/-remove-watch","~$reagent.ratom/run-in-reaction","~$reagent.ratom/->Track","~$reagent.impl.batching/schedule","~$cljs.core/next","~$reagent.ratom/*ratom-context*","~$reagent.ratom/IDisposable","~$reagent.ratom/->Wrapper","~$reagent.ratom/Track","~$cljs.core/IDeref","~$reagent.ratom/cursor","~$cljs.core/not","~$reagent.ratom/make-track","~$reagent.ratom/add-w","~$cljs.core/assoc","~$cljs.core/assoc-in","~$reagent.ratom/-running","~$reagent.ratom/Reaction","~$reagent.ratom/RAtom","~$reagent.ratom/reactive?","~$reagent.ratom/atom","~$reagent.ratom/deref-capture","~$cljs.core/+","~$cljs.core/array","~$reagent.ratom/in-context","~$reagent.ratom/with-let-values","~$cljs.core/inc","~$reagent.ratom/->RCursor","~$cljs.core/chunked-seq?","~$reagent.ratom/pr-atom"]]],"~:cache-keys",["~#cmap",[["^1I","reagent/impl/batching.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^I",[]],"~:deps-syms",["^16","^15","^F","^12"]]],["^1I","goog/dom/tagname.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","~$goog.dom.HtmlElement"]]],["^1I","goog/math/math.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","~$goog.array","~$goog.asserts"]]],["^1I","goog/html/trustedtypes.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/labs/useragent/browser.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3W","~$goog.labs.userAgent.util","^14","~$goog.string.internal"]]],["^1I","goog/html/safeurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3Z"]]],["^1I","goog/array/array.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X"]]],["^1I","reagent/impl/util.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^15","~$clojure.string","~$clojure.walk","^14","^F"]]],["^1I","goog/debug/error.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/dom/nodetype.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","reagent/ratom.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^15","^12","^F","^17","^18","^14"]]],["^1I","goog/string/typedstring.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/object/object.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/dom/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X"]]],"~:SHADOW-TIMESTAMP",[1618349371000,1618349371000,1618117314000],["^1I","goog/math/long.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X","~$goog.reflect"]]],["^1I","goog/html/trustedresourceurl.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X","~$goog.fs.blob","^3[","~$goog.html.SafeScript","~$goog.html.trustedtypes","^41","^42","^43","^44"]]],["^1I","goog/string/internal.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/functions/functions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/html/safestyle.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3W","^3X","~$goog.html.SafeUrl","^43","^44","^3Z"]]],["^1I","goog/dom/safe.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4:","~$goog.html.SafeStyle","^4<","^40","~$goog.html.uncheckedconversions","^43","^3Z"]]],["^1I","clojure/walk.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^15"]]],["^1I","goog/structs/map.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1I","goog/html/safehtml.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3W","^3X","~$goog.dom.TagName","~$goog.dom.tags","^4:","^4@","~$goog.html.SafeStyleSheet","^4<","^40","^4;","^41","^42","~$goog.labs.userAgent.browser","^14","^43","^44","^3Z"]]],["^1I","goog/dom/tags.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^14"]]],["^1I","goog/fs/blob.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3W"]]],["^1I","goog/asserts/asserts.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1I","goog/uri/uri.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3W","^3X","~$goog.string","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1I","goog/i18n/bidi.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/fs/url.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/base.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",[]]],["^1I","goog/structs/structs.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3W","^14"]]],["^1I","clojure/string.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^15","^4J","~$goog.string.StringBuffer"]]],["^1I","goog/string/string.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","~$goog.dom.safe","^4A","^43","^3Z"]]],["^1I","goog/reflect/reflect.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/labs/useragent/util.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3Z"]]],["^1I","goog/string/stringbuffer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","goog/iter/iter.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3W","^3X","^4>","~$goog.math"]]],["^1I","goog/html/uncheckedconversions.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X","^4?","^4:","^4@","^4F","^4<","^40","^43","^3Z","^41"]]],["^1I","goog/dom/htmlelement.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16"]]],["^1I","cljs/core.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","~$goog.math.Long","~$goog.math.Integer","^4J","^14","^3W","~$goog.Uri","^4P"]]],["^1I","goog/html/safescript.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^43","^44","^4;","^3X"]]],["^1I","reagent/debug.cljs"],["a1dd4d40425bb2e1afad0fe72780b43ff394ccfa","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^15"]]],["^1I","goog/html/safestylesheet.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^43","^4@","^44","^3W","^14","^3X","^3Z"]]],["^1I","goog/math/integer.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^48"]]],["^1I","clojure/set.cljs"],["86bedf67c795c72bde3feb0415b41be8b95f2cbb","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^15"]]],["^1I","goog/uri/utils.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X","^4J"]]],["^1I","goog/string/const.js"],["b8c673dd84d8ed85c6d857e28afee5524a0ef82c","^3R",["^ ","^3S",null,"^3T",["^I",[]],"^3U",["^16","^3X","^44"]]]]],"~:clj-info",["^ ","jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/util.cljc",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1616986622000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/instant.clj",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1616986622000,"jar:file:/Users/min/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1616986622000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/core.cljc",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/errors.clj",1618117310000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer.cljc",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1616986622000,"jar:file:/Users/min/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1616986622000,"jar:file:/Users/min/.m2/repository/org/clojure/data.json/1.0.0/data.json-1.0.0.jar!/clojure/data/json.clj",1618145157000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map.clj",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64_vlq.clj",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1616986622000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/externs.clj",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/reader_types.clj",1618117310000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/tagged_literals.cljc",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/env.cljc",1618117314000,"jar:file:/Users/min/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/interop.clj",1618145164000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/analyzer/impl.cljc",1618117314000,"jar:file:/Users/min/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/ratom.clj",1618145164000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/source_map/base64.clj",1618117314000,"jar:file:/Users/min/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1616986622000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/compiler.cljc",1618117314000,"jar:file:/Users/min/.m2/repository/reagent/reagent/1.0.0/reagent-1.0.0.jar!/reagent/debug.clj",1618145164000,"jar:file:/Users/min/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader.clj",1618117310000,"jar:file:/Users/min/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/default_data_readers.clj",1618117310000,"jar:file:/Users/min/.m2/repository/org/clojure/tools.reader/1.3.3/tools.reader-1.3.3.jar!/clojure/tools/reader/impl/inspect.clj",1618117310000,"jar:file:/Users/min/.m2/repository/org/clojure/clojurescript/1.10.844/clojurescript-1.10.844.jar!/cljs/js_deps.cljc",1618117314000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","reagent/ratom.cljs","^7",1,"^8",5,"^9",1,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"~:shadow/protocol-prefixes",["^I",["reagent$ratom$IRunnable$","reagent$ratom$IDisposable$"]],"^D",["^ ","^E","^F","^G","^F"],"^H",["^I",["^J"]],"^K",["^ ","^L",["^ ","^M",["^N",[["^O","~$&","^P"]]],"^7",18,"^8",1,"^6","reagent/ratom.clj","^Q","^R","^S","^T","^U",true],"^V",["^ ","^M",["^N",[["~$&","^P"]]],"^7",6,"^8",1,"^6","reagent/ratom.clj","^Q","^W","^S","^T","^U",true],"^X",["^ ","^M",["^N",[["~$&","^P"]]],"^Y","Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.","^7",10,"^8",1,"^6","reagent/ratom.clj","^Q","^Z","^S","^T","^U",true]],"^Q","^T","^10",null,"^11",["^ ","^12","^12","^13","^14","^15","^15","^16","^16","^14","^14","^17","^17","^18","^18","^19","^12","~$s","^18","^1:","^17","^F","^F"],"^1;",["^I",["^1<","^1="]],"^1>",null,"~:defs",["^ ","~$pr-atom",["^ ","~:protocol-inline",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",107,"^8",8,"^9",107,"^:",15,"~:private",true,"^M",["^N",["~$quote",["^N",[["~$a","~$writer","~$opts","~$s","~$v"]]]]]],"^5M",true,"^Q","^3O","^6","reagent/ratom.cljs","^:",15,"~:method-params",["^N",[["~$a","^5O","^5P","~$s","~$v"]]],"~:protocol-impl",null,"~:arglists-meta",["^N",[null,null]],"^8",1,"~:variadic?",false,"^7",107,"~:ret-tag","~$any","^9",107,"~:max-fixed-arity",5,"~:fn-var",true,"^M",["^N",["^5N",["^N",[["~$a","^5O","^5P","~$s","~$v"]]]]]],"~$->RCursor",["^ ","^5L",null,"^5",["^ ","~:protocols",["^I",["~$cljs.core/IWatchable","~$cljs.core/IAtom","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/Object","~$cljs.core/IReset","~$cljs.core/ISwap","^2H","^3;","~$cljs.core/IPrintWithWriter"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"~:factory","~:positional","^7",248,"^9",248,"^M",["^N",["^5N",["^N",[["~$ratom","~$path","^V","~$state","~$watches"]]]]],"~:skip-protocol-flag",["^I",["^5[","^60","^61","^62","^64","^65","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/RCursor."],"^5Z",["^I",["^5[","^60","^61","^62","^63","^64","^65","^2H","^3;","^66"]],"^Q","^3M","^6","reagent/ratom.cljs","^:",17,"^5Q",["^N",[["^69","^6:","^V","^6;","^6<"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^67","^68","^7",248,"^5U","^2D","^9",248,"^5W",5,"^5X",true,"^M",["^N",["^5N",["^N",[["^69","^6:","^V","^6;","^6<"]]]]],"^6=",["^I",["^5[","^60","^61","^62","^64","^65","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/RCursor."],"~$notify-deref-watcher!",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",65,"^8",8,"^9",65,"^:",29,"^5M",true,"^M",["^N",["^5N",["^N",[["~$derefed"]]]]],"^Y","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"^5M",true,"^Q","^2<","^6","reagent/ratom.cljs","^:",29,"^5Q",["^N",[["^6?"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",65,"^5U",["^I",[null,"^5V","~$clj-nil"]],"^9",65,"^5W",1,"^5X",true,"^M",["^N",["^5N",["^N",[["^6?"]]]]],"^Y","Add `derefed` to the `captured` field of `*ratom-context*`.\n\n  See also `in-context`"],"~$rea-enqueue",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",117,"^8",8,"^9",117,"^:",19,"^5M",true,"^M",["^N",["^5N",["^N",[["~$r"]]]]]],"^5M",true,"^Q","^2C","^6","reagent/ratom.cljs","^:",19,"^5Q",["^N",[["~$r"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",117,"^5U","^5V","^9",117,"^5W",1,"^5X",true,"^M",["^N",["^5N",["^N",[["~$r"]]]]]],"~$in-context",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",38,"^8",8,"^9",38,"^:",18,"^5M",true,"^M",["^N",["^5N",["^N",[["^13","~$f"]]]]],"^Y","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"^5M",true,"^Q","^3J","^6","reagent/ratom.cljs","^:",18,"^5Q",["^N",[["^13","~$f"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",38,"^9",38,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["^13","~$f"]]]]],"^Y","When f is executed, if (f) derefs any ratoms, they are then added to 'obj.captured'(*ratom-context*).\n\n  See function notify-deref-watcher! to know how *ratom-context* is updated"],"~$make-track",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",228,"^8",7,"^9",228,"^:",17,"^M",["^N",["^5N",["^N",[["~$f","~$args"]]]]]],"^Q","^3>","^6","reagent/ratom.cljs","^:",17,"^5Q",["^N",[["~$f","^6D"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",228,"^5U","^3:","^9",228,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f","^6D"]]]]]],"~$RAtom",["^ ","~:num-fields",4,"^5Z",["^I",["^5[","^60","^61","^62","^64","^65","^2H","~$cljs.core/IMeta","^3;","^66","~$cljs.core/IWithMeta"]],"^Q","^3D","^6","reagent/ratom.cljs","^:",15,"~:type",true,"^8",10,"^7",127,"~:record",false,"^9",127,"~:tag","~$function","^6=",["^I",["^5[","^60","^61","^62","^64","^65","^6G","^3;","^66","^6H"]]],"^J",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",172,"^8",7,"^9",172,"^:",11,"^M",["^N",["^5N",["^N",[["~$x"],["~$x","~$&",["^ ","~:keys",["~$meta","~$validator"]]]]]]],"^Y","Like clojure.core/atom, except that it keeps track of derefs.","~:top-fn",["^ ","^5T",true,"~:fixed-arity",1,"^5W",1,"^5Q",[["~$x"]],"^M",["^N",[["~$x"],["~$x","~$&",["^ ","^6M",["^6N","^6O"]]]]],"^5S",["^N",[null,null]]]],"^Q","^3F","^6","reagent/ratom.cljs","^:",11,"^6P",["^ ","^5T",true,"^6Q",1,"^5W",1,"^5Q",[["~$x"]],"^M",["^N",[["~$x"],["~$x","~$&",["^ ","^6M",["^6N","^6O"]]]]],"^5S",["^N",[null,null]]],"^5Q",[["~$x"]],"^5R",null,"^6Q",1,"^5S",["^N",[null,null]],"^8",1,"^5T",true,"~:methods",[["^ ","^6Q",1,"^5T",false,"^6K","^3D"],["^ ","^6Q",1,"^5T",true,"^6K","^3D"]],"^7",172,"^9",172,"^5W",1,"^5X",true,"^M",["^N",[["~$x"],["~$x","~$&",["^ ","^6M",["^6N","^6O"]]]]],"^Y","Like clojure.core/atom, except that it keeps track of derefs."],"~$notify-w",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",91,"^8",8,"^9",91,"^:",16,"^5M",true,"^M",["^N",["^5N",["^N",[["~$this","~$old","~$new"]]]]]],"^5M",true,"^Q","^2U","^6","reagent/ratom.cljs","^:",16,"^5Q",["^N",[["^6T","^6U","^6V"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",91,"^5U","^6@","^9",91,"^5W",3,"^5X",true,"^M",["^N",["^5N",["^N",[["^6T","^6U","^6V"]]]]]],"~$->Reaction",["^ ","^5L",null,"^5",["^ ","^5Z",["^I",["^5[","^60","^61","^62","^63","^64","^65","^2H","^2T","^38","^3;","^66"]],"^6","reagent/ratom.cljs","^:",18,"^8",10,"^67","^68","^7",356,"^9",356,"^M",["^N",["^5N",["^N",[["~$f","^6;","~$dirty?","~$nocache?","~$watching","^6<","~$auto-run","~$caught"]]]]],"^6=",["^I",["^5[","^60","^61","^62","^64","^65","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/Reaction."],"^5Z",["^I",["^5[","^60","^61","^62","^63","^64","^65","^2H","^2T","^38","^3;","^66"]],"^Q","^2Q","^6","reagent/ratom.cljs","^:",18,"^5Q",["^N",[["~$f","^6;","^6X","^6Y","^6Z","^6<","^6[","^70"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^67","^68","^7",356,"^5U","^3C","^9",356,"^5W",8,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f","^6;","^6X","^6Y","^6Z","^6<","^6[","^70"]]]]],"^6=",["^I",["^5[","^60","^61","^62","^64","^65","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/Reaction."],"~$make-wrapper",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",603,"^8",7,"^9",603,"^:",19,"^M",["^N",["^5N",["^N",[["~$value","~$callback-fn","^6D"]]]]]],"^Q","^2E","^6","reagent/ratom.cljs","^:",19,"^5Q",["^N",[["^72","^73","^6D"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",603,"^5U","^2M","^9",603,"^5W",3,"^5X",true,"^M",["^N",["^5N",["^N",[["^72","^73","^6D"]]]]]],"~$IReactiveAtom",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","reagent/ratom.cljs","^:",27,"^8",14,"^7",125,"~:protocol-info",["^ ","^6R",["^ "]],"^9",125,"~:sigs",["^ "],"~:jsdoc",["^N",["@interface"]]],"^75",true,"^Q","^2H","^6","reagent/ratom.cljs","^:",27,"^8",1,"^7",125,"^76",["^ ","^6R",["^ "]],"~:info",null,"^9",125,"^6K","^5V","^77",["^ "],"~:impls",["^I",["^2D","^3:","^3C","^3D"]],"^78",["^N",["@interface"]]],"~$track",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",238,"^8",7,"^9",238,"^:",12,"^M",["^N",["^5N",["^N",[["~$f","~$&","^6D"]]]]],"^6P",["^ ","^5T",true,"^6Q",1,"^5W",1,"^5Q",[["^N",["~$f","^6D"]]],"^M",["^N",[["~$f","~$&","^6D"]]],"^5S",["^N",[null]]]],"^Q","^2I","^6","reagent/ratom.cljs","^:",12,"^6P",["^ ","^5T",true,"^6Q",1,"^5W",1,"^5Q",[["^N",["~$f","^6D"]]],"^M",["^N",[["~$f","~$&","^6D"]]],"^5S",["^N",[null]]],"^5Q",[["^N",["~$f","^6D"]]],"^5R",null,"^6Q",1,"^5S",["^N",[null]],"^8",1,"^5T",true,"^6R",[["^ ","^6Q",1,"^5T",true,"^6K","^3:"]],"^7",238,"^5U","^5V","^9",238,"^5W",1,"^5X",true,"^M",["^N",[["~$f","~$&","^6D"]]]],"~$dispose!",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",338,"^8",4,"^9",338,"^:",12,"~:protocol","^38","^Y",null,"^M",["^N",["^5N",["^N",[["^6T"]]]]]],"^7=","^38","^Q","^2P","^6","reagent/ratom.cljs","^:",12,"^5Q",["^N",[["^6T"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",337,"^5U","^5V","^9",338,"^5W",1,"^5X",true,"^M",["^N",["^5N",["^N",[["^6T"]]]]],"^Y",null],"~$arr-eq",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",29,"^8",17,"^9",29,"^:",23,"^6K","~$boolean","^5M",true,"^M",["^N",["^5N",["^N",[["~$x","~$y"]]]]]],"^5M",true,"^Q","^2Z","^6","reagent/ratom.cljs","^:",23,"^5Q",["^N",[["~$x","~$y"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",29,"^5U","^7?","^9",29,"^5W",2,"^6K","^7?","^5X",true,"^M",["^N",["^5N",["^N",[["~$x","~$y"]]]]]],"~$handle-reaction-change",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",344,"^8",8,"^9",344,"^:",30,"^5M",true,"^M",["^N",["^5N",["^N",[["^6T","~$sender","^6U","^6V"]]]]]],"^5M",true,"^Q","^2[","^6","reagent/ratom.cljs","^:",30,"^5Q",["^N",[["^6T","^7A","^6U","^6V"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",344,"^5U","^5V","^9",344,"^5W",4,"^5X",true,"^M",["^N",["^5N",["^N",[["^6T","^7A","^6U","^6V"]]]]]],"~$run",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",342,"^8",4,"^9",342,"^:",7,"^7=","^2T","^Y",null,"^M",["^N",["^5N",["^N",[["^6T"]]]]]],"^7=","^2T","^Q","^1Y","^6","reagent/ratom.cljs","^:",7,"^5Q",["^N",[["^6T"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",341,"^5U","^5V","^9",342,"^5W",1,"^5X",true,"^M",["^N",["^5N",["^N",[["^6T"]]]]],"^Y",null],"~$add-on-dispose!",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",339,"^8",4,"^9",339,"^:",19,"^7=","^38","^Y",null,"^M",["^N",["^5N",["^N",[["^6T","~$f"]]]]]],"^7=","^38","^Q","^2W","^6","reagent/ratom.cljs","^:",19,"^5Q",["^N",[["^6T","~$f"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",337,"^5U","^5V","^9",339,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["^6T","~$f"]]]]],"^Y",null],"~$temp-reaction",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",526,"^8",16,"^9",526,"^:",29,"^5M",true],"^5M",true,"^Q","^31","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",526,"^9",526,"^6K","^3C"],"~$make-track!",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",231,"^8",7,"^9",231,"^:",18,"^M",["^N",["^5N",["^N",[["~$f","^6D"]]]]]],"^Q","^1X","^6","reagent/ratom.cljs","^:",18,"^5Q",["^N",[["~$f","^6D"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",231,"^5U","^5V","^9",231,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f","^6D"]]]]]],"~$generation",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",14,"^8",20,"^9",14,"^:",30,"^5M",true],"^5M",true,"^Q","^1W","^6","reagent/ratom.cljs","^:",30,"^8",1,"^7",14,"^9",14,"^6K","~$number"],"~$run-in-reaction",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",529,"^8",7,"^9",529,"^:",22,"^M",["^N",["^5N",["^N",[["~$f","^13","~$key","^7B","^5P"]]]]],"^Y","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"^Q","^33","^6","reagent/ratom.cljs","^:",22,"^5Q",["^N",[["~$f","^13","^7I","^7B","^5P"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",529,"^5U","^5V","^9",529,"^5W",5,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f","^13","^7I","^7B","^5P"]]]]],"^Y","Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n   creates a new Reaction that watches those atoms and calls `run` whenever\n   any of those watched ratoms change.  Also, the new reaction is added to\n   list of 'watches' of each of the ratoms. The `run` parameter is a function\n   that should expect one argument.  It is passed `obj` when run.  The `opts`\n   are any options accepted by a Reaction and will be set on the newly created\n   Reaction. Sets the newly created Reaction to the `key` on `obj`."],"~$IDisposable",["^ ","^5",["^ ","^75",true,"^6","reagent/ratom.cljs","^:",25,"^8",14,"^7",337,"^76",["^ ","^6R",["^ ","^7<",[["^6T"]],"^7C",[["^6T","~$f"]]]],"^9",337,"^77",["^ ","~:dispose!",["^ ","^Q","^7<","^M",["^N",[["^6T"]]],"^Y",null],"~:add-on-dispose!",["^ ","^Q","^7C","^M",["^N",[["^6T","~$f"]]],"^Y",null]],"^78",["^N",["@interface"]]],"^75",true,"^Q","^38","^6","reagent/ratom.cljs","^:",25,"^8",1,"^7",337,"^76",["^ ","^6R",["^ ","^7<",[["^6T"]],"^7C",[["^6T","~$f"]]]],"^79",null,"^9",337,"^6K","^5V","^77",["^ ","^7K",["^ ","^Q","^7<","^M",["^N",[["^6T"]]],"^Y",null],"^7L",["^ ","^Q","^7C","^M",["^N",[["^6T","~$f"]]],"^Y",null]],"^7:",["^I",["^3C"]],"^78",["^N",["@interface"]]],"~$check-watches",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",76,"^8",8,"^9",76,"^:",21,"^5M",true,"^M",["^N",["^5N",["^N",[["^6U","^6V"]]]]]],"^5M",true,"^Q","^2>","^6","reagent/ratom.cljs","^:",21,"^5Q",["^N",[["^6U","^6V"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",76,"^9",76,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["^6U","^6V"]]]]]],"~$with-let-destroy",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",325,"^8",7,"^9",325,"^:",23,"^M",["^N",["^5N",["^N",[["~$v"]]]]]],"^Q","^2?","^6","reagent/ratom.cljs","^:",23,"^5Q",["^N",[["~$v"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",325,"^5U",["^I",["^5V","^6@"]],"^9",325,"^5W",1,"^5X",true,"^M",["^N",["^5N",["^N",[["~$v"]]]]]],"~$make-reaction",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",517,"^8",7,"^9",517,"^:",20,"^M",["^N",["^5N",["^N",[["~$f","~$&",["^ ","^6M",["^6[","~$on-set","~$on-dispose"]]]]]]],"^6P",["^ ","^5T",true,"^6Q",1,"^5W",1,"^5Q",[["^N",["~$f",["^ ","^6M",["^6[","^7P","^7Q"]]]]],"^M",["^N",[["~$f","~$&",["^ ","^6M",["^6[","^7P","^7Q"]]]]],"^5S",["^N",[null]]]],"^Q","^2S","^6","reagent/ratom.cljs","^:",20,"^6P",["^ ","^5T",true,"^6Q",1,"^5W",1,"^5Q",[["^N",["~$f",["^ ","^6M",["^6[","^7P","^7Q"]]]]],"^M",["^N",[["~$f","~$&",["^ ","^6M",["^6[","^7P","^7Q"]]]]],"^5S",["^N",[null]]],"^5Q",[["^N",["~$f",["^ ","^6M",["^6[","^7P","^7Q"]]]]],"^5R",null,"^6Q",1,"^5S",["^N",[null]],"^8",1,"^5T",true,"^6R",[["^ ","^6Q",1,"^5T",true,"^6K","^3C"]],"^7",517,"^5U","^5V","^9",517,"^5W",1,"^5X",true,"^M",["^N",[["~$f","~$&",["^ ","^6M",["^6[","^7P","^7Q"]]]]]],"~$add-w",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",81,"^8",8,"^9",81,"^:",13,"^5M",true,"^M",["^N",["^5N",["^N",[["^6T","^7I","~$f"]]]]]],"^5M",true,"^Q","^3?","^6","reagent/ratom.cljs","^:",13,"^5Q",["^N",[["^6T","^7I","~$f"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",81,"^9",81,"^5W",3,"^5X",true,"^M",["^N",["^5N",["^N",[["^6T","^7I","~$f"]]]]]],"~$Reaction",["^ ","^6F",8,"^5Z",["^I",["^5[","^60","^61","^62","^63","^64","^65","^2H","^2T","^38","^3;","^66"]],"^Q","^3C","^6","reagent/ratom.cljs","^:",18,"^6I",true,"^8",10,"^7",356,"^6J",false,"^9",356,"^6K","^6L","^6=",["^I",["^5[","^60","^61","^62","^64","^65","^3;","^66"]]],"~$flush!",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",505,"^8",7,"^9",505,"^:",13,"^M",["^N",["^5N",["^N",[[]]]]]],"^Q","^2;","^6","reagent/ratom.cljs","^:",13,"^5Q",["^N",[[]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",505,"^5U","^6@","^9",505,"^5W",0,"^5X",true,"^M",["^N",["^5N",["^N",[[]]]]]],"~$RCursor",["^ ","^6F",5,"^5Z",["^I",["^5[","^60","^61","^62","^63","^64","^65","^2H","^3;","^66"]],"^Q","^2D","^6","reagent/ratom.cljs","^:",17,"^6I",true,"^8",10,"^7",248,"^6J",false,"^9",248,"^6K","^6L","^6=",["^I",["^5[","^60","^61","^62","^64","^65","^3;","^66"]]],"~$cached-reaction",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",182,"^8",8,"^9",182,"^:",23,"^5M",true,"^M",["^N",["^5N",["^N",[["~$f","~$o","~$k","^13","~$destroy"]]]]]],"^5M",true,"^Q","^2L","^6","reagent/ratom.cljs","^:",23,"^5Q",["^N",[["~$f","~$o","~$k","^13","^7W"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",182,"^5U","^5V","^9",182,"^5W",5,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f","~$o","~$k","^13","^7W"]]]]]],"~$Track",["^ ","^6F",3,"^5Z",["^I",["^61","^62","^2H","^3;","^66"]],"^Q","^3:","^6","reagent/ratom.cljs","^:",15,"^6I",true,"^8",10,"^7",206,"^6J",false,"^9",206,"^6K","^6L","^6=",["^I",["^61","^62","^3;","^66"]]],"~$debug",["^ ","^Q","^2B","^6","reagent/ratom.cljs","^7",13,"^8",1,"^9",13,"^:",24,"^6K","^7?","^5",["^ ","^6","reagent/ratom.cljs","^7",13,"^8",19,"^9",13,"^:",24,"^6K","^7?"]],"~$-running",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",15,"^8",20,"^9",15,"^:",28,"^5M",true],"^5M",true,"^Q","^3B","^6","reagent/ratom.cljs","^:",28,"^8",1,"^7",15,"^9",15,"^6K","~$cljs.core/Atom"],"~$cursor",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",311,"^8",7,"^9",311,"^:",13,"^M",["^N",["^5N",["^N",[["~$src","^6:"]]]]]],"^Q","^3<","^6","reagent/ratom.cljs","^:",13,"^5Q",["^N",[["^81","^6:"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",311,"^5U","^2D","^9",311,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["^81","^6:"]]]]]],"~$Wrapper",["^ ","^6F",4,"^5Z",["^I",["^5[","^60","^61","^64","^65","^3;","^66"]],"^Q","^2M","^6","reagent/ratom.cljs","^:",17,"^6I",true,"^8",10,"^7",556,"^6J",false,"^9",556,"^6K","^6L","^6=",["^I",["^5[","^60","^61","^64","^65","^3;","^66"]]],"~$running",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",23,"^8",7,"^9",23,"^:",14,"^M",["^N",["^5N",["^N",[[]]]]]],"^Q","^2R","^6","reagent/ratom.cljs","^:",14,"^5Q",["^N",[[]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",23,"^5U","^7G","^9",23,"^5W",0,"^5X",true,"^M",["^N",["^5N",["^N",[[]]]]]],"~$IRunnable",["^ ","^5",["^ ","^75",true,"^6","reagent/ratom.cljs","^:",23,"^8",14,"^7",341,"^76",["^ ","^6R",["^ ","^7B",[["^6T"]]]],"^9",341,"^77",["^ ","~:run",["^ ","^Q","^7B","^M",["^N",[["^6T"]]],"^Y",null]],"^78",["^N",["@interface"]]],"^75",true,"^Q","^2T","^6","reagent/ratom.cljs","^:",23,"^8",1,"^7",341,"^76",["^ ","^6R",["^ ","^7B",[["^6T"]]]],"^79",null,"^9",341,"^6K","^5V","^77",["^ ","^85",["^ ","^Q","^7B","^M",["^N",[["^6T"]]],"^Y",null]],"^7:",["^I",["^3C"]],"^78",["^N",["@interface"]]],"~$reactive?",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",17,"^8",16,"^9",17,"^:",25,"^6K","^7?","^M",["^N",["^5N",["^N",[[]]]]]],"^Q","^3E","^6","reagent/ratom.cljs","^:",25,"^5Q",["^N",[[]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",17,"^5U","^7?","^9",17,"^5W",0,"^6K","^7?","^5X",true,"^M",["^N",["^5N",["^N",[[]]]]]],"~$deref-capture",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",46,"^8",8,"^9",46,"^:",21,"^5M",true,"^M",["^N",["^5N",["^N",[["~$f","~$r"]]]]],"^Y","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"^5M",true,"^Q","^3G","^6","reagent/ratom.cljs","^:",21,"^5Q",["^N",[["~$f","~$r"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",46,"^5U","^5V","^9",46,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f","~$r"]]]]],"^Y","Returns `(in-context f r)`.  Calls `_update-watching` on r with any\n  `deref`ed atoms captured during `in-context`, if any differ from the\n  `watching` field of r.  Clears the `dirty?` flag on r.\n\n  Inside '_update-watching' along with adding the ratoms in 'r.watching' of reaction,\n  the reaction is also added to the list of watches on each ratoms f derefs."],"~$rea-queue",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",115,"^8",20,"^9",115,"^:",29,"^5M",true],"^5M",true,"^Q","^2V","^6","reagent/ratom.cljs","^:",29,"^8",1,"^7",115,"^9",115,"^6K","^6@"],"~$with-let-values",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",329,"^8",7,"^9",329,"^:",22,"^M",["^N",["^5N",["^N",[["^7I"]]]]]],"^Q","^3K","^6","reagent/ratom.cljs","^:",22,"^5Q",["^N",[["^7I"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",329,"^5U",["^I",["^5V","~$array"]],"^9",329,"^5W",1,"^5X",true,"^M",["^N",["^5N",["^N",[["^7I"]]]]]],"~$track!",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",242,"^8",7,"^9",242,"^:",13,"^M",["^N",["^5N",["^N",[["~$f","~$&","^6D"]]]]],"^6P",["^ ","^5T",true,"^6Q",1,"^5W",1,"^5Q",[["^N",["~$f","^6D"]]],"^M",["^N",[["~$f","~$&","^6D"]]],"^5S",["^N",[null]]]],"^Q","^2O","^6","reagent/ratom.cljs","^:",13,"^6P",["^ ","^5T",true,"^6Q",1,"^5W",1,"^5Q",[["^N",["~$f","^6D"]]],"^M",["^N",[["~$f","~$&","^6D"]]],"^5S",["^N",[null]]],"^5Q",[["^N",["~$f","^6D"]]],"^5R",null,"^6Q",1,"^5S",["^N",[null]],"^8",1,"^5T",true,"^6R",[["^ ","^6Q",1,"^5T",true,"^6K","^5V"]],"^7",242,"^5U","^5V","^9",242,"^5W",1,"^5X",true,"^M",["^N",[["~$f","~$&","^6D"]]]],"~$*ratom-context*",["^ ","^5",["^ ","^6","reagent/ratom.cljs","^7",12,"^8",20,"^9",12,"^:",35,"~:dynamic",true,"~:declared",true],"^Q","^37","^6","reagent/ratom.cljs","^:",35,"^8",1,"^8=",true,"^7",12,"^8>",true,"^9",12,"^6K","^5V"],"~$check-derefs",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",548,"^8",7,"^9",548,"^:",19,"^M",["^N",["^5N",["^N",[["~$f"]]]]]],"^Q","^1V","^6","reagent/ratom.cljs","^:",19,"^5Q",["^N",[["~$f"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",548,"^5U","~$cljs.core/IVector","^9",548,"^5W",1,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f"]]]]]],"~$remove-w",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",86,"^8",8,"^9",86,"^:",16,"^5M",true,"^M",["^N",["^5N",["^N",[["^6T","^7I"]]]]]],"^5M",true,"^Q","^1Z","^6","reagent/ratom.cljs","^:",16,"^5Q",["^N",[["^6T","^7I"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",86,"^9",86,"^5W",2,"^5X",true,"^M",["^N",["^5N",["^N",[["^6T","^7I"]]]]]],"~$->Wrapper",["^ ","^5L",null,"^5",["^ ","^5Z",["^I",["^5[","^60","^61","^64","^65","^3;","^66"]],"^6","reagent/ratom.cljs","^:",17,"^8",10,"^67","^68","^7",556,"^9",556,"^M",["^N",["^5N",["^N",[["^6;","~$callback","~$changed","^6<"]]]]],"^6=",["^I",["^5[","^60","^61","^64","^65","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/Wrapper."],"^5Z",["^I",["^5[","^60","^61","^64","^65","^3;","^66"]],"^Q","^39","^6","reagent/ratom.cljs","^:",17,"^5Q",["^N",[["^6;","^8C","^8D","^6<"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^67","^68","^7",556,"^5U","^2M","^9",556,"^5W",4,"^5X",true,"^M",["^N",["^5N",["^N",[["^6;","^8C","^8D","^6<"]]]]],"^6=",["^I",["^5[","^60","^61","^64","^65","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/Wrapper."],"~$arr-len",["^ ","^5L",null,"^5",["^ ","^6","reagent/ratom.cljs","^7",26,"^8",16,"^9",26,"^:",23,"^6K","^7G","^5M",true,"^M",["^N",["^5N",["^N",[["~$x"]]]]]],"^5M",true,"^Q","^28","^6","reagent/ratom.cljs","^:",23,"^5Q",["^N",[["~$x"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^7",26,"^5U","^7G","^9",26,"^5W",1,"^6K","^7G","^5X",true,"^M",["^N",["^5N",["^N",[["~$x"]]]]]],"~$->RAtom",["^ ","^5L",null,"^5",["^ ","^5Z",["^I",["^5[","^60","^61","^62","^64","^65","^2H","^6G","^3;","^66","^6H"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^67","^68","^7",127,"^9",127,"^M",["^N",["^5N",["^N",[["^6;","^6N","^6O","^6<"]]]]],"^6=",["^I",["^5[","^60","^61","^62","^64","^65","^6G","^3;","^66","^6H"]],"^Y","Positional factory function for reagent.ratom/RAtom."],"^5Z",["^I",["^5[","^60","^61","^62","^64","^65","^2H","^6G","^3;","^66","^6H"]],"^Q","^20","^6","reagent/ratom.cljs","^:",15,"^5Q",["^N",[["^6;","^6N","^6O","^6<"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^67","^68","^7",127,"^5U","^3D","^9",127,"^5W",4,"^5X",true,"^M",["^N",["^5N",["^N",[["^6;","^6N","^6O","^6<"]]]]],"^6=",["^I",["^5[","^60","^61","^62","^64","^65","^6G","^3;","^66","^6H"]],"^Y","Positional factory function for reagent.ratom/RAtom."],"~$->Track",["^ ","^5L",null,"^5",["^ ","^5Z",["^I",["^61","^62","^2H","^3;","^66"]],"^6","reagent/ratom.cljs","^:",15,"^8",10,"^67","^68","^7",206,"^9",206,"^M",["^N",["^5N",["^N",[["~$f","^6D","^V"]]]]],"^6=",["^I",["^61","^62","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/Track."],"^5Z",["^I",["^61","^62","^2H","^3;","^66"]],"^Q","^34","^6","reagent/ratom.cljs","^:",15,"^5Q",["^N",[["~$f","^6D","^V"]]],"^5R",null,"^5S",["^N",[null,null]],"^8",1,"^5T",false,"^67","^68","^7",206,"^5U","^3:","^9",206,"^5W",3,"^5X",true,"^M",["^N",["^5N",["^N",[["~$f","^6D","^V"]]]]],"^6=",["^I",["^61","^62","^3;","^66"]],"^Y","Positional factory function for reagent.ratom/Track."]],"^1=",["^ ","^T","^T","^F","^F","^15","^15"],"~:cljs.analyzer/constants",["^ ","^1;",["^I",["~:path","~:on-set","^70","^6Z","^7?","^V","^8C","^5","~:else","^6:","^6D","~:validator","^6<","^6N","~:val","^6O","^6X","~:no-cache","^69","^6;","~:auto-run","~:on-dispose","~:f","^6K","~:mutable","^8D","^6[","^6Y","~$f"]],"~:order",["^8M","^6;","^8Q","^6N","^6O","^6<","^5","^8L","^8K","^8P","~:f","~$f","^6D","^V","^8O","^8I","^69","^6:","^8J","^8N","^6X","^6K","^7?","^6Y","^6Z","^6[","^70","^8C","^8D"]],"^1E",["^ ","^1=",["^I",[]],"^1<",["^I",[]]],"^1F",["^ "],"^1G",["^16","^15","^12","^F","^17","^18","^14"]],"^S","^T","~:ns-specs",["^ "],"~:ns-spec-vars",["^I",[]],"~:compiler-options",["^3Q",[["^8U","~:static-fns"],true,["^8U","~:shadow-tweaks"],null,["^8U","~:source-map-inline"],null,["^8U","~:elide-asserts"],true,["^8U","~:optimize-constants"],null,["^8U","^1L"],null,["^8U","~:external-config"],null,["^8U","~:tooling-config"],null,["^8U","~:emit-constants"],null,["^8U","~:load-tests"],false,["^8U","~:form-size-threshold"],null,["^8U","~:data-readers"],null,["^8U","~:infer-externs"],"~:auto",["^8U","^1N"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:release",["^8U","~:fn-invoke-direct"],null,["^8U","~:source-map"],null]]]