["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/nthRoot.js"],"~:js","shadow$provide[100]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createNthRootNumber=a.createNthRoot=void 0;c=b(25);var q=b(84),f=b(89),u=b(90),k=b(76),t=b(87),p=b(77),g=b(50);b=(0,c.factory)(\"nthRoot\",[\"typed\",\"matrix\",\"equalScalar\",\"BigNumber\"],function(d){function l(F,E){var G=v.precision,I=v.clone({precision:G+2}),L=new v(0),M=new I(1),S=E.isNegative();S&&(E=E.neg());if(E.isZero())throw Error(\"Root must be non-zero\");if(F.isNegative()&&!E.abs().mod(2).equals(1))throw Error(\"Root must be odd when a is negative.\");\nif(F.isZero())return S?new I(Infinity):0;if(!F.isFinite())return S?L:F;E=F.abs().pow(M.div(E));E=F.isNeg()?E.neg():E;return new v((S?M.div(E):E).toPrecision(G))}var h=d.typed,n=d.matrix,r=d.equalScalar,v=d.BigNumber,C=(0,q.createAlgorithm01)({typed:h}),z=(0,f.createAlgorithm02)({typed:h,equalScalar:r}),w=(0,u.createAlgorithm06)({typed:h,equalScalar:r}),B=(0,k.createAlgorithm11)({typed:h,equalScalar:r}),x=(0,t.createAlgorithm13)({typed:h}),D=(0,p.createAlgorithm14)({typed:h});return h(\"nthRoot\",{number:function(F){return(0,\ng.nthRootNumber)(F,2)},\"number, number\":g.nthRootNumber,BigNumber:function(F){return l(F,new v(2))},Complex:function(F){throw Error(\"Complex number not supported in function nthRoot. Use nthRoots instead.\");},\"Complex, number\":function(F,E){throw Error(\"Complex number not supported in function nthRoot. Use nthRoots instead.\");},\"BigNumber, BigNumber\":l,\"Array | Matrix\":function(F){return this(F,2)},\"SparseMatrix, SparseMatrix\":function(F,E){if(1===E.density())return w(F,E,this);throw Error(\"Root must be non-zero\");\n},\"SparseMatrix, DenseMatrix\":function(F,E){return z(E,F,this,!0)},\"DenseMatrix, SparseMatrix\":function(F,E){if(1===E.density())return C(F,E,this,!1);throw Error(\"Root must be non-zero\");},\"DenseMatrix, DenseMatrix\":function(F,E){return x(F,E,this)},\"Array, Array\":function(F,E){return this(n(F),n(E)).valueOf()},\"Array, Matrix\":function(F,E){return this(n(F),E)},\"Matrix, Array\":function(F,E){return this(F,n(E))},\"SparseMatrix, number | BigNumber\":function(F,E){return B(F,E,this,!1)},\"DenseMatrix, number | BigNumber\":function(F,\nE){return D(F,E,this,!1)},\"number | BigNumber, SparseMatrix\":function(F,E){if(1===E.density())return B(E,F,this,!0);throw Error(\"Root must be non-zero\");},\"number | BigNumber, DenseMatrix\":function(F,E){return D(E,F,this,!0)},\"Array, number | BigNumber\":function(F,E){return this(n(F),E).valueOf()},\"number | BigNumber, Array\":function(F,E){return this(F,n(E)).valueOf()}})});a.createNthRoot=b;b=(0,c.factory)(\"nthRoot\",[\"typed\"],function(d){d=d.typed;return d(\"nthRoot\",{number:g.nthRootNumber,\"number, number\":g.nthRootNumber})});\na.createNthRootNumber=b}","~:source","shadow$provide[100] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNthRootNumber = exports.createNthRoot = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm06.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'nthRoot';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber'];\nvar createNthRoot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      _BigNumber = _ref.BigNumber;\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm02 = (0, _algorithm2.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm06 = (0, _algorithm3.createAlgorithm06)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm5.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm6.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the nth root of a value.\n   * The principal nth root of a positive real number A, is the positive real\n   * solution of the equation\n   *\n   *     x^root = A\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *     math.nthRoot(a)\n   *     math.nthRoot(a, root)\n   *\n   * Examples:\n   *\n   *     math.nthRoot(9, 2)    // returns 3, as 3^2 == 9\n   *     math.sqrt(9)          // returns 3, as 3^2 == 9\n   *     math.nthRoot(64, 3)   // returns 4, as 4^3 == 64\n   *\n   * See also:\n   *\n   *     sqrt, pow\n   *\n   * @param {number | BigNumber | Array | Matrix | Complex} a\n   *              Value for which to calculate the nth root\n   * @param {number | BigNumber} [root=2]    The root.\n   * @return {number | Complex | Array | Matrix} Returns the nth root of `a`\n   */\n\n  var complexErr = '' + 'Complex number not supported in function nthRoot. ' + 'Use nthRoots instead.';\n  return typed(name, {\n    number: function number(x) {\n      return (0, _index.nthRootNumber)(x, 2);\n    },\n    'number, number': _index.nthRootNumber,\n    BigNumber: function BigNumber(x) {\n      return _bigNthRoot(x, new _BigNumber(2));\n    },\n    Complex: function Complex(x) {\n      throw new Error(complexErr);\n    },\n    'Complex, number': function ComplexNumber(x, y) {\n      throw new Error(complexErr);\n    },\n    'BigNumber, BigNumber': _bigNthRoot,\n    'Array | Matrix': function ArrayMatrix(x) {\n      return this(x, 2);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse + sparse\n        return algorithm06(x, y, this);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // dense + sparse\n        return algorithm01(x, y, this, false);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // density must be one (no zeros in matrix)\n      if (y.density() === 1) {\n        // sparse - scalar\n        return algorithm11(y, x, this, true);\n      } else {\n        // throw exception\n        throw new Error('Root must be non-zero');\n      }\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y)).valueOf();\n    }\n  });\n  /**\n   * Calculate the nth root of a for BigNumbers, solve x^root == a\n   * https://rosettacode.org/wiki/Nth_root#JavaScript\n   * @param {BigNumber} a\n   * @param {BigNumber} root\n   * @private\n   */\n\n  function _bigNthRoot(a, root) {\n    var precision = _BigNumber.precision;\n\n    var Big = _BigNumber.clone({\n      precision: precision + 2\n    });\n\n    var zero = new _BigNumber(0);\n    var one = new Big(1);\n    var inv = root.isNegative();\n\n    if (inv) {\n      root = root.neg();\n    }\n\n    if (root.isZero()) {\n      throw new Error('Root must be non-zero');\n    }\n\n    if (a.isNegative() && !root.abs().mod(2).equals(1)) {\n      throw new Error('Root must be odd when a is negative.');\n    } // edge cases zero and infinity\n\n\n    if (a.isZero()) {\n      return inv ? new Big(Infinity) : 0;\n    }\n\n    if (!a.isFinite()) {\n      return inv ? zero : a;\n    }\n\n    var x = a.abs().pow(one.div(root)); // If a < 0, we require that root is an odd integer,\n    // so (-1) ^ (1/root) = -1\n\n    x = a.isNeg() ? x.neg() : x;\n    return new _BigNumber((inv ? one.div(x) : x).toPrecision(precision));\n  }\n});\nexports.createNthRoot = createNthRoot;\nvar createNthRootNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, {\n    number: _index.nthRootNumber,\n    'number, number': _index.nthRootNumber\n  });\n});\nexports.createNthRootNumber = createNthRootNumber;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$plain$number$index","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm06","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13"]],"~:properties",["^5",["precision","typed","Complex","__esModule","value","equalScalar","number","BigNumber","createNthRoot","createNthRootNumber"]],"~:compiled-at",1619135723784,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$nthRoot.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/nthRoot.js\"],\n\"sourcesContent\":[\"shadow$provide[100] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createNthRootNumber = exports.createNthRoot = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm01.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm02.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm06.js\\\");\\n\\nvar _algorithm4 = require(\\\"../../type/matrix/utils/algorithm11.js\\\");\\n\\nvar _algorithm5 = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm6 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar _index = require(\\\"../../plain/number/index.js\\\");\\n\\nvar name = 'nthRoot';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber'];\\nvar createNthRoot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      _BigNumber = _ref.BigNumber;\\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\\n    typed: typed\\n  });\\n  var algorithm02 = (0, _algorithm2.createAlgorithm02)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm06 = (0, _algorithm3.createAlgorithm06)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm13 = (0, _algorithm5.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm6.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Calculate the nth root of a value.\\n   * The principal nth root of a positive real number A, is the positive real\\n   * solution of the equation\\n   *\\n   *     x^root = A\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *     math.nthRoot(a)\\n   *     math.nthRoot(a, root)\\n   *\\n   * Examples:\\n   *\\n   *     math.nthRoot(9, 2)    // returns 3, as 3^2 == 9\\n   *     math.sqrt(9)          // returns 3, as 3^2 == 9\\n   *     math.nthRoot(64, 3)   // returns 4, as 4^3 == 64\\n   *\\n   * See also:\\n   *\\n   *     sqrt, pow\\n   *\\n   * @param {number | BigNumber | Array | Matrix | Complex} a\\n   *              Value for which to calculate the nth root\\n   * @param {number | BigNumber} [root=2]    The root.\\n   * @return {number | Complex | Array | Matrix} Returns the nth root of `a`\\n   */\\n\\n  var complexErr = '' + 'Complex number not supported in function nthRoot. ' + 'Use nthRoots instead.';\\n  return typed(name, {\\n    number: function number(x) {\\n      return (0, _index.nthRootNumber)(x, 2);\\n    },\\n    'number, number': _index.nthRootNumber,\\n    BigNumber: function BigNumber(x) {\\n      return _bigNthRoot(x, new _BigNumber(2));\\n    },\\n    Complex: function Complex(x) {\\n      throw new Error(complexErr);\\n    },\\n    'Complex, number': function ComplexNumber(x, y) {\\n      throw new Error(complexErr);\\n    },\\n    'BigNumber, BigNumber': _bigNthRoot,\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      return this(x, 2);\\n    },\\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\\n      // density must be one (no zeros in matrix)\\n      if (y.density() === 1) {\\n        // sparse + sparse\\n        return algorithm06(x, y, this);\\n      } else {\\n        // throw exception\\n        throw new Error('Root must be non-zero');\\n      }\\n    },\\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\\n      return algorithm02(y, x, this, true);\\n    },\\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\\n      // density must be one (no zeros in matrix)\\n      if (y.density() === 1) {\\n        // dense + sparse\\n        return algorithm01(x, y, this, false);\\n      } else {\\n        // throw exception\\n        throw new Error('Root must be non-zero');\\n      }\\n    },\\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\\n      return algorithm13(x, y, this);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y));\\n    },\\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\\n      return algorithm11(x, y, this, false);\\n    },\\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\\n      return algorithm14(x, y, this, false);\\n    },\\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\\n      // density must be one (no zeros in matrix)\\n      if (y.density() === 1) {\\n        // sparse - scalar\\n        return algorithm11(y, x, this, true);\\n      } else {\\n        // throw exception\\n        throw new Error('Root must be non-zero');\\n      }\\n    },\\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\\n      return algorithm14(y, x, this, true);\\n    },\\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y).valueOf();\\n    },\\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y)).valueOf();\\n    }\\n  });\\n  /**\\n   * Calculate the nth root of a for BigNumbers, solve x^root == a\\n   * https://rosettacode.org/wiki/Nth_root#JavaScript\\n   * @param {BigNumber} a\\n   * @param {BigNumber} root\\n   * @private\\n   */\\n\\n  function _bigNthRoot(a, root) {\\n    var precision = _BigNumber.precision;\\n\\n    var Big = _BigNumber.clone({\\n      precision: precision + 2\\n    });\\n\\n    var zero = new _BigNumber(0);\\n    var one = new Big(1);\\n    var inv = root.isNegative();\\n\\n    if (inv) {\\n      root = root.neg();\\n    }\\n\\n    if (root.isZero()) {\\n      throw new Error('Root must be non-zero');\\n    }\\n\\n    if (a.isNegative() && !root.abs().mod(2).equals(1)) {\\n      throw new Error('Root must be odd when a is negative.');\\n    } // edge cases zero and infinity\\n\\n\\n    if (a.isZero()) {\\n      return inv ? new Big(Infinity) : 0;\\n    }\\n\\n    if (!a.isFinite()) {\\n      return inv ? zero : a;\\n    }\\n\\n    var x = a.abs().pow(one.div(root)); // If a < 0, we require that root is an odd integer,\\n    // so (-1) ^ (1/root) = -1\\n\\n    x = a.isNeg() ? x.neg() : x;\\n    return new _BigNumber((inv ? one.div(x) : x).toPrecision(precision));\\n  }\\n});\\nexports.createNthRoot = createNthRoot;\\nvar createNthRootNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\\n  var typed = _ref2.typed;\\n  return typed(name, {\\n    number: _index.nthRootNumber,\\n    'number, number': _index.nthRootNumber\\n  });\\n});\\nexports.createNthRootNumber = createNthRootNumber;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createNthRootNumber\",\"createNthRoot\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_algorithm4\",\"_algorithm5\",\"_algorithm6\",\"_index\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_bigNthRoot\",\"a\",\"root\",\"precision\",\"_BigNumber\",\"Big\",\"clone\",\"zero\",\"one\",\"inv\",\"isNegative\",\"neg\",\"isZero\",\"Error\",\"abs\",\"mod\",\"equals\",\"Infinity\",\"isFinite\",\"x\",\"pow\",\"div\",\"isNeg\",\"toPrecision\",\"typed\",\"matrix\",\"equalScalar\",\"BigNumber\",\"algorithm01\",\"createAlgorithm01\",\"algorithm02\",\"createAlgorithm02\",\"algorithm06\",\"createAlgorithm06\",\"algorithm11\",\"createAlgorithm11\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"number\",\"nthRootNumber\",\"Complex\",\"complexErr\",\"ComplexNumber\",\"y\",\"ArrayMatrix\",\"SparseMatrixSparseMatrix\",\"density\",\"SparseMatrixDenseMatrix\",\"DenseMatrixSparseMatrix\",\"DenseMatrixDenseMatrix\",\"ArrayArray\",\"valueOf\",\"MatrixArray\",\"SparseMatrixNumberBigNumber\",\"DenseMatrixNumberBigNumber\",\"numberBigNumberSparseMatrix\",\"numberBigNumberDenseMatrix\",\"ArrayNumberBigNumber\",\"numberBigNumberArray\",\"_ref2\"]\n}\n"]