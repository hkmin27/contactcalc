["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/row.js"],"~:js","shadow$provide[516]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.rowDocs={name:\"row\",category:\"Matrix\",syntax:[\"row(x, index)\"],description:\"Return a row from a matrix or array.\",examples:[\"A \\x3d [[1, 2], [3, 4]]\",\"row(A, 1)\",\"row(A, 2)\"],seealso:[\"column\"]}}","~:source","shadow$provide[516] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rowDocs = void 0;\nvar rowDocs = {\n  name: 'row',\n  category: 'Matrix',\n  syntax: ['row(x, index)'],\n  description: 'Return a row from a matrix or array.',\n  examples: ['A = [[1, 2], [3, 4]]', 'row(A, 1)', 'row(A, 2)'],\n  seealso: ['column']\n};\nexports.rowDocs = rowDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["rowDocs","seealso","__esModule","name","value","syntax","category","examples","description"]],"~:compiled-at",1619135724012,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$row.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,OAAR,CARcA,CACZC,KAAM,KADMD,CAEZE,SAAU,QAFEF,CAGZG,OAAQ,CAAC,eAAD,CAHIH,CAIZI,YAAa,sCAJDJ,CAKZK,SAAU,CAAC,yBAAD,CAAyB,WAAzB,CAAsC,WAAtC,CALEL,CAMZM,QAAS,CAAC,QAAD,CANGN,CAPgD;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/row.js\"],\n\"sourcesContent\":[\"shadow$provide[516] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.rowDocs = void 0;\\nvar rowDocs = {\\n  name: 'row',\\n  category: 'Matrix',\\n  syntax: ['row(x, index)'],\\n  description: 'Return a row from a matrix or array.',\\n  examples: ['A = [[1, 2], [3, 4]]', 'row(A, 1)', 'row(A, 2)'],\\n  seealso: ['column']\\n};\\nexports.rowDocs = rowDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"rowDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]