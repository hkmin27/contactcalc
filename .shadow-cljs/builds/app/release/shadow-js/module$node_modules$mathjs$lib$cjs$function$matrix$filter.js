["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/matrix/filter.js"],"~:js","shadow$provide[128]=function(c,b,y,a){function q(k,t){var p=(0,u.maxArgumentCount)(t);return(0,f.filter)(k,function(g,d,l){return 1===p?t(g):2===p?t(g,[d]):t(g,[d],l)})}Object.defineProperty(a,\"__esModule\",{value:!0});a.createFilter=void 0;var f=b(24),u=b(127);c=b(25);c=(0,c.factory)(\"filter\",[\"typed\"],function(k){k=k.typed;return k(\"filter\",{\"Array, function\":q,\"Matrix, function\":function(t,p){return t.create(q(t.toArray(),p))},\"Array, RegExp\":f.filterRegExp,\"Matrix, RegExp\":function(t,p){return t.create((0,\nf.filterRegExp)(t.toArray(),p))}})});a.createFilter=c}","~:source","shadow$provide[128] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilter = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _function = require(\"../../utils/function.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'filter';\nvar dependencies = ['typed'];\nvar createFilter = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Filter the items in an array or one dimensional matrix.\n   *\n   * Syntax:\n   *\n   *    math.filter(x, test)\n   *\n   * Examples:\n   *\n   *    function isPositive (x) {\n   *      return x > 0\n   *    }\n   *    math.filter([6, -2, -1, 4, 3], isPositive) // returns [6, 4, 3]\n   *\n   *    math.filter([\"23\", \"foo\", \"100\", \"55\", \"bar\"], /[0-9]+/) // returns [\"23\", \"100\", \"55\"]\n   *\n   * See also:\n   *\n   *    forEach, map, sort\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to filter\n   * @param {Function | RegExp} test\n   *        A function or regular expression to test items.\n   *        All entries for which `test` returns true are returned.\n   *        When `test` is a function, it is invoked with three parameters:\n   *        the value of the element, the index of the element, and the\n   *        matrix/array being traversed. The function must return a boolean.\n   * @return {Matrix | Array} Returns the filtered matrix.\n   */\n  return typed('filter', {\n    'Array, function': _filterCallback,\n    'Matrix, function': function MatrixFunction(x, test) {\n      return x.create(_filterCallback(x.toArray(), test));\n    },\n    'Array, RegExp': _array.filterRegExp,\n    'Matrix, RegExp': function MatrixRegExp(x, test) {\n      return x.create((0, _array.filterRegExp)(x.toArray(), test));\n    }\n  });\n});\n/**\n * Filter values in a callback given a callback function\n * @param {Array} x\n * @param {Function} callback\n * @return {Array} Returns the filtered array\n * @private\n */\n\nexports.createFilter = createFilter;\n\nfunction _filterCallback(x, callback) {\n  // figure out what number of arguments the callback function expects\n  var args = (0, _function.maxArgumentCount)(callback);\n  return (0, _array.filter)(x, function (value, index, array) {\n    // invoke the callback function with the right number of arguments\n    if (args === 1) {\n      return callback(value);\n    } else if (args === 2) {\n      return callback(value, [index]);\n    } else {\n      // 3 or -1\n      return callback(value, [index], array);\n    }\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$array","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$utils$function"]],"~:properties",["^5",["__esModule","createFilter","value"]],"~:compiled-at",1619135723804,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$matrix$filter.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAqE9DC,QAASA,EAAe,CAACC,CAAD,CAAIC,CAAJ,CAAc,CAEpC,IAAIC,EAAO,CAAC,CAAA,CAAGC,CAAUC,CAAAA,gBAAd,EAAgCH,CAAhC,CACX,OAAO,CAAC,CAAA,CAAGI,CAAOC,CAAAA,MAAX,EAAmBN,CAAnB,CAAsB,QAAS,CAACO,CAAD,CAAQC,CAAR,CAAeC,CAAf,CAAsB,CAE1D,MAAa,EAAb,GAAIP,CAAJ,CACSD,CAAA,CAASM,CAAT,CADT,CAEoB,CAAb,GAAIL,CAAJ,CACED,CAAA,CAASM,CAAT,CAAgB,CAACC,CAAD,CAAhB,CADF,CAIEP,CAAA,CAASM,CAAT,CAAgB,CAACC,CAAD,CAAhB,CAAyBC,CAAzB,CARiD,CAArD,CAH6B,CAlEtCC,MAAOC,CAAAA,cAAP,CAAsBb,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CS,MAAO,CAAA,CADoC,CAA7C,CAGAT,EAAQc,CAAAA,YAAR,CAAuB,IAAK,EAE5B,KAAIP,EAAST,CAAA,CAAQ,EAAR,CAAb,CAEIO,EAAYP,CAAA,CAAQ,GAAR,CAEZiB,EAAAA,CAAWjB,CAAA,CAAQ,EAAR,CAIXgB,EAAAA,CAA8B,CAAC,CAAA,CAAGC,CAASC,CAAAA,OAAb,EAFvBC,QAEuB,CADfC,CAAC,OAADA,CACe,CAA0C,QAAS,CAACC,CAAD,CAAO,CACtFC,CAAAA,CAAQD,CAAKC,CAAAA,KA+BjB,OAAOA,EAAA,CAAM,QAAN,CAAgB,CACrB,kBAAmBnB,CADE,CAErB,mBAAoBoB,QAAuB,CAACnB,CAAD,CAAIoB,CAAJ,CAAU,CACnD,MAAOpB,EAAEqB,CAAAA,MAAF,CAAStB,CAAA,CAAgBC,CAAEsB,CAAAA,OAAF,EAAhB,CAA6BF,CAA7B,CAAT,CAD4C,CAFhC,CAKrB,gBAAiBf,CAAOkB,CAAAA,YALH,CAMrB,iBAAkBC,QAAqB,CAACxB,CAAD,CAAIoB,CAAJ,CAAU,CAC/C,MAAOpB,EAAEqB,CAAAA,MAAF,CAAS,CAAC,CAAA;AAAGhB,CAAOkB,CAAAA,YAAX,EAAyBvB,CAAEsB,CAAAA,OAAF,EAAzB,CAAsCF,CAAtC,CAAT,CADwC,CAN5B,CAAhB,CAhCmF,CAA1D,CAmDlCtB,EAAQc,CAAAA,YAAR,CAAuBA,CAnEuC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/matrix/filter.js\"],\n\"sourcesContent\":[\"shadow$provide[128] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createFilter = void 0;\\n\\nvar _array = require(\\\"../../utils/array.js\\\");\\n\\nvar _function = require(\\\"../../utils/function.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar name = 'filter';\\nvar dependencies = ['typed'];\\nvar createFilter = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed;\\n\\n  /**\\n   * Filter the items in an array or one dimensional matrix.\\n   *\\n   * Syntax:\\n   *\\n   *    math.filter(x, test)\\n   *\\n   * Examples:\\n   *\\n   *    function isPositive (x) {\\n   *      return x > 0\\n   *    }\\n   *    math.filter([6, -2, -1, 4, 3], isPositive) // returns [6, 4, 3]\\n   *\\n   *    math.filter([\\\"23\\\", \\\"foo\\\", \\\"100\\\", \\\"55\\\", \\\"bar\\\"], /[0-9]+/) // returns [\\\"23\\\", \\\"100\\\", \\\"55\\\"]\\n   *\\n   * See also:\\n   *\\n   *    forEach, map, sort\\n   *\\n   * @param {Matrix | Array} x    A one dimensional matrix or array to filter\\n   * @param {Function | RegExp} test\\n   *        A function or regular expression to test items.\\n   *        All entries for which `test` returns true are returned.\\n   *        When `test` is a function, it is invoked with three parameters:\\n   *        the value of the element, the index of the element, and the\\n   *        matrix/array being traversed. The function must return a boolean.\\n   * @return {Matrix | Array} Returns the filtered matrix.\\n   */\\n  return typed('filter', {\\n    'Array, function': _filterCallback,\\n    'Matrix, function': function MatrixFunction(x, test) {\\n      return x.create(_filterCallback(x.toArray(), test));\\n    },\\n    'Array, RegExp': _array.filterRegExp,\\n    'Matrix, RegExp': function MatrixRegExp(x, test) {\\n      return x.create((0, _array.filterRegExp)(x.toArray(), test));\\n    }\\n  });\\n});\\n/**\\n * Filter values in a callback given a callback function\\n * @param {Array} x\\n * @param {Function} callback\\n * @return {Array} Returns the filtered array\\n * @private\\n */\\n\\nexports.createFilter = createFilter;\\n\\nfunction _filterCallback(x, callback) {\\n  // figure out what number of arguments the callback function expects\\n  var args = (0, _function.maxArgumentCount)(callback);\\n  return (0, _array.filter)(x, function (value, index, array) {\\n    // invoke the callback function with the right number of arguments\\n    if (args === 1) {\\n      return callback(value);\\n    } else if (args === 2) {\\n      return callback(value, [index]);\\n    } else {\\n      // 3 or -1\\n      return callback(value, [index], array);\\n    }\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_filterCallback\",\"x\",\"callback\",\"args\",\"_function\",\"maxArgumentCount\",\"_array\",\"filter\",\"value\",\"index\",\"array\",\"Object\",\"defineProperty\",\"createFilter\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"MatrixFunction\",\"test\",\"create\",\"toArray\",\"filterRegExp\",\"MatrixRegExp\"]\n}\n"]