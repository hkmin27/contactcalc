["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/dotMultiply.js"],"~:js","shadow$provide[107]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createDotMultiply=void 0;c=b(25);var q=b(89),f=b(106),u=b(76),k=b(87),t=b(77);b=(0,c.factory)(\"dotMultiply\",[\"typed\",\"matrix\",\"equalScalar\",\"multiplyScalar\"],function(p){var g=p.typed,d=p.matrix,l=p.equalScalar,h=p.multiplyScalar,n=(0,q.createAlgorithm02)({typed:g,equalScalar:l}),r=(0,f.createAlgorithm09)({typed:g,equalScalar:l}),v=(0,u.createAlgorithm11)({typed:g,equalScalar:l}),C=(0,k.createAlgorithm13)({typed:g}),\nz=(0,t.createAlgorithm14)({typed:g});return g(\"dotMultiply\",{\"any, any\":h,\"SparseMatrix, SparseMatrix\":function(w,B){return r(w,B,h,!1)},\"SparseMatrix, DenseMatrix\":function(w,B){return n(B,w,h,!0)},\"DenseMatrix, SparseMatrix\":function(w,B){return n(w,B,h,!1)},\"DenseMatrix, DenseMatrix\":function(w,B){return C(w,B,h)},\"Array, Array\":function(w,B){return this(d(w),d(B)).valueOf()},\"Array, Matrix\":function(w,B){return this(d(w),B)},\"Matrix, Array\":function(w,B){return this(w,d(B))},\"SparseMatrix, any\":function(w,\nB){return v(w,B,h,!1)},\"DenseMatrix, any\":function(w,B){return z(w,B,h,!1)},\"any, SparseMatrix\":function(w,B){return v(B,w,h,!0)},\"any, DenseMatrix\":function(w,B){return z(B,w,h,!0)},\"Array, any\":function(w,B){return z(d(w),B,h,!1).valueOf()},\"any, Array\":function(w,B){return z(d(B),w,h,!0).valueOf()}})});a.createDotMultiply=b}","~:source","shadow$provide[107] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDotMultiply = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm09.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'dotMultiply';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'multiplyScalar'];\nvar createDotMultiply = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      multiplyScalar = _ref.multiplyScalar;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm09 = (0, _algorithm2.createAlgorithm09)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm3.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Multiply two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotMultiply(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotMultiply(2, 4) // returns 8\n   *\n   *    a = [[9, 5], [6, 1]]\n   *    b = [[3, 2], [5, 2]]\n   *\n   *    math.dotMultiply(a, b) // returns [[27, 10], [30, 2]]\n   *    math.multiply(a, b)    // returns [[52, 28], [23, 14]]\n   *\n   * See also:\n   *\n   *    multiply, divide, dotDivide\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Left hand value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Right hand value\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Multiplication of `x` and `y`\n   */\n\n  return typed(name, {\n    'any, any': multiplyScalar,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, multiplyScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, multiplyScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm02(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, multiplyScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, multiplyScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, multiplyScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm11(y, x, multiplyScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, multiplyScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\n    }\n  });\n});\nexports.createDotMultiply = createDotMultiply;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm09"]],"~:properties",["^5",["typed","__esModule","createDotMultiply","value","equalScalar"]],"~:compiled-at",1619135723787,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$dotMultiply.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/dotMultiply.js\"],\n\"sourcesContent\":[\"shadow$provide[107] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createDotMultiply = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm02.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm09.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm11.js\\\");\\n\\nvar _algorithm4 = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm5 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar name = 'dotMultiply';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'multiplyScalar'];\\nvar createDotMultiply = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      multiplyScalar = _ref.multiplyScalar;\\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm09 = (0, _algorithm2.createAlgorithm09)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm11 = (0, _algorithm3.createAlgorithm11)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm13 = (0, _algorithm4.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm5.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Multiply two matrices element wise. The function accepts both matrices and\\n   * scalar values.\\n   *\\n   * Syntax:\\n   *\\n   *    math.dotMultiply(x, y)\\n   *\\n   * Examples:\\n   *\\n   *    math.dotMultiply(2, 4) // returns 8\\n   *\\n   *    a = [[9, 5], [6, 1]]\\n   *    b = [[3, 2], [5, 2]]\\n   *\\n   *    math.dotMultiply(a, b) // returns [[27, 10], [30, 2]]\\n   *    math.multiply(a, b)    // returns [[52, 28], [23, 14]]\\n   *\\n   * See also:\\n   *\\n   *    multiply, divide, dotDivide\\n   *\\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Left hand value\\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Right hand value\\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Multiplication of `x` and `y`\\n   */\\n\\n  return typed(name, {\\n    'any, any': multiplyScalar,\\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\\n      return algorithm09(x, y, multiplyScalar, false);\\n    },\\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\\n      return algorithm02(y, x, multiplyScalar, true);\\n    },\\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\\n      return algorithm02(x, y, multiplyScalar, false);\\n    },\\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\\n      return algorithm13(x, y, multiplyScalar);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y));\\n    },\\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\\n      return algorithm11(x, y, multiplyScalar, false);\\n    },\\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\\n      return algorithm14(x, y, multiplyScalar, false);\\n    },\\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\\n      return algorithm11(y, x, multiplyScalar, true);\\n    },\\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\\n      return algorithm14(y, x, multiplyScalar, true);\\n    },\\n    'Array, any': function ArrayAny(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\\n    },\\n    'any, Array': function anyArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\\n    }\\n  });\\n});\\nexports.createDotMultiply = createDotMultiply;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createDotMultiply\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_algorithm4\",\"_algorithm5\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"equalScalar\",\"multiplyScalar\",\"algorithm02\",\"createAlgorithm02\",\"algorithm09\",\"createAlgorithm09\",\"algorithm11\",\"createAlgorithm11\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"SparseMatrixSparseMatrix\",\"x\",\"y\",\"SparseMatrixDenseMatrix\",\"DenseMatrixSparseMatrix\",\"DenseMatrixDenseMatrix\",\"ArrayArray\",\"valueOf\",\"ArrayMatrix\",\"MatrixArray\",\"SparseMatrixAny\",\"DenseMatrixAny\",\"anySparseMatrix\",\"anyDenseMatrix\",\"ArrayAny\",\"anyArray\"]\n}\n"]