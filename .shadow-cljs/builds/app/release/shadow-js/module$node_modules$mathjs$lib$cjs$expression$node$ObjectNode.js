["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/node/ObjectNode.js"],"~:js","shadow$provide[264]=function(c,b,y,a){function q(p){\"@babel/helpers - typeof\";q=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(g){return typeof g}:function(g){return g&&\"function\"===typeof Symbol&&g.constructor===Symbol&&g!==Symbol.prototype?\"symbol\":typeof g};return q(p)}Object.defineProperty(a,\"__esModule\",{value:!0});a.createObjectNode=void 0;var f=b(14),u=b(21),k=b(147),t=b(15);c=b(25);c=(0,c.factory)(\"ObjectNode\",[\"Node\"],function(p){function g(d){if(!(this instanceof\ng))throw new SyntaxError(\"Constructor must be called with the new operator\");this.properties=d||{};if(d&&(\"object\"!==q(d)||!Object.keys(d).every(function(l){return(0,f.isNode)(d[l])})))throw new TypeError(\"Object containing Nodes expected\");}g.prototype=new p.Node;g.prototype.type=\"ObjectNode\";g.prototype.isObjectNode=!0;g.prototype._compile=function(d,l){var h={},n;for(n in this.properties)if((0,t.hasOwnProperty)(this.properties,n)){var r=(0,u.stringify)(n);r=JSON.parse(r);if(!(0,k.isSafeProperty)(this.properties,\nr))throw Error('No access to property \"'+r+'\"');h[r]=this.properties[n]._compile(d,l)}return function(v,C,z){var w={},B;for(B in h)(0,t.hasOwnProperty)(h,B)&&(w[B]=h[B](v,C,z));return w}};g.prototype.forEach=function(d){for(var l in this.properties)(0,t.hasOwnProperty)(this.properties,l)&&d(this.properties[l],\"properties[\"+(0,u.stringify)(l)+\"]\",this)};g.prototype.map=function(d){var l={},h;for(h in this.properties)(0,t.hasOwnProperty)(this.properties,h)&&(l[h]=this._ifNode(d(this.properties[h],\"properties[\"+\n(0,u.stringify)(h)+\"]\",this)));return new g(l)};g.prototype.clone=function(){var d={},l;for(l in this.properties)(0,t.hasOwnProperty)(this.properties,l)&&(d[l]=this.properties[l]);return new g(d)};g.prototype._toString=function(d){var l=[],h;for(h in this.properties)(0,t.hasOwnProperty)(this.properties,h)&&l.push((0,u.stringify)(h)+\": \"+this.properties[h].toString(d));return\"{\"+l.join(\", \")+\"}\"};g.prototype.toJSON=function(){return{mathjs:\"ObjectNode\",properties:this.properties}};g.fromJSON=function(d){return new g(d.properties)};\ng.prototype.toHTML=function(d){var l=[],h;for(h in this.properties)(0,t.hasOwnProperty)(this.properties,h)&&l.push('\\x3cspan class\\x3d\"math-symbol math-property\"\\x3e'+(0,u.escape)(h)+'\\x3c/span\\x3e\\x3cspan class\\x3d\"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator\"\\x3e:\\x3c/span\\x3e'+this.properties[h].toHTML(d));return'\\x3cspan class\\x3d\"math-parenthesis math-curly-parenthesis\"\\x3e{\\x3c/span\\x3e'+l.join('\\x3cspan class\\x3d\"math-separator\"\\x3e,\\x3c/span\\x3e')+\n'\\x3cspan class\\x3d\"math-parenthesis math-curly-parenthesis\"\\x3e}\\x3c/span\\x3e'};g.prototype._toTex=function(d){var l=[],h;for(h in this.properties)(0,t.hasOwnProperty)(this.properties,h)&&l.push(\"\\\\mathbf{\"+h+\":} \\x26 \"+this.properties[h].toTex(d)+\"\\\\\\\\\");return\"\\\\left\\\\{\\\\begin{array}{ll}\".concat(l.join(\"\\n\"),\"\\\\end{array}\\\\right\\\\}\")};return g},{isClass:!0,isNode:!0});a.createObjectNode=c}","~:source","shadow$provide[264] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createObjectNode = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _customs = require(\"../../utils/customs.js\");\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar name = 'ObjectNode';\nvar dependencies = ['Node'];\nvar createObjectNode = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var Node = _ref.Node;\n\n  /**\n   * @constructor ObjectNode\n   * @extends {Node}\n   * Holds an object with keys/values\n   * @param {Object.<string, Node>} [properties]   object with key/value pairs\n   */\n  function ObjectNode(properties) {\n    if (!(this instanceof ObjectNode)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.properties = properties || {}; // validate input\n\n    if (properties) {\n      if (!(_typeof(properties) === 'object') || !Object.keys(properties).every(function (key) {\n        return (0, _is.isNode)(properties[key]);\n      })) {\n        throw new TypeError('Object containing Nodes expected');\n      }\n    }\n  }\n\n  ObjectNode.prototype = new Node();\n  ObjectNode.prototype.type = 'ObjectNode';\n  ObjectNode.prototype.isObjectNode = true;\n  /**\n   * Compile a node into a JavaScript function.\n   * This basically pre-calculates as much as possible and only leaves open\n   * calculations which depend on a dynamic scope with variables.\n   * @param {Object} math     Math.js namespace with functions and constants.\n   * @param {Object} argNames An object with argument names as key and `true`\n   *                          as value. Used in the SymbolNode to optimize\n   *                          for arguments from user assigned functions\n   *                          (see FunctionAssignmentNode) or special symbols\n   *                          like `end` (see IndexNode).\n   * @return {function} Returns a function which can be called like:\n   *                        evalNode(scope: Object, args: Object, context: *)\n   */\n\n  ObjectNode.prototype._compile = function (math, argNames) {\n    var evalEntries = {};\n\n    for (var key in this.properties) {\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\n        // we stringify/parse the key here to resolve unicode characters,\n        // so you cannot create a key like {\"co\\\\u006Estructor\": null}\n        var stringifiedKey = (0, _string.stringify)(key);\n        var parsedKey = JSON.parse(stringifiedKey);\n\n        if (!(0, _customs.isSafeProperty)(this.properties, parsedKey)) {\n          throw new Error('No access to property \"' + parsedKey + '\"');\n        }\n\n        evalEntries[parsedKey] = this.properties[key]._compile(math, argNames);\n      }\n    }\n\n    return function evalObjectNode(scope, args, context) {\n      var obj = {};\n\n      for (var _key in evalEntries) {\n        if ((0, _object.hasOwnProperty)(evalEntries, _key)) {\n          obj[_key] = evalEntries[_key](scope, args, context);\n        }\n      }\n\n      return obj;\n    };\n  };\n  /**\n   * Execute a callback for each of the child nodes of this node\n   * @param {function(child: Node, path: string, parent: Node)} callback\n   */\n\n\n  ObjectNode.prototype.forEach = function (callback) {\n    for (var key in this.properties) {\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\n        callback(this.properties[key], 'properties[' + (0, _string.stringify)(key) + ']', this);\n      }\n    }\n  };\n  /**\n   * Create a new ObjectNode having it's childs be the results of calling\n   * the provided callback function for each of the childs of the original node.\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\n   * @returns {ObjectNode} Returns a transformed copy of the node\n   */\n\n\n  ObjectNode.prototype.map = function (callback) {\n    var properties = {};\n\n    for (var key in this.properties) {\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\n        properties[key] = this._ifNode(callback(this.properties[key], 'properties[' + (0, _string.stringify)(key) + ']', this));\n      }\n    }\n\n    return new ObjectNode(properties);\n  };\n  /**\n   * Create a clone of this node, a shallow copy\n   * @return {ObjectNode}\n   */\n\n\n  ObjectNode.prototype.clone = function () {\n    var properties = {};\n\n    for (var key in this.properties) {\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\n        properties[key] = this.properties[key];\n      }\n    }\n\n    return new ObjectNode(properties);\n  };\n  /**\n   * Get string representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ObjectNode.prototype._toString = function (options) {\n    var entries = [];\n\n    for (var key in this.properties) {\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\n        entries.push((0, _string.stringify)(key) + ': ' + this.properties[key].toString(options));\n      }\n    }\n\n    return '{' + entries.join(', ') + '}';\n  };\n  /**\n   * Get a JSON representation of the node\n   * @returns {Object}\n   */\n\n\n  ObjectNode.prototype.toJSON = function () {\n    return {\n      mathjs: 'ObjectNode',\n      properties: this.properties\n    };\n  };\n  /**\n   * Instantiate an OperatorNode from its JSON representation\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ObjectNode\", \"properties\": {...}}`,\n   *                       where mathjs is optional\n   * @returns {ObjectNode}\n   */\n\n\n  ObjectNode.fromJSON = function (json) {\n    return new ObjectNode(json.properties);\n  };\n  /**\n   * Get HTML representation\n   * @param {Object} options\n   * @return {string} str\n   * @override\n   */\n\n\n  ObjectNode.prototype.toHTML = function (options) {\n    var entries = [];\n\n    for (var key in this.properties) {\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\n        entries.push('<span class=\"math-symbol math-property\">' + (0, _string.escape)(key) + '</span>' + '<span class=\"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator\">:</span>' + this.properties[key].toHTML(options));\n      }\n    }\n\n    return '<span class=\"math-parenthesis math-curly-parenthesis\">{</span>' + entries.join('<span class=\"math-separator\">,</span>') + '<span class=\"math-parenthesis math-curly-parenthesis\">}</span>';\n  };\n  /**\n   * Get LaTeX representation\n   * @param {Object} options\n   * @return {string} str\n   */\n\n\n  ObjectNode.prototype._toTex = function (options) {\n    var entries = [];\n\n    for (var key in this.properties) {\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\n        entries.push('\\\\mathbf{' + key + ':} & ' + this.properties[key].toTex(options) + '\\\\\\\\');\n      }\n    }\n\n    return \"\\\\left\\\\{\\\\begin{array}{ll}\".concat(entries.join('\\n'), \"\\\\end{array}\\\\right\\\\}\");\n  };\n\n  return ObjectNode;\n}, {\n  isClass: true,\n  isNode: true\n});\nexports.createObjectNode = createObjectNode;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$utils$string","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$customs","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$utils$object","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["properties","map","createObjectNode","forEach","fromJSON","isClass","toHTML","prototype","_toString","isNode","_toTex","__esModule","isObjectNode","value","mathjs","type","clone","_compile","toJSON"]],"~:compiled-at",1619135723966,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$node$ObjectNode.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/node/ObjectNode.js\"],\n\"sourcesContent\":[\"shadow$provide[264] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createObjectNode = void 0;\\n\\nvar _is = require(\\\"../../utils/is.js\\\");\\n\\nvar _string = require(\\\"../../utils/string.js\\\");\\n\\nvar _customs = require(\\\"../../utils/customs.js\\\");\\n\\nvar _object = require(\\\"../../utils/object.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nfunction _typeof(obj) { \\\"@babel/helpers - typeof\\\"; if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nvar name = 'ObjectNode';\\nvar dependencies = ['Node'];\\nvar createObjectNode = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var Node = _ref.Node;\\n\\n  /**\\n   * @constructor ObjectNode\\n   * @extends {Node}\\n   * Holds an object with keys/values\\n   * @param {Object.<string, Node>} [properties]   object with key/value pairs\\n   */\\n  function ObjectNode(properties) {\\n    if (!(this instanceof ObjectNode)) {\\n      throw new SyntaxError('Constructor must be called with the new operator');\\n    }\\n\\n    this.properties = properties || {}; // validate input\\n\\n    if (properties) {\\n      if (!(_typeof(properties) === 'object') || !Object.keys(properties).every(function (key) {\\n        return (0, _is.isNode)(properties[key]);\\n      })) {\\n        throw new TypeError('Object containing Nodes expected');\\n      }\\n    }\\n  }\\n\\n  ObjectNode.prototype = new Node();\\n  ObjectNode.prototype.type = 'ObjectNode';\\n  ObjectNode.prototype.isObjectNode = true;\\n  /**\\n   * Compile a node into a JavaScript function.\\n   * This basically pre-calculates as much as possible and only leaves open\\n   * calculations which depend on a dynamic scope with variables.\\n   * @param {Object} math     Math.js namespace with functions and constants.\\n   * @param {Object} argNames An object with argument names as key and `true`\\n   *                          as value. Used in the SymbolNode to optimize\\n   *                          for arguments from user assigned functions\\n   *                          (see FunctionAssignmentNode) or special symbols\\n   *                          like `end` (see IndexNode).\\n   * @return {function} Returns a function which can be called like:\\n   *                        evalNode(scope: Object, args: Object, context: *)\\n   */\\n\\n  ObjectNode.prototype._compile = function (math, argNames) {\\n    var evalEntries = {};\\n\\n    for (var key in this.properties) {\\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\\n        // we stringify/parse the key here to resolve unicode characters,\\n        // so you cannot create a key like {\\\"co\\\\\\\\u006Estructor\\\": null}\\n        var stringifiedKey = (0, _string.stringify)(key);\\n        var parsedKey = JSON.parse(stringifiedKey);\\n\\n        if (!(0, _customs.isSafeProperty)(this.properties, parsedKey)) {\\n          throw new Error('No access to property \\\"' + parsedKey + '\\\"');\\n        }\\n\\n        evalEntries[parsedKey] = this.properties[key]._compile(math, argNames);\\n      }\\n    }\\n\\n    return function evalObjectNode(scope, args, context) {\\n      var obj = {};\\n\\n      for (var _key in evalEntries) {\\n        if ((0, _object.hasOwnProperty)(evalEntries, _key)) {\\n          obj[_key] = evalEntries[_key](scope, args, context);\\n        }\\n      }\\n\\n      return obj;\\n    };\\n  };\\n  /**\\n   * Execute a callback for each of the child nodes of this node\\n   * @param {function(child: Node, path: string, parent: Node)} callback\\n   */\\n\\n\\n  ObjectNode.prototype.forEach = function (callback) {\\n    for (var key in this.properties) {\\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\\n        callback(this.properties[key], 'properties[' + (0, _string.stringify)(key) + ']', this);\\n      }\\n    }\\n  };\\n  /**\\n   * Create a new ObjectNode having it's childs be the results of calling\\n   * the provided callback function for each of the childs of the original node.\\n   * @param {function(child: Node, path: string, parent: Node): Node} callback\\n   * @returns {ObjectNode} Returns a transformed copy of the node\\n   */\\n\\n\\n  ObjectNode.prototype.map = function (callback) {\\n    var properties = {};\\n\\n    for (var key in this.properties) {\\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\\n        properties[key] = this._ifNode(callback(this.properties[key], 'properties[' + (0, _string.stringify)(key) + ']', this));\\n      }\\n    }\\n\\n    return new ObjectNode(properties);\\n  };\\n  /**\\n   * Create a clone of this node, a shallow copy\\n   * @return {ObjectNode}\\n   */\\n\\n\\n  ObjectNode.prototype.clone = function () {\\n    var properties = {};\\n\\n    for (var key in this.properties) {\\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\\n        properties[key] = this.properties[key];\\n      }\\n    }\\n\\n    return new ObjectNode(properties);\\n  };\\n  /**\\n   * Get string representation\\n   * @param {Object} options\\n   * @return {string} str\\n   * @override\\n   */\\n\\n\\n  ObjectNode.prototype._toString = function (options) {\\n    var entries = [];\\n\\n    for (var key in this.properties) {\\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\\n        entries.push((0, _string.stringify)(key) + ': ' + this.properties[key].toString(options));\\n      }\\n    }\\n\\n    return '{' + entries.join(', ') + '}';\\n  };\\n  /**\\n   * Get a JSON representation of the node\\n   * @returns {Object}\\n   */\\n\\n\\n  ObjectNode.prototype.toJSON = function () {\\n    return {\\n      mathjs: 'ObjectNode',\\n      properties: this.properties\\n    };\\n  };\\n  /**\\n   * Instantiate an OperatorNode from its JSON representation\\n   * @param {Object} json  An object structured like\\n   *                       `{\\\"mathjs\\\": \\\"ObjectNode\\\", \\\"properties\\\": {...}}`,\\n   *                       where mathjs is optional\\n   * @returns {ObjectNode}\\n   */\\n\\n\\n  ObjectNode.fromJSON = function (json) {\\n    return new ObjectNode(json.properties);\\n  };\\n  /**\\n   * Get HTML representation\\n   * @param {Object} options\\n   * @return {string} str\\n   * @override\\n   */\\n\\n\\n  ObjectNode.prototype.toHTML = function (options) {\\n    var entries = [];\\n\\n    for (var key in this.properties) {\\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\\n        entries.push('<span class=\\\"math-symbol math-property\\\">' + (0, _string.escape)(key) + '</span>' + '<span class=\\\"math-operator math-assignment-operator math-property-assignment-operator math-binary-operator\\\">:</span>' + this.properties[key].toHTML(options));\\n      }\\n    }\\n\\n    return '<span class=\\\"math-parenthesis math-curly-parenthesis\\\">{</span>' + entries.join('<span class=\\\"math-separator\\\">,</span>') + '<span class=\\\"math-parenthesis math-curly-parenthesis\\\">}</span>';\\n  };\\n  /**\\n   * Get LaTeX representation\\n   * @param {Object} options\\n   * @return {string} str\\n   */\\n\\n\\n  ObjectNode.prototype._toTex = function (options) {\\n    var entries = [];\\n\\n    for (var key in this.properties) {\\n      if ((0, _object.hasOwnProperty)(this.properties, key)) {\\n        entries.push('\\\\\\\\mathbf{' + key + ':} & ' + this.properties[key].toTex(options) + '\\\\\\\\\\\\\\\\');\\n      }\\n    }\\n\\n    return \\\"\\\\\\\\left\\\\\\\\{\\\\\\\\begin{array}{ll}\\\".concat(entries.join('\\\\n'), \\\"\\\\\\\\end{array}\\\\\\\\right\\\\\\\\}\\\");\\n  };\\n\\n  return ObjectNode;\\n}, {\\n  isClass: true,\\n  isNode: true\\n});\\nexports.createObjectNode = createObjectNode;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"Object\",\"defineProperty\",\"value\",\"createObjectNode\",\"_is\",\"_string\",\"_customs\",\"_object\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"ObjectNode\",\"properties\",\"SyntaxError\",\"keys\",\"every\",\"key\",\"isNode\",\"TypeError\",\"Node\",\"type\",\"isObjectNode\",\"_compile\",\"ObjectNode.prototype._compile\",\"math\",\"argNames\",\"evalEntries\",\"hasOwnProperty\",\"stringifiedKey\",\"stringify\",\"parsedKey\",\"JSON\",\"parse\",\"isSafeProperty\",\"Error\",\"evalObjectNode\",\"scope\",\"args\",\"context\",\"_key\",\"forEach\",\"ObjectNode.prototype.forEach\",\"callback\",\"map\",\"ObjectNode.prototype.map\",\"_ifNode\",\"clone\",\"ObjectNode.prototype.clone\",\"_toString\",\"ObjectNode.prototype._toString\",\"options\",\"entries\",\"push\",\"toString\",\"join\",\"toJSON\",\"ObjectNode.prototype.toJSON\",\"mathjs\",\"fromJSON\",\"ObjectNode.fromJSON\",\"json\",\"toHTML\",\"ObjectNode.prototype.toHTML\",\"escape\",\"_toTex\",\"ObjectNode.prototype._toTex\",\"toTex\",\"concat\",\"isClass\"]\n}\n"]