["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/subtract.js"],"~:js","shadow$provide[104]=function(c,b,y,a){function q(l,h){l=l.size();h=h.size();if(l.length!==h.length)throw new f.DimensionError(l.length,h.length);}Object.defineProperty(a,\"__esModule\",{value:!0});a.createSubtract=void 0;c=b(25);var f=b(22),u=b(84),k=b(94),t=b(95),p=b(86),g=b(87),d=b(77);b=(0,c.factory)(\"subtract\",\"typed matrix equalScalar addScalar unaryMinus DenseMatrix\".split(\" \"),function(l){var h=l.typed,n=l.matrix,r=l.equalScalar,v=l.addScalar,C=l.unaryMinus;l=l.DenseMatrix;var z=(0,u.createAlgorithm01)({typed:h}),\nw=(0,k.createAlgorithm03)({typed:h}),B=(0,t.createAlgorithm05)({typed:h,equalScalar:r}),x=(0,p.createAlgorithm10)({typed:h,DenseMatrix:l}),D=(0,g.createAlgorithm13)({typed:h}),F=(0,d.createAlgorithm14)({typed:h});return h(\"subtract\",{\"number, number\":function(E,G){return E-G},\"Complex, Complex\":function(E,G){return E.sub(G)},\"BigNumber, BigNumber\":function(E,G){return E.minus(G)},\"Fraction, Fraction\":function(E,G){return E.sub(G)},\"Unit, Unit\":function(E,G){if(null===E.value)throw Error(\"Parameter x contains a unit with undefined value\");\nif(null===G.value)throw Error(\"Parameter y contains a unit with undefined value\");if(!E.equalBase(G))throw Error(\"Units do not match\");E=E.clone();E.value=this(E.value,G.value);E.fixPrefix=!1;return E},\"SparseMatrix, SparseMatrix\":function(E,G){q(E,G);return B(E,G,this)},\"SparseMatrix, DenseMatrix\":function(E,G){q(E,G);return w(G,E,this,!0)},\"DenseMatrix, SparseMatrix\":function(E,G){q(E,G);return z(E,G,this,!1)},\"DenseMatrix, DenseMatrix\":function(E,G){q(E,G);return D(E,G,this)},\"Array, Array\":function(E,\nG){return this(n(E),n(G)).valueOf()},\"Array, Matrix\":function(E,G){return this(n(E),G)},\"Matrix, Array\":function(E,G){return this(E,n(G))},\"SparseMatrix, any\":function(E,G){return x(E,C(G),v)},\"DenseMatrix, any\":function(E,G){return F(E,G,this)},\"any, SparseMatrix\":function(E,G){return x(G,E,this,!0)},\"any, DenseMatrix\":function(E,G){return F(G,E,this,!0)},\"Array, any\":function(E,G){return F(n(E),G,this,!1).valueOf()},\"any, Array\":function(E,G){return F(n(G),E,this,!0).valueOf()}})});a.createSubtract=\nb}","~:source","shadow$provide[104] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSubtract = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../error/DimensionError.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm05.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm10.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'subtract';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'addScalar', 'unaryMinus', 'DenseMatrix'];\nvar createSubtract = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      addScalar = _ref.addScalar,\n      unaryMinus = _ref.unaryMinus,\n      DenseMatrix = _ref.DenseMatrix;\n  // TODO: split function subtract in two: subtract and subtractScalar\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm05 = (0, _algorithm3.createAlgorithm05)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = (0, _algorithm4.createAlgorithm10)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm5.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm6.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Subtract two values, `x - y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.subtract(x, y)\n   *\n   * Examples:\n   *\n   *    math.subtract(5.3, 2)        // returns number 3.3\n   *\n   *    const a = math.complex(2, 3)\n   *    const b = math.complex(4, 1)\n   *    math.subtract(a, b)          // returns Complex -2 + 2i\n   *\n   *    math.subtract([5, 7, 4], 4)  // returns Array [1, 3, 0]\n   *\n   *    const c = math.unit('2.1 km')\n   *    const d = math.unit('500m')\n   *    math.subtract(c, d)          // returns Unit 1.6 km\n   *\n   * See also:\n   *\n   *    add\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x\n   *            Initial value\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y\n   *            Value to subtract from `x`\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\n   *            Subtraction of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': function numberNumber(x, y) {\n      return x - y;\n    },\n    'Complex, Complex': function ComplexComplex(x, y) {\n      return x.sub(y);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      return x.minus(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      return x.sub(y);\n    },\n    'Unit, Unit': function UnitUnit(x, y) {\n      if (x.value === null) {\n        throw new Error('Parameter x contains a unit with undefined value');\n      }\n\n      if (y.value === null) {\n        throw new Error('Parameter y contains a unit with undefined value');\n      }\n\n      if (!x.equalBase(y)) {\n        throw new Error('Units do not match');\n      }\n\n      var res = x.clone();\n      res.value = this(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm05(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm03(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      checkEqualDimensions(x, y);\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, unaryMinus(y), addScalar);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\n/**\n * Check whether matrix x and y have the same number of dimensions.\n * Throws a DimensionError when dimensions are not equal\n * @param {Matrix} x\n * @param {Matrix} y\n */\n\nexports.createSubtract = createSubtract;\n\nfunction checkEqualDimensions(x, y) {\n  var xsize = x.size();\n  var ysize = y.size();\n\n  if (xsize.length !== ysize.length) {\n    throw new _DimensionError.DimensionError(xsize.length, ysize.length);\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$error$DimensionError","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm10","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm05","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03"]],"~:properties",["^5",["typed","DenseMatrix","__esModule","value","equalScalar","createSubtract","fixPrefix"]],"~:compiled-at",1619135723786,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$subtract.js\",\n\"lineCount\":5,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/subtract.js\"],\n\"sourcesContent\":[\"shadow$provide[104] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createSubtract = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _DimensionError = require(\\\"../../error/DimensionError.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm01.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm03.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm05.js\\\");\\n\\nvar _algorithm4 = require(\\\"../../type/matrix/utils/algorithm10.js\\\");\\n\\nvar _algorithm5 = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm6 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar name = 'subtract';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'addScalar', 'unaryMinus', 'DenseMatrix'];\\nvar createSubtract = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      addScalar = _ref.addScalar,\\n      unaryMinus = _ref.unaryMinus,\\n      DenseMatrix = _ref.DenseMatrix;\\n  // TODO: split function subtract in two: subtract and subtractScalar\\n  var algorithm01 = (0, _algorithm.createAlgorithm01)({\\n    typed: typed\\n  });\\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\\n    typed: typed\\n  });\\n  var algorithm05 = (0, _algorithm3.createAlgorithm05)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm10 = (0, _algorithm4.createAlgorithm10)({\\n    typed: typed,\\n    DenseMatrix: DenseMatrix\\n  });\\n  var algorithm13 = (0, _algorithm5.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm6.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Subtract two values, `x - y`.\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.subtract(x, y)\\n   *\\n   * Examples:\\n   *\\n   *    math.subtract(5.3, 2)        // returns number 3.3\\n   *\\n   *    const a = math.complex(2, 3)\\n   *    const b = math.complex(4, 1)\\n   *    math.subtract(a, b)          // returns Complex -2 + 2i\\n   *\\n   *    math.subtract([5, 7, 4], 4)  // returns Array [1, 3, 0]\\n   *\\n   *    const c = math.unit('2.1 km')\\n   *    const d = math.unit('500m')\\n   *    math.subtract(c, d)          // returns Unit 1.6 km\\n   *\\n   * See also:\\n   *\\n   *    add\\n   *\\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x\\n   *            Initial value\\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y\\n   *            Value to subtract from `x`\\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}\\n   *            Subtraction of `x` and `y`\\n   */\\n\\n  return typed(name, {\\n    'number, number': function numberNumber(x, y) {\\n      return x - y;\\n    },\\n    'Complex, Complex': function ComplexComplex(x, y) {\\n      return x.sub(y);\\n    },\\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\\n      return x.minus(y);\\n    },\\n    'Fraction, Fraction': function FractionFraction(x, y) {\\n      return x.sub(y);\\n    },\\n    'Unit, Unit': function UnitUnit(x, y) {\\n      if (x.value === null) {\\n        throw new Error('Parameter x contains a unit with undefined value');\\n      }\\n\\n      if (y.value === null) {\\n        throw new Error('Parameter y contains a unit with undefined value');\\n      }\\n\\n      if (!x.equalBase(y)) {\\n        throw new Error('Units do not match');\\n      }\\n\\n      var res = x.clone();\\n      res.value = this(res.value, y.value);\\n      res.fixPrefix = false;\\n      return res;\\n    },\\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\\n      checkEqualDimensions(x, y);\\n      return algorithm05(x, y, this);\\n    },\\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\\n      checkEqualDimensions(x, y);\\n      return algorithm03(y, x, this, true);\\n    },\\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\\n      checkEqualDimensions(x, y);\\n      return algorithm01(x, y, this, false);\\n    },\\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\\n      checkEqualDimensions(x, y);\\n      return algorithm13(x, y, this);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y));\\n    },\\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\\n      return algorithm10(x, unaryMinus(y), addScalar);\\n    },\\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\\n      return algorithm14(x, y, this);\\n    },\\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\\n      return algorithm10(y, x, this, true);\\n    },\\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\\n      return algorithm14(y, x, this, true);\\n    },\\n    'Array, any': function ArrayAny(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(x), y, this, false).valueOf();\\n    },\\n    'any, Array': function anyArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, this, true).valueOf();\\n    }\\n  });\\n});\\n/**\\n * Check whether matrix x and y have the same number of dimensions.\\n * Throws a DimensionError when dimensions are not equal\\n * @param {Matrix} x\\n * @param {Matrix} y\\n */\\n\\nexports.createSubtract = createSubtract;\\n\\nfunction checkEqualDimensions(x, y) {\\n  var xsize = x.size();\\n  var ysize = y.size();\\n\\n  if (xsize.length !== ysize.length) {\\n    throw new _DimensionError.DimensionError(xsize.length, ysize.length);\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"checkEqualDimensions\",\"x\",\"y\",\"xsize\",\"size\",\"ysize\",\"length\",\"_DimensionError\",\"DimensionError\",\"Object\",\"defineProperty\",\"value\",\"createSubtract\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_algorithm4\",\"_algorithm5\",\"_algorithm6\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"equalScalar\",\"addScalar\",\"unaryMinus\",\"DenseMatrix\",\"algorithm01\",\"createAlgorithm01\",\"algorithm03\",\"createAlgorithm03\",\"algorithm05\",\"createAlgorithm05\",\"algorithm10\",\"createAlgorithm10\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"numberNumber\",\"ComplexComplex\",\"sub\",\"BigNumberBigNumber\",\"minus\",\"FractionFraction\",\"UnitUnit\",\"Error\",\"equalBase\",\"res\",\"clone\",\"fixPrefix\",\"SparseMatrixSparseMatrix\",\"SparseMatrixDenseMatrix\",\"DenseMatrixSparseMatrix\",\"DenseMatrixDenseMatrix\",\"ArrayArray\",\"valueOf\",\"ArrayMatrix\",\"MatrixArray\",\"SparseMatrixAny\",\"DenseMatrixAny\",\"anySparseMatrix\",\"anyDenseMatrix\",\"ArrayAny\",\"anyArray\"]\n}\n"]