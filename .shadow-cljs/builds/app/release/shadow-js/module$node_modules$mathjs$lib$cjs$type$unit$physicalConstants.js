["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/unit/physicalConstants.js"],"~:js","shadow$provide[573]=function(c,b,y,a){function q(k,t,p){return(0,u.factory)(k,[\"config\",\"Unit\",\"BigNumber\"],function(g){var d=g.Unit,l=g.BigNumber;g=\"BigNumber\"===g.config.number?new l(t):parseFloat(t);d=new d(g,p);d.fixPrefix=!0;return d})}function f(k,t){return(0,u.factory)(k,[\"config\",\"BigNumber\"],function(p){var g=p.BigNumber;return\"BigNumber\"===p.config.number?new g(t):t})}Object.defineProperty(a,\"__esModule\",{value:!0});a.createPlanckTemperature=a.createPlanckCharge=a.createPlanckTime=a.createPlanckMass=\na.createPlanckLength=a.createGravity=a.createMolarMassC12=a.createMolarMass=a.createWienDisplacement=a.createStefanBoltzmann=a.createSecondRadiation=a.createSackurTetrode=a.createMolarVolume=a.createMolarPlanckConstant=a.createGasConstant=a.createLoschmidt=a.createFirstRadiation=a.createFaraday=a.createBoltzmann=a.createAvogadro=a.createAtomicMass=a.createEfimovFactor=a.createWeakMixingAngle=a.createThomsonCrossSection=a.createRydberg=a.createQuantumOfCirculation=a.createNeutronMass=a.createDeuteronMass=\na.createProtonMass=a.createHartreeEnergy=a.createFineStructure=a.createFermiCoupling=a.createElectronMass=a.createClassicalElectronRadius=a.createBohrRadius=a.createJosephson=a.createKlitzing=a.createNuclearMagneton=a.createMagneticFluxQuantum=a.createInverseConductanceQuantum=a.createConductanceQuantum=a.createBohrMagneton=a.createElementaryCharge=a.createCoulomb=a.createVacuumImpedance=a.createElectricConstant=a.createMagneticConstant=a.createReducedPlanckConstant=a.createPlanckConstant=a.createGravitationConstant=\na.createSpeedOfLight=void 0;var u=b(25);c=q(\"speedOfLight\",\"299792458\",\"m s^-1\");a.createSpeedOfLight=c;c=q(\"gravitationConstant\",\"6.67430e-11\",\"m^3 kg^-1 s^-2\");a.createGravitationConstant=c;c=q(\"planckConstant\",\"6.62607015e-34\",\"J s\");a.createPlanckConstant=c;c=q(\"reducedPlanckConstant\",\"1.0545718176461565e-34\",\"J s\");a.createReducedPlanckConstant=c;c=q(\"magneticConstant\",\"1.25663706212e-6\",\"N A^-2\");a.createMagneticConstant=c;c=q(\"electricConstant\",\"8.8541878128e-12\",\"F m^-1\");a.createElectricConstant=\nc;c=q(\"vacuumImpedance\",\"376.730313667\",\"ohm\");a.createVacuumImpedance=c;c=q(\"coulomb\",\"8.987551792261171e9\",\"N m^2 C^-2\");a.createCoulomb=c;c=q(\"elementaryCharge\",\"1.602176634e-19\",\"C\");a.createElementaryCharge=c;c=q(\"bohrMagneton\",\"9.2740100783e-24\",\"J T^-1\");a.createBohrMagneton=c;c=q(\"conductanceQuantum\",\"7.748091729863649e-5\",\"S\");a.createConductanceQuantum=c;c=q(\"inverseConductanceQuantum\",\"12906.403729652257\",\"ohm\");a.createInverseConductanceQuantum=c;c=q(\"magneticFluxQuantum\",\"2.0678338484619295e-15\",\n\"Wb\");a.createMagneticFluxQuantum=c;c=q(\"nuclearMagneton\",\"5.0507837461e-27\",\"J T^-1\");a.createNuclearMagneton=c;c=q(\"klitzing\",\"25812.807459304513\",\"ohm\");a.createKlitzing=c;c=q(\"josephson\",\"4.835978484169836e14 Hz V\",\"Hz V^-1\");a.createJosephson=c;c=q(\"bohrRadius\",\"5.29177210903e-11\",\"m\");a.createBohrRadius=c;c=q(\"classicalElectronRadius\",\"2.8179403262e-15\",\"m\");a.createClassicalElectronRadius=c;c=q(\"electronMass\",\"9.1093837015e-31\",\"kg\");a.createElectronMass=c;c=q(\"fermiCoupling\",\"1.1663787e-5\",\n\"GeV^-2\");a.createFermiCoupling=c;c=f(\"fineStructure\",.0072973525693);a.createFineStructure=c;c=q(\"hartreeEnergy\",\"4.3597447222071e-18\",\"J\");a.createHartreeEnergy=c;c=q(\"protonMass\",\"1.67262192369e-27\",\"kg\");a.createProtonMass=c;c=q(\"deuteronMass\",\"3.3435830926e-27\",\"kg\");a.createDeuteronMass=c;c=q(\"neutronMass\",\"1.6749271613e-27\",\"kg\");a.createNeutronMass=c;c=q(\"quantumOfCirculation\",\"3.6369475516e-4\",\"m^2 s^-1\");a.createQuantumOfCirculation=c;c=q(\"rydberg\",\"10973731.568160\",\"m^-1\");a.createRydberg=\nc;c=q(\"thomsonCrossSection\",\"6.6524587321e-29\",\"m^2\");a.createThomsonCrossSection=c;c=f(\"weakMixingAngle\",.2229);a.createWeakMixingAngle=c;c=f(\"efimovFactor\",22.7);a.createEfimovFactor=c;c=q(\"atomicMass\",\"1.66053906660e-27\",\"kg\");a.createAtomicMass=c;c=q(\"avogadro\",\"6.02214076e23\",\"mol^-1\");a.createAvogadro=c;c=q(\"boltzmann\",\"1.380649e-23\",\"J K^-1\");a.createBoltzmann=c;c=q(\"faraday\",\"96485.33212331001\",\"C mol^-1\");a.createFaraday=c;c=q(\"firstRadiation\",\"3.7417718521927573e-16\",\"W m^2\");a.createFirstRadiation=\nc;c=q(\"loschmidt\",\"2.686780111798444e25\",\"m^-3\");a.createLoschmidt=c;c=q(\"gasConstant\",\"8.31446261815324\",\"J K^-1 mol^-1\");a.createGasConstant=c;c=q(\"molarPlanckConstant\",\"3.990312712893431e-10\",\"J s mol^-1\");a.createMolarPlanckConstant=c;c=q(\"molarVolume\",\"0.022413969545014137\",\"m^3 mol^-1\");a.createMolarVolume=c;c=f(\"sackurTetrode\",-1.16487052358);a.createSackurTetrode=c;c=q(\"secondRadiation\",\"0.014387768775039337\",\"m K\");a.createSecondRadiation=c;c=q(\"stefanBoltzmann\",\"5.67037441918443e-8\",\"W m^-2 K^-4\");\na.createStefanBoltzmann=c;c=q(\"wienDisplacement\",\"2.897771955e-3\",\"m K\");a.createWienDisplacement=c;c=q(\"molarMass\",\"0.99999999965e-3\",\"kg mol^-1\");a.createMolarMass=c;c=q(\"molarMassC12\",\"11.9999999958e-3\",\"kg mol^-1\");a.createMolarMassC12=c;c=q(\"gravity\",\"9.80665\",\"m s^-2\");a.createGravity=c;c=q(\"planckLength\",\"1.616255e-35\",\"m\");a.createPlanckLength=c;c=q(\"planckMass\",\"2.176435e-8\",\"kg\");a.createPlanckMass=c;c=q(\"planckTime\",\"5.391245e-44\",\"s\");a.createPlanckTime=c;c=q(\"planckCharge\",\"1.87554603778e-18\",\n\"C\");a.createPlanckCharge=c;c=q(\"planckTemperature\",\"1.416785e+32\",\"K\");a.createPlanckTemperature=c}","~:source","shadow$provide[573] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPlanckTemperature = exports.createPlanckCharge = exports.createPlanckTime = exports.createPlanckMass = exports.createPlanckLength = exports.createGravity = exports.createMolarMassC12 = exports.createMolarMass = exports.createWienDisplacement = exports.createStefanBoltzmann = exports.createSecondRadiation = exports.createSackurTetrode = exports.createMolarVolume = exports.createMolarPlanckConstant = exports.createGasConstant = exports.createLoschmidt = exports.createFirstRadiation = exports.createFaraday = exports.createBoltzmann = exports.createAvogadro = exports.createAtomicMass = exports.createEfimovFactor = exports.createWeakMixingAngle = exports.createThomsonCrossSection = exports.createRydberg = exports.createQuantumOfCirculation = exports.createNeutronMass = exports.createDeuteronMass = exports.createProtonMass = exports.createHartreeEnergy = exports.createFineStructure = exports.createFermiCoupling = exports.createElectronMass = exports.createClassicalElectronRadius = exports.createBohrRadius = exports.createJosephson = exports.createKlitzing = exports.createNuclearMagneton = exports.createMagneticFluxQuantum = exports.createInverseConductanceQuantum = exports.createConductanceQuantum = exports.createBohrMagneton = exports.createElementaryCharge = exports.createCoulomb = exports.createVacuumImpedance = exports.createElectricConstant = exports.createMagneticConstant = exports.createReducedPlanckConstant = exports.createPlanckConstant = exports.createGravitationConstant = exports.createSpeedOfLight = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\n// Source: https://en.wikipedia.org/wiki/Physical_constant\n// Universal constants\nvar createSpeedOfLight = /* #__PURE__ */unitFactory('speedOfLight', '299792458', 'm s^-1');\nexports.createSpeedOfLight = createSpeedOfLight;\nvar createGravitationConstant = /* #__PURE__ */unitFactory('gravitationConstant', '6.67430e-11', 'm^3 kg^-1 s^-2');\nexports.createGravitationConstant = createGravitationConstant;\nvar createPlanckConstant = /* #__PURE__ */unitFactory('planckConstant', '6.62607015e-34', 'J s');\nexports.createPlanckConstant = createPlanckConstant;\nvar createReducedPlanckConstant = /* #__PURE__ */unitFactory('reducedPlanckConstant', '1.0545718176461565e-34', 'J s'); // Electromagnetic constants\n\nexports.createReducedPlanckConstant = createReducedPlanckConstant;\nvar createMagneticConstant = /* #__PURE__ */unitFactory('magneticConstant', '1.25663706212e-6', 'N A^-2');\nexports.createMagneticConstant = createMagneticConstant;\nvar createElectricConstant = /* #__PURE__ */unitFactory('electricConstant', '8.8541878128e-12', 'F m^-1');\nexports.createElectricConstant = createElectricConstant;\nvar createVacuumImpedance = /* #__PURE__ */unitFactory('vacuumImpedance', '376.730313667', 'ohm');\nexports.createVacuumImpedance = createVacuumImpedance;\nvar createCoulomb = /* #__PURE__ */unitFactory('coulomb', '8.987551792261171e9', 'N m^2 C^-2');\nexports.createCoulomb = createCoulomb;\nvar createElementaryCharge = /* #__PURE__ */unitFactory('elementaryCharge', '1.602176634e-19', 'C');\nexports.createElementaryCharge = createElementaryCharge;\nvar createBohrMagneton = /* #__PURE__ */unitFactory('bohrMagneton', '9.2740100783e-24', 'J T^-1');\nexports.createBohrMagneton = createBohrMagneton;\nvar createConductanceQuantum = /* #__PURE__ */unitFactory('conductanceQuantum', '7.748091729863649e-5', 'S');\nexports.createConductanceQuantum = createConductanceQuantum;\nvar createInverseConductanceQuantum = /* #__PURE__ */unitFactory('inverseConductanceQuantum', '12906.403729652257', 'ohm');\nexports.createInverseConductanceQuantum = createInverseConductanceQuantum;\nvar createMagneticFluxQuantum = /* #__PURE__ */unitFactory('magneticFluxQuantum', '2.0678338484619295e-15', 'Wb');\nexports.createMagneticFluxQuantum = createMagneticFluxQuantum;\nvar createNuclearMagneton = /* #__PURE__ */unitFactory('nuclearMagneton', '5.0507837461e-27', 'J T^-1');\nexports.createNuclearMagneton = createNuclearMagneton;\nvar createKlitzing = /* #__PURE__ */unitFactory('klitzing', '25812.807459304513', 'ohm');\nexports.createKlitzing = createKlitzing;\nvar createJosephson = /* #__PURE__ */unitFactory('josephson', '4.835978484169836e14 Hz V', 'Hz V^-1'); // TODO: support for Hz needed\n// Atomic and nuclear constants\n\nexports.createJosephson = createJosephson;\nvar createBohrRadius = /* #__PURE__ */unitFactory('bohrRadius', '5.29177210903e-11', 'm');\nexports.createBohrRadius = createBohrRadius;\nvar createClassicalElectronRadius = /* #__PURE__ */unitFactory('classicalElectronRadius', '2.8179403262e-15', 'm');\nexports.createClassicalElectronRadius = createClassicalElectronRadius;\nvar createElectronMass = /* #__PURE__ */unitFactory('electronMass', '9.1093837015e-31', 'kg');\nexports.createElectronMass = createElectronMass;\nvar createFermiCoupling = /* #__PURE__ */unitFactory('fermiCoupling', '1.1663787e-5', 'GeV^-2');\nexports.createFermiCoupling = createFermiCoupling;\nvar createFineStructure = numberFactory('fineStructure', 7.2973525693e-3);\nexports.createFineStructure = createFineStructure;\nvar createHartreeEnergy = /* #__PURE__ */unitFactory('hartreeEnergy', '4.3597447222071e-18', 'J');\nexports.createHartreeEnergy = createHartreeEnergy;\nvar createProtonMass = /* #__PURE__ */unitFactory('protonMass', '1.67262192369e-27', 'kg');\nexports.createProtonMass = createProtonMass;\nvar createDeuteronMass = /* #__PURE__ */unitFactory('deuteronMass', '3.3435830926e-27', 'kg');\nexports.createDeuteronMass = createDeuteronMass;\nvar createNeutronMass = /* #__PURE__ */unitFactory('neutronMass', '1.6749271613e-27', 'kg');\nexports.createNeutronMass = createNeutronMass;\nvar createQuantumOfCirculation = /* #__PURE__ */unitFactory('quantumOfCirculation', '3.6369475516e-4', 'm^2 s^-1');\nexports.createQuantumOfCirculation = createQuantumOfCirculation;\nvar createRydberg = /* #__PURE__ */unitFactory('rydberg', '10973731.568160', 'm^-1');\nexports.createRydberg = createRydberg;\nvar createThomsonCrossSection = /* #__PURE__ */unitFactory('thomsonCrossSection', '6.6524587321e-29', 'm^2');\nexports.createThomsonCrossSection = createThomsonCrossSection;\nvar createWeakMixingAngle = numberFactory('weakMixingAngle', 0.22290);\nexports.createWeakMixingAngle = createWeakMixingAngle;\nvar createEfimovFactor = numberFactory('efimovFactor', 22.7); // Physico-chemical constants\n\nexports.createEfimovFactor = createEfimovFactor;\nvar createAtomicMass = /* #__PURE__ */unitFactory('atomicMass', '1.66053906660e-27', 'kg');\nexports.createAtomicMass = createAtomicMass;\nvar createAvogadro = /* #__PURE__ */unitFactory('avogadro', '6.02214076e23', 'mol^-1');\nexports.createAvogadro = createAvogadro;\nvar createBoltzmann = /* #__PURE__ */unitFactory('boltzmann', '1.380649e-23', 'J K^-1');\nexports.createBoltzmann = createBoltzmann;\nvar createFaraday = /* #__PURE__ */unitFactory('faraday', '96485.33212331001', 'C mol^-1');\nexports.createFaraday = createFaraday;\nvar createFirstRadiation = /* #__PURE__ */unitFactory('firstRadiation', '3.7417718521927573e-16', 'W m^2'); // export const createSpectralRadiance = /* #__PURE__ */ unitFactory('spectralRadiance', '1.1910429723971881e-16', 'W m^2 sr^-1') // TODO spectralRadiance\n\nexports.createFirstRadiation = createFirstRadiation;\nvar createLoschmidt = /* #__PURE__ */unitFactory('loschmidt', '2.686780111798444e25', 'm^-3');\nexports.createLoschmidt = createLoschmidt;\nvar createGasConstant = /* #__PURE__ */unitFactory('gasConstant', '8.31446261815324', 'J K^-1 mol^-1');\nexports.createGasConstant = createGasConstant;\nvar createMolarPlanckConstant = /* #__PURE__ */unitFactory('molarPlanckConstant', '3.990312712893431e-10', 'J s mol^-1');\nexports.createMolarPlanckConstant = createMolarPlanckConstant;\nvar createMolarVolume = /* #__PURE__ */unitFactory('molarVolume', '0.022413969545014137', 'm^3 mol^-1');\nexports.createMolarVolume = createMolarVolume;\nvar createSackurTetrode = numberFactory('sackurTetrode', -1.16487052358);\nexports.createSackurTetrode = createSackurTetrode;\nvar createSecondRadiation = /* #__PURE__ */unitFactory('secondRadiation', '0.014387768775039337', 'm K');\nexports.createSecondRadiation = createSecondRadiation;\nvar createStefanBoltzmann = /* #__PURE__ */unitFactory('stefanBoltzmann', '5.67037441918443e-8', 'W m^-2 K^-4');\nexports.createStefanBoltzmann = createStefanBoltzmann;\nvar createWienDisplacement = /* #__PURE__ */unitFactory('wienDisplacement', '2.897771955e-3', 'm K'); // Adopted values\n\nexports.createWienDisplacement = createWienDisplacement;\nvar createMolarMass = /* #__PURE__ */unitFactory('molarMass', '0.99999999965e-3', 'kg mol^-1');\nexports.createMolarMass = createMolarMass;\nvar createMolarMassC12 = /* #__PURE__ */unitFactory('molarMassC12', '11.9999999958e-3', 'kg mol^-1');\nexports.createMolarMassC12 = createMolarMassC12;\nvar createGravity = /* #__PURE__ */unitFactory('gravity', '9.80665', 'm s^-2'); // atm is defined in Unit.js\n// Natural units\n\nexports.createGravity = createGravity;\nvar createPlanckLength = /* #__PURE__ */unitFactory('planckLength', '1.616255e-35', 'm');\nexports.createPlanckLength = createPlanckLength;\nvar createPlanckMass = /* #__PURE__ */unitFactory('planckMass', '2.176435e-8', 'kg');\nexports.createPlanckMass = createPlanckMass;\nvar createPlanckTime = /* #__PURE__ */unitFactory('planckTime', '5.391245e-44', 's');\nexports.createPlanckTime = createPlanckTime;\nvar createPlanckCharge = /* #__PURE__ */unitFactory('planckCharge', '1.87554603778e-18', 'C');\nexports.createPlanckCharge = createPlanckCharge;\nvar createPlanckTemperature = /* #__PURE__ */unitFactory('planckTemperature', '1.416785e+32', 'K'); // helper function to create a factory function which creates a physical constant,\n// a Unit with either a number value or a BigNumber value depending on the configuration\n\nexports.createPlanckTemperature = createPlanckTemperature;\n\nfunction unitFactory(name, valueStr, unitStr) {\n  var dependencies = ['config', 'Unit', 'BigNumber'];\n  return (0, _factory.factory)(name, dependencies, function (_ref) {\n    var config = _ref.config,\n        Unit = _ref.Unit,\n        BigNumber = _ref.BigNumber;\n    // Note that we can parse into number or BigNumber.\n    // We do not parse into Fractions as that doesn't make sense: we would lose precision of the values\n    // Therefore we dont use Unit.parse()\n    var value = config.number === 'BigNumber' ? new BigNumber(valueStr) : parseFloat(valueStr);\n    var unit = new Unit(value, unitStr);\n    unit.fixPrefix = true;\n    return unit;\n  });\n} // helper function to create a factory function which creates a numeric constant,\n// either a number or BigNumber depending on the configuration\n\n\nfunction numberFactory(name, value) {\n  var dependencies = ['config', 'BigNumber'];\n  return (0, _factory.factory)(name, dependencies, function (_ref2) {\n    var config = _ref2.config,\n        BigNumber = _ref2.BigNumber;\n    return config.number === 'BigNumber' ? new BigNumber(value) : value;\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["createMagneticFluxQuantum","createMolarVolume","createSackurTetrode","createPlanckMass","createFineStructure","createBohrMagneton","createMagneticConstant","createGravitationConstant","createPlanckCharge","createDeuteronMass","createFermiCoupling","createBoltzmann","createElectronMass","createGasConstant","__esModule","createMolarPlanckConstant","createStefanBoltzmann","createInverseConductanceQuantum","createBohrRadius","createMolarMassC12","createThomsonCrossSection","createNeutronMass","createRydberg","createAvogadro","createKlitzing","createWeakMixingAngle","value","createHartreeEnergy","createJosephson","createPlanckTemperature","createElectricConstant","createCoulomb","createConductanceQuantum","createSpeedOfLight","createLoschmidt","createEfimovFactor","createPlanckLength","createReducedPlanckConstant","fixPrefix","createVacuumImpedance","createSecondRadiation","createWienDisplacement","createClassicalElectronRadius","createNuclearMagneton","createProtonMass","createMolarMass","createGravity","createFaraday","createFirstRadiation","createAtomicMass","createPlanckTime","createElementaryCharge","createPlanckConstant","createQuantumOfCirculation"]],"~:compiled-at",1619135724040,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$unit$physicalConstants.js\",\n\"lineCount\":11,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/unit/physicalConstants.js\"],\n\"sourcesContent\":[\"shadow$provide[573] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createPlanckTemperature = exports.createPlanckCharge = exports.createPlanckTime = exports.createPlanckMass = exports.createPlanckLength = exports.createGravity = exports.createMolarMassC12 = exports.createMolarMass = exports.createWienDisplacement = exports.createStefanBoltzmann = exports.createSecondRadiation = exports.createSackurTetrode = exports.createMolarVolume = exports.createMolarPlanckConstant = exports.createGasConstant = exports.createLoschmidt = exports.createFirstRadiation = exports.createFaraday = exports.createBoltzmann = exports.createAvogadro = exports.createAtomicMass = exports.createEfimovFactor = exports.createWeakMixingAngle = exports.createThomsonCrossSection = exports.createRydberg = exports.createQuantumOfCirculation = exports.createNeutronMass = exports.createDeuteronMass = exports.createProtonMass = exports.createHartreeEnergy = exports.createFineStructure = exports.createFermiCoupling = exports.createElectronMass = exports.createClassicalElectronRadius = exports.createBohrRadius = exports.createJosephson = exports.createKlitzing = exports.createNuclearMagneton = exports.createMagneticFluxQuantum = exports.createInverseConductanceQuantum = exports.createConductanceQuantum = exports.createBohrMagneton = exports.createElementaryCharge = exports.createCoulomb = exports.createVacuumImpedance = exports.createElectricConstant = exports.createMagneticConstant = exports.createReducedPlanckConstant = exports.createPlanckConstant = exports.createGravitationConstant = exports.createSpeedOfLight = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\n// Source: https://en.wikipedia.org/wiki/Physical_constant\\n// Universal constants\\nvar createSpeedOfLight = /* #__PURE__ */unitFactory('speedOfLight', '299792458', 'm s^-1');\\nexports.createSpeedOfLight = createSpeedOfLight;\\nvar createGravitationConstant = /* #__PURE__ */unitFactory('gravitationConstant', '6.67430e-11', 'm^3 kg^-1 s^-2');\\nexports.createGravitationConstant = createGravitationConstant;\\nvar createPlanckConstant = /* #__PURE__ */unitFactory('planckConstant', '6.62607015e-34', 'J s');\\nexports.createPlanckConstant = createPlanckConstant;\\nvar createReducedPlanckConstant = /* #__PURE__ */unitFactory('reducedPlanckConstant', '1.0545718176461565e-34', 'J s'); // Electromagnetic constants\\n\\nexports.createReducedPlanckConstant = createReducedPlanckConstant;\\nvar createMagneticConstant = /* #__PURE__ */unitFactory('magneticConstant', '1.25663706212e-6', 'N A^-2');\\nexports.createMagneticConstant = createMagneticConstant;\\nvar createElectricConstant = /* #__PURE__ */unitFactory('electricConstant', '8.8541878128e-12', 'F m^-1');\\nexports.createElectricConstant = createElectricConstant;\\nvar createVacuumImpedance = /* #__PURE__ */unitFactory('vacuumImpedance', '376.730313667', 'ohm');\\nexports.createVacuumImpedance = createVacuumImpedance;\\nvar createCoulomb = /* #__PURE__ */unitFactory('coulomb', '8.987551792261171e9', 'N m^2 C^-2');\\nexports.createCoulomb = createCoulomb;\\nvar createElementaryCharge = /* #__PURE__ */unitFactory('elementaryCharge', '1.602176634e-19', 'C');\\nexports.createElementaryCharge = createElementaryCharge;\\nvar createBohrMagneton = /* #__PURE__ */unitFactory('bohrMagneton', '9.2740100783e-24', 'J T^-1');\\nexports.createBohrMagneton = createBohrMagneton;\\nvar createConductanceQuantum = /* #__PURE__ */unitFactory('conductanceQuantum', '7.748091729863649e-5', 'S');\\nexports.createConductanceQuantum = createConductanceQuantum;\\nvar createInverseConductanceQuantum = /* #__PURE__ */unitFactory('inverseConductanceQuantum', '12906.403729652257', 'ohm');\\nexports.createInverseConductanceQuantum = createInverseConductanceQuantum;\\nvar createMagneticFluxQuantum = /* #__PURE__ */unitFactory('magneticFluxQuantum', '2.0678338484619295e-15', 'Wb');\\nexports.createMagneticFluxQuantum = createMagneticFluxQuantum;\\nvar createNuclearMagneton = /* #__PURE__ */unitFactory('nuclearMagneton', '5.0507837461e-27', 'J T^-1');\\nexports.createNuclearMagneton = createNuclearMagneton;\\nvar createKlitzing = /* #__PURE__ */unitFactory('klitzing', '25812.807459304513', 'ohm');\\nexports.createKlitzing = createKlitzing;\\nvar createJosephson = /* #__PURE__ */unitFactory('josephson', '4.835978484169836e14 Hz V', 'Hz V^-1'); // TODO: support for Hz needed\\n// Atomic and nuclear constants\\n\\nexports.createJosephson = createJosephson;\\nvar createBohrRadius = /* #__PURE__ */unitFactory('bohrRadius', '5.29177210903e-11', 'm');\\nexports.createBohrRadius = createBohrRadius;\\nvar createClassicalElectronRadius = /* #__PURE__ */unitFactory('classicalElectronRadius', '2.8179403262e-15', 'm');\\nexports.createClassicalElectronRadius = createClassicalElectronRadius;\\nvar createElectronMass = /* #__PURE__ */unitFactory('electronMass', '9.1093837015e-31', 'kg');\\nexports.createElectronMass = createElectronMass;\\nvar createFermiCoupling = /* #__PURE__ */unitFactory('fermiCoupling', '1.1663787e-5', 'GeV^-2');\\nexports.createFermiCoupling = createFermiCoupling;\\nvar createFineStructure = numberFactory('fineStructure', 7.2973525693e-3);\\nexports.createFineStructure = createFineStructure;\\nvar createHartreeEnergy = /* #__PURE__ */unitFactory('hartreeEnergy', '4.3597447222071e-18', 'J');\\nexports.createHartreeEnergy = createHartreeEnergy;\\nvar createProtonMass = /* #__PURE__ */unitFactory('protonMass', '1.67262192369e-27', 'kg');\\nexports.createProtonMass = createProtonMass;\\nvar createDeuteronMass = /* #__PURE__ */unitFactory('deuteronMass', '3.3435830926e-27', 'kg');\\nexports.createDeuteronMass = createDeuteronMass;\\nvar createNeutronMass = /* #__PURE__ */unitFactory('neutronMass', '1.6749271613e-27', 'kg');\\nexports.createNeutronMass = createNeutronMass;\\nvar createQuantumOfCirculation = /* #__PURE__ */unitFactory('quantumOfCirculation', '3.6369475516e-4', 'm^2 s^-1');\\nexports.createQuantumOfCirculation = createQuantumOfCirculation;\\nvar createRydberg = /* #__PURE__ */unitFactory('rydberg', '10973731.568160', 'm^-1');\\nexports.createRydberg = createRydberg;\\nvar createThomsonCrossSection = /* #__PURE__ */unitFactory('thomsonCrossSection', '6.6524587321e-29', 'm^2');\\nexports.createThomsonCrossSection = createThomsonCrossSection;\\nvar createWeakMixingAngle = numberFactory('weakMixingAngle', 0.22290);\\nexports.createWeakMixingAngle = createWeakMixingAngle;\\nvar createEfimovFactor = numberFactory('efimovFactor', 22.7); // Physico-chemical constants\\n\\nexports.createEfimovFactor = createEfimovFactor;\\nvar createAtomicMass = /* #__PURE__ */unitFactory('atomicMass', '1.66053906660e-27', 'kg');\\nexports.createAtomicMass = createAtomicMass;\\nvar createAvogadro = /* #__PURE__ */unitFactory('avogadro', '6.02214076e23', 'mol^-1');\\nexports.createAvogadro = createAvogadro;\\nvar createBoltzmann = /* #__PURE__ */unitFactory('boltzmann', '1.380649e-23', 'J K^-1');\\nexports.createBoltzmann = createBoltzmann;\\nvar createFaraday = /* #__PURE__ */unitFactory('faraday', '96485.33212331001', 'C mol^-1');\\nexports.createFaraday = createFaraday;\\nvar createFirstRadiation = /* #__PURE__ */unitFactory('firstRadiation', '3.7417718521927573e-16', 'W m^2'); // export const createSpectralRadiance = /* #__PURE__ */ unitFactory('spectralRadiance', '1.1910429723971881e-16', 'W m^2 sr^-1') // TODO spectralRadiance\\n\\nexports.createFirstRadiation = createFirstRadiation;\\nvar createLoschmidt = /* #__PURE__ */unitFactory('loschmidt', '2.686780111798444e25', 'm^-3');\\nexports.createLoschmidt = createLoschmidt;\\nvar createGasConstant = /* #__PURE__ */unitFactory('gasConstant', '8.31446261815324', 'J K^-1 mol^-1');\\nexports.createGasConstant = createGasConstant;\\nvar createMolarPlanckConstant = /* #__PURE__ */unitFactory('molarPlanckConstant', '3.990312712893431e-10', 'J s mol^-1');\\nexports.createMolarPlanckConstant = createMolarPlanckConstant;\\nvar createMolarVolume = /* #__PURE__ */unitFactory('molarVolume', '0.022413969545014137', 'm^3 mol^-1');\\nexports.createMolarVolume = createMolarVolume;\\nvar createSackurTetrode = numberFactory('sackurTetrode', -1.16487052358);\\nexports.createSackurTetrode = createSackurTetrode;\\nvar createSecondRadiation = /* #__PURE__ */unitFactory('secondRadiation', '0.014387768775039337', 'm K');\\nexports.createSecondRadiation = createSecondRadiation;\\nvar createStefanBoltzmann = /* #__PURE__ */unitFactory('stefanBoltzmann', '5.67037441918443e-8', 'W m^-2 K^-4');\\nexports.createStefanBoltzmann = createStefanBoltzmann;\\nvar createWienDisplacement = /* #__PURE__ */unitFactory('wienDisplacement', '2.897771955e-3', 'm K'); // Adopted values\\n\\nexports.createWienDisplacement = createWienDisplacement;\\nvar createMolarMass = /* #__PURE__ */unitFactory('molarMass', '0.99999999965e-3', 'kg mol^-1');\\nexports.createMolarMass = createMolarMass;\\nvar createMolarMassC12 = /* #__PURE__ */unitFactory('molarMassC12', '11.9999999958e-3', 'kg mol^-1');\\nexports.createMolarMassC12 = createMolarMassC12;\\nvar createGravity = /* #__PURE__ */unitFactory('gravity', '9.80665', 'm s^-2'); // atm is defined in Unit.js\\n// Natural units\\n\\nexports.createGravity = createGravity;\\nvar createPlanckLength = /* #__PURE__ */unitFactory('planckLength', '1.616255e-35', 'm');\\nexports.createPlanckLength = createPlanckLength;\\nvar createPlanckMass = /* #__PURE__ */unitFactory('planckMass', '2.176435e-8', 'kg');\\nexports.createPlanckMass = createPlanckMass;\\nvar createPlanckTime = /* #__PURE__ */unitFactory('planckTime', '5.391245e-44', 's');\\nexports.createPlanckTime = createPlanckTime;\\nvar createPlanckCharge = /* #__PURE__ */unitFactory('planckCharge', '1.87554603778e-18', 'C');\\nexports.createPlanckCharge = createPlanckCharge;\\nvar createPlanckTemperature = /* #__PURE__ */unitFactory('planckTemperature', '1.416785e+32', 'K'); // helper function to create a factory function which creates a physical constant,\\n// a Unit with either a number value or a BigNumber value depending on the configuration\\n\\nexports.createPlanckTemperature = createPlanckTemperature;\\n\\nfunction unitFactory(name, valueStr, unitStr) {\\n  var dependencies = ['config', 'Unit', 'BigNumber'];\\n  return (0, _factory.factory)(name, dependencies, function (_ref) {\\n    var config = _ref.config,\\n        Unit = _ref.Unit,\\n        BigNumber = _ref.BigNumber;\\n    // Note that we can parse into number or BigNumber.\\n    // We do not parse into Fractions as that doesn't make sense: we would lose precision of the values\\n    // Therefore we dont use Unit.parse()\\n    var value = config.number === 'BigNumber' ? new BigNumber(valueStr) : parseFloat(valueStr);\\n    var unit = new Unit(value, unitStr);\\n    unit.fixPrefix = true;\\n    return unit;\\n  });\\n} // helper function to create a factory function which creates a numeric constant,\\n// either a number or BigNumber depending on the configuration\\n\\n\\nfunction numberFactory(name, value) {\\n  var dependencies = ['config', 'BigNumber'];\\n  return (0, _factory.factory)(name, dependencies, function (_ref2) {\\n    var config = _ref2.config,\\n        BigNumber = _ref2.BigNumber;\\n    return config.number === 'BigNumber' ? new BigNumber(value) : value;\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"unitFactory\",\"name\",\"valueStr\",\"unitStr\",\"_factory\",\"factory\",\"dependencies\",\"_ref\",\"Unit\",\"BigNumber\",\"value\",\"config\",\"number\",\"parseFloat\",\"unit\",\"fixPrefix\",\"numberFactory\",\"_ref2\",\"Object\",\"defineProperty\",\"createPlanckTemperature\",\"createPlanckCharge\",\"createPlanckTime\",\"createPlanckMass\",\"createPlanckLength\",\"createGravity\",\"createMolarMassC12\",\"createMolarMass\",\"createWienDisplacement\",\"createStefanBoltzmann\",\"createSecondRadiation\",\"createSackurTetrode\",\"createMolarVolume\",\"createMolarPlanckConstant\",\"createGasConstant\",\"createLoschmidt\",\"createFirstRadiation\",\"createFaraday\",\"createBoltzmann\",\"createAvogadro\",\"createAtomicMass\",\"createEfimovFactor\",\"createWeakMixingAngle\",\"createThomsonCrossSection\",\"createRydberg\",\"createQuantumOfCirculation\",\"createNeutronMass\",\"createDeuteronMass\",\"createProtonMass\",\"createHartreeEnergy\",\"createFineStructure\",\"createFermiCoupling\",\"createElectronMass\",\"createClassicalElectronRadius\",\"createBohrRadius\",\"createJosephson\",\"createKlitzing\",\"createNuclearMagneton\",\"createMagneticFluxQuantum\",\"createInverseConductanceQuantum\",\"createConductanceQuantum\",\"createBohrMagneton\",\"createElementaryCharge\",\"createCoulomb\",\"createVacuumImpedance\",\"createElectricConstant\",\"createMagneticConstant\",\"createReducedPlanckConstant\",\"createPlanckConstant\",\"createGravitationConstant\",\"createSpeedOfLight\"]\n}\n"]