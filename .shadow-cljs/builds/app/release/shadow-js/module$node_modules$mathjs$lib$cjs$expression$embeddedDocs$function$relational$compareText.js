["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/relational/compareText.js"],"~:js","shadow$provide[369]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.compareTextDocs={name:\"compareText\",category:\"Relational\",syntax:[\"compareText(x, y)\"],description:\"Compare two strings lexically. Comparison is case sensitive. Returns 1 when x \\x3e y, -1 when x \\x3c y, and 0 when x \\x3d\\x3d y.\",examples:'compareText(\"B\", \"A\");compareText(\"A\", \"B\");compareText(\"A\", \"A\");compareText(\"2\", \"10\");compare(\"2\", \"10\");compare(2, 10);compareNatural(\"2\", \"10\");compareText(\"B\", [\"A\", \"B\", \"C\"])'.split(\";\"),\nseealso:[\"compare\",\"compareNatural\"]}}","~:source","shadow$provide[369] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.compareTextDocs = void 0;\nvar compareTextDocs = {\n  name: 'compareText',\n  category: 'Relational',\n  syntax: ['compareText(x, y)'],\n  description: 'Compare two strings lexically. Comparison is case sensitive. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',\n  examples: ['compareText(\"B\", \"A\")', 'compareText(\"A\", \"B\")', 'compareText(\"A\", \"A\")', 'compareText(\"2\", \"10\")', 'compare(\"2\", \"10\")', 'compare(2, 10)', 'compareNatural(\"2\", \"10\")', 'compareText(\"B\", [\"A\", \"B\", \"C\"])'],\n  seealso: ['compare', 'compareNatural']\n};\nexports.compareTextDocs = compareTextDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","__esModule","name","value","syntax","category","examples","compareTextDocs","description"]],"~:compiled-at",1619135723991,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$relational$compareText.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,eAAR,CARsBA,CACpBC,KAAM,aADcD,CAEpBE,SAAU,YAFUF,CAGpBG,OAAQ,CAAC,mBAAD,CAHYH,CAIpBI,YAAa,kIAJOJ,CAKpBK,SAAU,wLAAA,CAAA,KAAA,CAAA,GAAA,CALUL;AAMpBM,QAAS,CAAC,SAAD,CAAY,gBAAZ,CANWN,CAPwC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/relational/compareText.js\"],\n\"sourcesContent\":[\"shadow$provide[369] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.compareTextDocs = void 0;\\nvar compareTextDocs = {\\n  name: 'compareText',\\n  category: 'Relational',\\n  syntax: ['compareText(x, y)'],\\n  description: 'Compare two strings lexically. Comparison is case sensitive. ' + 'Returns 1 when x > y, -1 when x < y, and 0 when x == y.',\\n  examples: ['compareText(\\\"B\\\", \\\"A\\\")', 'compareText(\\\"A\\\", \\\"B\\\")', 'compareText(\\\"A\\\", \\\"A\\\")', 'compareText(\\\"2\\\", \\\"10\\\")', 'compare(\\\"2\\\", \\\"10\\\")', 'compare(2, 10)', 'compareNatural(\\\"2\\\", \\\"10\\\")', 'compareText(\\\"B\\\", [\\\"A\\\", \\\"B\\\", \\\"C\\\"])'],\\n  seealso: ['compare', 'compareNatural']\\n};\\nexports.compareTextDocs = compareTextDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"compareTextDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]