["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setDistinct.js"],"~:js","shadow$provide[358]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.setDistinctDocs={name:\"setDistinct\",category:\"Set\",syntax:[\"setDistinct(set)\"],description:\"Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.\",examples:[\"setDistinct([1, 1, 1, 2, 2, 3])\"],seealso:[\"setMultiplicity\"]}}","~:source","shadow$provide[358] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setDistinctDocs = void 0;\nvar setDistinctDocs = {\n  name: 'setDistinct',\n  category: 'Set',\n  syntax: ['setDistinct(set)'],\n  description: 'Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  examples: ['setDistinct([1, 1, 1, 2, 2, 3])'],\n  seealso: ['setMultiplicity']\n};\nexports.setDistinctDocs = setDistinctDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","__esModule","name","value","setDistinctDocs","syntax","category","examples","description"]],"~:compiled-at",1619135723990,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setDistinct.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,eAAR,CARsBA,CACpBC,KAAM,aADcD,CAEpBE,SAAU,KAFUF,CAGpBG,OAAQ,CAAC,kBAAD,CAHYH,CAIpBI,YAAa,0IAJOJ,CAKpBK,SAAU,CAAC,iCAAD,CALUL,CAMpBM,QAAS,CAAC,iBAAD,CANWN,CAPwC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setDistinct.js\"],\n\"sourcesContent\":[\"shadow$provide[358] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.setDistinctDocs = void 0;\\nvar setDistinctDocs = {\\n  name: 'setDistinct',\\n  category: 'Set',\\n  syntax: ['setDistinct(set)'],\\n  description: 'Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',\\n  examples: ['setDistinct([1, 1, 1, 2, 2, 3])'],\\n  seealso: ['setMultiplicity']\\n};\\nexports.setDistinctDocs = setDistinctDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"setDistinctDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]