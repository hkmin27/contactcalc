["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/node/utils/assign.js"],"~:js","shadow$provide[254]=function(c,b,y,a){function q(k){\"@babel/helpers - typeof\";q=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t};return q(k)}Object.defineProperty(a,\"__esModule\",{value:!0});a.assignFactory=function(k){var t=k.subset,p=k.matrix;return function(g,d,l){try{if(Array.isArray(g))return p(g).subset(d,l).valueOf();if(g&&\"function\"===typeof g.subset)return g.subset(d,\nl);if(\"string\"===typeof g)return t(g,d,l);if(\"object\"===q(g)){if(!d.isObjectProperty())throw TypeError(\"Cannot apply a numeric index as object property\");(0,u.setSafeProperty)(g,d.getObjectProperty(),l);return g}throw new TypeError(\"Cannot apply index: unsupported type of object\");}catch(h){throw(0,f.errorTransform)(h);}}};var f=b(250),u=b(147)}","~:source","shadow$provide[254] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignFactory = assignFactory;\n\nvar _errorTransform = require(\"../../transform/utils/errorTransform.js\");\n\nvar _customs = require(\"../../../utils/customs.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction assignFactory(_ref) {\n  var subset = _ref.subset,\n      matrix = _ref.matrix;\n\n  /**\n   * Replace part of an object:\n   *\n   * - Assign a property to an object\n   * - Replace a part of a string\n   * - Replace a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @param {*} value\n   * @return {Object | Array | Matrix | string} Returns the original object\n   *                                            except in case of a string\n   */\n  // TODO: change assign to return the value instead of the object\n  return function assign(object, index, value) {\n    try {\n      if (Array.isArray(object)) {\n        // we use matrix.subset here instead of the function subset because we must not clone the contents\n        return matrix(object).subset(index, value).valueOf();\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index, value);\n      } else if (typeof object === 'string') {\n        // TODO: move setStringSubset into a separate util file, use that\n        return subset(object, index, value);\n      } else if (_typeof(object) === 'object') {\n        if (!index.isObjectProperty()) {\n          throw TypeError('Cannot apply a numeric index as object property');\n        }\n\n        (0, _customs.setSafeProperty)(object, index.getObjectProperty(), value);\n        return object;\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw (0, _errorTransform.errorTransform)(err);\n    }\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$errorTransform","~$module$node_modules$mathjs$lib$cjs$utils$customs"]],"~:properties",["^5",["__esModule","value","assignFactory"]],"~:compiled-at",1619135723955,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$node$utils$assign.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAY9DC,QAASA,EAAO,CAACC,CAAD,CAAM,CAAE,yBAAsGD,EAAA,CAArD,UAAtB,GAAI,MAAOE,OAAX,EAA+D,QAA/D,GAAoC,MAAOA,OAAOC,CAAAA,QAAlD,CAAqFH,QAAgB,CAACC,CAAD,CAAM,CAAE,MAAO,OAAOA,EAAhB,CAA3G,CAAsJD,QAAgB,CAACC,CAAD,CAAM,CAAE,MAAOA,EAAA,EAAyB,UAAzB,GAAO,MAAOC,OAAd,EAAuCD,CAAIG,CAAAA,WAA3C,GAA2DF,MAA3D,EAAqED,CAArE,GAA6EC,MAAOG,CAAAA,SAApF,CAAgG,QAAhG,CAA2G,MAAOJ,EAA3H,CAAqI,OAAOD,EAAA,CAAQC,CAAR,CAArV,CATtBK,MAAOC,CAAAA,cAAP,CAAsBR,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CS,MAAO,CAAA,CADoC,CAA7C,CAGAT,EAAQU,CAAAA,aAAR,CAQAA,QAAsB,CAACC,CAAD,CAAO,CAAA,IACvBC,EAASD,CAAKC,CAAAA,MADS,CAEvBC,EAASF,CAAKE,CAAAA,MAgBlB,OAAOC,SAAe,CAACC,CAAD,CAASC,CAAT,CAAgBP,CAAhB,CAAuB,CAC3C,GAAI,CACF,GAAIQ,KAAMC,CAAAA,OAAN,CAAcH,CAAd,CAAJ,CAEE,MAAOF,EAAA,CAAOE,CAAP,CAAeH,CAAAA,MAAf,CAAsBI,CAAtB,CAA6BP,CAA7B,CAAoCU,CAAAA,OAApC,EACF,IAAIJ,CAAJ,EAAuC,UAAvC,GAAc,MAAOA,EAAOH,CAAAA,MAA5B,CAEL,MAAOG,EAAOH,CAAAA,MAAP,CAAcI,CAAd;AAAqBP,CAArB,CACF,IAAsB,QAAtB,GAAI,MAAOM,EAAX,CAEL,MAAOH,EAAA,CAAOG,CAAP,CAAeC,CAAf,CAAsBP,CAAtB,CACF,IAAwB,QAAxB,GAAIR,CAAA,CAAQc,CAAR,CAAJ,CAAkC,CACvC,GAAI,CAACC,CAAMI,CAAAA,gBAAN,EAAL,CACE,KAAMC,UAAA,CAAU,iDAAV,CAAN,CAGF,CAAC,CAAA,CAAGC,CAASC,CAAAA,eAAb,EAA8BR,CAA9B,CAAsCC,CAAMQ,CAAAA,iBAAN,EAAtC,CAAiEf,CAAjE,CACA,OAAOM,EANgC,CAQvC,KAAM,KAAIM,SAAJ,CAAc,gDAAd,CAAN,CAlBA,CAoBF,MAAOI,CAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGC,CAAgBC,CAAAA,cAApB,EAAoCF,CAApC,CAAN,CADY,CArB6B,CAlBlB,CAN7B,KAAIC,EAAkB5B,CAAA,CAAQ,GAAR,CAAtB,CAEIwB,EAAWxB,CAAA,CAAQ,GAAR,CAV+C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/node/utils/assign.js\"],\n\"sourcesContent\":[\"shadow$provide[254] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.assignFactory = assignFactory;\\n\\nvar _errorTransform = require(\\\"../../transform/utils/errorTransform.js\\\");\\n\\nvar _customs = require(\\\"../../../utils/customs.js\\\");\\n\\nfunction _typeof(obj) { \\\"@babel/helpers - typeof\\\"; if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction assignFactory(_ref) {\\n  var subset = _ref.subset,\\n      matrix = _ref.matrix;\\n\\n  /**\\n   * Replace part of an object:\\n   *\\n   * - Assign a property to an object\\n   * - Replace a part of a string\\n   * - Replace a matrix subset\\n   *\\n   * @param {Object | Array | Matrix | string} object\\n   * @param {Index} index\\n   * @param {*} value\\n   * @return {Object | Array | Matrix | string} Returns the original object\\n   *                                            except in case of a string\\n   */\\n  // TODO: change assign to return the value instead of the object\\n  return function assign(object, index, value) {\\n    try {\\n      if (Array.isArray(object)) {\\n        // we use matrix.subset here instead of the function subset because we must not clone the contents\\n        return matrix(object).subset(index, value).valueOf();\\n      } else if (object && typeof object.subset === 'function') {\\n        // Matrix\\n        return object.subset(index, value);\\n      } else if (typeof object === 'string') {\\n        // TODO: move setStringSubset into a separate util file, use that\\n        return subset(object, index, value);\\n      } else if (_typeof(object) === 'object') {\\n        if (!index.isObjectProperty()) {\\n          throw TypeError('Cannot apply a numeric index as object property');\\n        }\\n\\n        (0, _customs.setSafeProperty)(object, index.getObjectProperty(), value);\\n        return object;\\n      } else {\\n        throw new TypeError('Cannot apply index: unsupported type of object');\\n      }\\n    } catch (err) {\\n      throw (0, _errorTransform.errorTransform)(err);\\n    }\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"Object\",\"defineProperty\",\"value\",\"assignFactory\",\"_ref\",\"subset\",\"matrix\",\"assign\",\"object\",\"index\",\"Array\",\"isArray\",\"valueOf\",\"isObjectProperty\",\"TypeError\",\"_customs\",\"setSafeProperty\",\"getObjectProperty\",\"err\",\"_errorTransform\",\"errorTransform\"]\n}\n"]