["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/round.js"],"~:js","shadow$provide[166]=function(c,b,y,a){function q(h,n){var r=Object.keys(h);if(Object.getOwnPropertySymbols){var v=Object.getOwnPropertySymbols(h);n&&(v=v.filter(function(C){return Object.getOwnPropertyDescriptor(h,C).enumerable}));r.push.apply(r,v)}return r}function f(h){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?q(Object(r),!0).forEach(function(v){var C=r[v];v in h?Object.defineProperty(h,v,{value:C,enumerable:!0,configurable:!0,writable:!0}):h[v]=C}):Object.getOwnPropertyDescriptors?\nObject.defineProperties(h,Object.getOwnPropertyDescriptors(r)):q(Object(r)).forEach(function(v){Object.defineProperty(h,v,Object.getOwnPropertyDescriptor(r,v))})}return h}Object.defineProperty(a,\"__esModule\",{value:!0});a.createRoundNumber=a.createRound=void 0;c=b(25);var u=b(38),k=b(19),t=b(76),p=b(96),g=b(77),d=b(50);b=(0,c.factory)(\"round\",\"typed matrix equalScalar zeros BigNumber DenseMatrix\".split(\" \"),function(h){var n=h.typed,r=h.matrix,v=h.equalScalar,C=h.zeros,z=h.BigNumber;h=h.DenseMatrix;\nvar w=(0,t.createAlgorithm11)({typed:n,equalScalar:v}),B=(0,p.createAlgorithm12)({typed:n,DenseMatrix:h}),x=(0,g.createAlgorithm14)({typed:n});return n(\"round\",f(f({},l),{},{Complex:function(D){return D.round()},\"Complex, number\":function(D,F){if(F%1)throw new TypeError(\"Number of decimals in function round must be an integer\");return D.round(F)},\"Complex, BigNumber\":function(D,F){if(!F.isInteger())throw new TypeError(\"Number of decimals in function round must be an integer\");F=F.toNumber();return D.round(F)},\n\"number, BigNumber\":function(D,F){if(!F.isInteger())throw new TypeError(\"Number of decimals in function round must be an integer\");return(new z(D)).toDecimalPlaces(F.toNumber())},BigNumber:function(D){return D.toDecimalPlaces(0)},\"BigNumber, BigNumber\":function(D,F){if(!F.isInteger())throw new TypeError(\"Number of decimals in function round must be an integer\");return D.toDecimalPlaces(F.toNumber())},Fraction:function(D){return D.round()},\"Fraction, number\":function(D,F){if(F%1)throw new TypeError(\"Number of decimals in function round must be an integer\");\nreturn D.round(F)},\"Array | Matrix\":function(D){return(0,u.deepMap)(D,this,!0)},\"SparseMatrix, number | BigNumber\":function(D,F){return w(D,F,this,!1)},\"DenseMatrix, number | BigNumber\":function(D,F){return x(D,F,this,!1)},\"number | Complex | BigNumber, SparseMatrix\":function(D,F){return v(D,0)?C(F.size(),F.storage()):B(F,D,this,!0)},\"number | Complex | BigNumber, DenseMatrix\":function(D,F){return v(D,0)?C(F.size(),F.storage()):x(F,D,this,!0)},\"Array, number | BigNumber\":function(D,F){return x(r(D),\nF,this,!1).valueOf()},\"number | Complex | BigNumber, Array\":function(D,F){return x(r(F),D,this,!0).valueOf()}}))});a.createRound=b;var l={number:d.roundNumber,\"number, number\":function(h,n){if(!(0,k.isInteger)(n))throw new TypeError(\"Number of decimals in function round must be an integer\");if(0>n||15<n)throw Error(\"Number of decimals in function round must be in te range of 0-15\");return(0,d.roundNumber)(h,n)}};b=(0,c.factory)(\"round\",[\"typed\"],function(h){h=h.typed;return h(\"round\",l)});a.createRoundNumber=\nb}","~:source","shadow$provide[166] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRoundNumber = exports.createRound = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NO_INT = 'Number of decimals in function round must be an integer';\nvar name = 'round';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];\nvar createRound = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      zeros = _ref.zeros,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm2.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm14 = (0, _algorithm3.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards the nearest integer.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.round(x)\n   *    math.round(x, n)\n   *\n   * Examples:\n   *\n   *    math.round(3.22)             // returns number 3\n   *    math.round(3.82)             // returns number 4\n   *    math.round(-4.2)             // returns number -4\n   *    math.round(-4.7)             // returns number -5\n   *    math.round(3.22, 1)          // returns number 3.2\n   *    math.round(3.88, 1)          // returns number 3.9\n   *    math.round(-4.21, 1)         // returns number -4.2\n   *    math.round(-4.71, 1)         // returns number -4.7\n   *    math.round(math.pi, 3)       // returns number 3.142\n   *    math.round(123.45678, 2)     // returns number 123.46\n   *\n   *    const c = math.complex(3.2, -2.7)\n   *    math.round(c)                // returns Complex 3 - 3i\n   *\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\n   *\n   * See also:\n   *\n   *    ceil, fix, floor\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {\n    Complex: function Complex(x) {\n      return x.round();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Complex, BigNumber': function ComplexBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      var _n = n.toNumber();\n\n      return x.round(_n);\n    },\n    'number, BigNumber': function numberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return new BigNumber(x).toDecimalPlaces(n.toNumber());\n    },\n    BigNumber: function BigNumber(x) {\n      return x.toDecimalPlaces(0);\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if (!n.isInteger()) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.toDecimalPlaces(n.toNumber());\n    },\n    Fraction: function Fraction(x) {\n      return x.round();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      if (n % 1) {\n        throw new TypeError(NO_INT);\n      }\n\n      return x.round(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since round(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm12(y, x, this, true);\n    },\n    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {\n      // check scalar is zero\n      if (equalScalar(x, 0)) {\n        // do not execute algorithm, result will be a zero matrix\n        return zeros(y.size(), y.storage());\n      }\n\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  }));\n});\nexports.createRound = createRound;\nvar roundNumberSignatures = {\n  number: _index.roundNumber,\n  'number, number': function numberNumber(x, n) {\n    if (!(0, _number.isInteger)(n)) {\n      throw new TypeError(NO_INT);\n    }\n\n    if (n < 0 || n > 15) {\n      throw new Error('Number of decimals in function round must be in te range of 0-15');\n    }\n\n    return (0, _index.roundNumber)(x, n);\n  }\n};\nvar createRoundNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\n  var typed = _ref2.typed;\n  return typed(name, roundNumberSignatures);\n});\nexports.createRoundNumber = createRoundNumber;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12","~$module$node_modules$mathjs$lib$cjs$plain$number$index","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$number","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["createRoundNumber","typed","DenseMatrix","Complex","__esModule","configurable","value","enumerable","equalScalar","writable","number","BigNumber","Fraction","createRound"]],"~:compiled-at",1619135723899,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$round.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/round.js\"],\n\"sourcesContent\":[\"shadow$provide[166] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createRoundNumber = exports.createRound = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../../utils/collection.js\\\");\\n\\nvar _number = require(\\\"../../utils/number.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm11.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm12.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar _index = require(\\\"../../plain/number/index.js\\\");\\n\\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\\n\\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\\n\\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\\n\\nvar NO_INT = 'Number of decimals in function round must be an integer';\\nvar name = 'round';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'zeros', 'BigNumber', 'DenseMatrix'];\\nvar createRound = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      zeros = _ref.zeros,\\n      BigNumber = _ref.BigNumber,\\n      DenseMatrix = _ref.DenseMatrix;\\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm12 = (0, _algorithm2.createAlgorithm12)({\\n    typed: typed,\\n    DenseMatrix: DenseMatrix\\n  });\\n  var algorithm14 = (0, _algorithm3.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Round a value towards the nearest integer.\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.round(x)\\n   *    math.round(x, n)\\n   *\\n   * Examples:\\n   *\\n   *    math.round(3.22)             // returns number 3\\n   *    math.round(3.82)             // returns number 4\\n   *    math.round(-4.2)             // returns number -4\\n   *    math.round(-4.7)             // returns number -5\\n   *    math.round(3.22, 1)          // returns number 3.2\\n   *    math.round(3.88, 1)          // returns number 3.9\\n   *    math.round(-4.21, 1)         // returns number -4.2\\n   *    math.round(-4.71, 1)         // returns number -4.7\\n   *    math.round(math.pi, 3)       // returns number 3.142\\n   *    math.round(123.45678, 2)     // returns number 123.46\\n   *\\n   *    const c = math.complex(3.2, -2.7)\\n   *    math.round(c)                // returns Complex 3 - 3i\\n   *\\n   *    math.round([3.2, 3.8, -4.7]) // returns Array [3, 4, -5]\\n   *\\n   * See also:\\n   *\\n   *    ceil, fix, floor\\n   *\\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\\n   */\\n\\n  return typed(name, _objectSpread(_objectSpread({}, roundNumberSignatures), {}, {\\n    Complex: function Complex(x) {\\n      return x.round();\\n    },\\n    'Complex, number': function ComplexNumber(x, n) {\\n      if (n % 1) {\\n        throw new TypeError(NO_INT);\\n      }\\n\\n      return x.round(n);\\n    },\\n    'Complex, BigNumber': function ComplexBigNumber(x, n) {\\n      if (!n.isInteger()) {\\n        throw new TypeError(NO_INT);\\n      }\\n\\n      var _n = n.toNumber();\\n\\n      return x.round(_n);\\n    },\\n    'number, BigNumber': function numberBigNumber(x, n) {\\n      if (!n.isInteger()) {\\n        throw new TypeError(NO_INT);\\n      }\\n\\n      return new BigNumber(x).toDecimalPlaces(n.toNumber());\\n    },\\n    BigNumber: function BigNumber(x) {\\n      return x.toDecimalPlaces(0);\\n    },\\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\\n      if (!n.isInteger()) {\\n        throw new TypeError(NO_INT);\\n      }\\n\\n      return x.toDecimalPlaces(n.toNumber());\\n    },\\n    Fraction: function Fraction(x) {\\n      return x.round();\\n    },\\n    'Fraction, number': function FractionNumber(x, n) {\\n      if (n % 1) {\\n        throw new TypeError(NO_INT);\\n      }\\n\\n      return x.round(n);\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      // deep map collection, skip zeros since round(0) = 0\\n      return (0, _collection.deepMap)(x, this, true);\\n    },\\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\\n      return algorithm11(x, y, this, false);\\n    },\\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\\n      return algorithm14(x, y, this, false);\\n    },\\n    'number | Complex | BigNumber, SparseMatrix': function numberComplexBigNumberSparseMatrix(x, y) {\\n      // check scalar is zero\\n      if (equalScalar(x, 0)) {\\n        // do not execute algorithm, result will be a zero matrix\\n        return zeros(y.size(), y.storage());\\n      }\\n\\n      return algorithm12(y, x, this, true);\\n    },\\n    'number | Complex | BigNumber, DenseMatrix': function numberComplexBigNumberDenseMatrix(x, y) {\\n      // check scalar is zero\\n      if (equalScalar(x, 0)) {\\n        // do not execute algorithm, result will be a zero matrix\\n        return zeros(y.size(), y.storage());\\n      }\\n\\n      return algorithm14(y, x, this, true);\\n    },\\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(x), y, this, false).valueOf();\\n    },\\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, this, true).valueOf();\\n    }\\n  }));\\n});\\nexports.createRound = createRound;\\nvar roundNumberSignatures = {\\n  number: _index.roundNumber,\\n  'number, number': function numberNumber(x, n) {\\n    if (!(0, _number.isInteger)(n)) {\\n      throw new TypeError(NO_INT);\\n    }\\n\\n    if (n < 0 || n > 15) {\\n      throw new Error('Number of decimals in function round must be in te range of 0-15');\\n    }\\n\\n    return (0, _index.roundNumber)(x, n);\\n  }\\n};\\nvar createRoundNumber = /* #__PURE__ */(0, _factory.factory)(name, ['typed'], function (_ref2) {\\n  var typed = _ref2.typed;\\n  return typed(name, roundNumberSignatures);\\n});\\nexports.createRoundNumber = createRoundNumber;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"ownKeys\",\"object\",\"enumerableOnly\",\"keys\",\"Object\",\"getOwnPropertySymbols\",\"symbols\",\"filter\",\"sym\",\"getOwnPropertyDescriptor\",\"enumerable\",\"push\",\"apply\",\"_objectSpread\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"forEach\",\"key\",\"defineProperty\",\"value\",\"configurable\",\"writable\",\"getOwnPropertyDescriptors\",\"defineProperties\",\"createRoundNumber\",\"createRound\",\"_factory\",\"_collection\",\"_number\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_index\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"equalScalar\",\"zeros\",\"BigNumber\",\"DenseMatrix\",\"algorithm11\",\"createAlgorithm11\",\"algorithm12\",\"createAlgorithm12\",\"algorithm14\",\"createAlgorithm14\",\"roundNumberSignatures\",\"Complex\",\"x\",\"round\",\"ComplexNumber\",\"n\",\"TypeError\",\"NO_INT\",\"ComplexBigNumber\",\"isInteger\",\"_n\",\"toNumber\",\"numberBigNumber\",\"toDecimalPlaces\",\"BigNumberBigNumber\",\"Fraction\",\"FractionNumber\",\"ArrayMatrix\",\"deepMap\",\"SparseMatrixNumberBigNumber\",\"y\",\"DenseMatrixNumberBigNumber\",\"numberComplexBigNumberSparseMatrix\",\"size\",\"storage\",\"numberComplexBigNumberDenseMatrix\",\"ArrayNumberBigNumber\",\"valueOf\",\"numberComplexBigNumberArray\",\"number\",\"roundNumber\",\"numberNumber\",\"Error\",\"_ref2\"]\n}\n"]