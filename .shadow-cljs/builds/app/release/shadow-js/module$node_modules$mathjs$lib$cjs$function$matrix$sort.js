["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/matrix/sort.js"],"~:js","shadow$provide[195]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createSort=void 0;var q=b(24);c=b(25);c=(0,c.factory)(\"sort\",[\"typed\",\"matrix\",\"compare\",\"compareNatural\"],function(f){function u(r){if(\"asc\"===r)return h;if(\"desc\"===r)return n;if(\"natural\"===r)return l;throw Error('String \"asc\", \"desc\", or \"natural\" expected');}function k(r){if(1!==(0,q.arraySize)(r).length)throw Error(\"One dimensional array expected\");}function t(r){if(1!==r.size().length)throw Error(\"One dimensional matrix expected\");\n}var p=f.typed,g=f.matrix,d=f.compare,l=f.compareNatural,h=d,n=function(r,v){return-d(r,v)};return p(\"sort\",{Array:function(r){k(r);return r.sort(h)},Matrix:function(r){t(r);return g(r.toArray().sort(h),r.storage())},\"Array, function\":function(r,v){k(r);return r.sort(v)},\"Matrix, function\":function(r,v){t(r);return g(r.toArray().sort(v),r.storage())},\"Array, string\":function(r,v){k(r);return r.sort(u(v))},\"Matrix, string\":function(r,v){t(r);return g(r.toArray().sort(u(v)),r.storage())}})});a.createSort=\nc}","~:source","shadow$provide[195] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSort = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'sort';\nvar dependencies = ['typed', 'matrix', 'compare', 'compareNatural'];\nvar createSort = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      compare = _ref.compare,\n      compareNatural = _ref.compareNatural;\n  var compareAsc = compare;\n\n  var compareDesc = function compareDesc(a, b) {\n    return -compare(a, b);\n  };\n  /**\n   * Sort the items in a matrix.\n   *\n   * Syntax:\n   *\n   *    math.sort(x)\n   *    math.sort(x, compare)\n   *\n   * Examples:\n   *\n   *    math.sort([5, 10, 1]) // returns [1, 5, 10]\n   *    math.sort(['C', 'B', 'A', 'D'], math.compareNatural)\n   *    // returns ['A', 'B', 'C', 'D']\n   *\n   *    function sortByLength (a, b) {\n   *      return a.length - b.length\n   *    }\n   *    math.sort(['Langdon', 'Tom', 'Sara'], sortByLength)\n   *    // returns ['Tom', 'Sara', 'Langdon']\n   *\n   * See also:\n   *\n   *    filter, forEach, map, compare, compareNatural\n   *\n   * @param {Matrix | Array} x    A one dimensional matrix or array to sort\n   * @param {Function | 'asc' | 'desc' | 'natural'} [compare='asc']\n   *        An optional _comparator function or name. The function is called as\n   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,\n   *        and 0 when a == b.\n   * @return {Matrix | Array} Returns the sorted matrix.\n   */\n\n\n  return typed(name, {\n    Array: function Array(x) {\n      _arrayIsVector(x);\n\n      return x.sort(compareAsc);\n    },\n    Matrix: function Matrix(x) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(compareAsc), x.storage());\n    },\n    'Array, function': function ArrayFunction(x, _comparator) {\n      _arrayIsVector(x);\n\n      return x.sort(_comparator);\n    },\n    'Matrix, function': function MatrixFunction(x, _comparator) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(_comparator), x.storage());\n    },\n    'Array, string': function ArrayString(x, order) {\n      _arrayIsVector(x);\n\n      return x.sort(_comparator(order));\n    },\n    'Matrix, string': function MatrixString(x, order) {\n      _matrixIsVector(x);\n\n      return matrix(x.toArray().sort(_comparator(order)), x.storage());\n    }\n  });\n  /**\n   * Get the comparator for given order ('asc', 'desc', 'natural')\n   * @param {'asc' | 'desc' | 'natural'} order\n   * @return {Function} Returns a _comparator function\n   */\n\n  function _comparator(order) {\n    if (order === 'asc') {\n      return compareAsc;\n    } else if (order === 'desc') {\n      return compareDesc;\n    } else if (order === 'natural') {\n      return compareNatural;\n    } else {\n      throw new Error('String \"asc\", \"desc\", or \"natural\" expected');\n    }\n  }\n  /**\n   * Validate whether an array is one dimensional\n   * Throws an error when this is not the case\n   * @param {Array} array\n   * @private\n   */\n\n\n  function _arrayIsVector(array) {\n    if ((0, _array.arraySize)(array).length !== 1) {\n      throw new Error('One dimensional array expected');\n    }\n  }\n  /**\n   * Validate whether a matrix is one dimensional\n   * Throws an error when this is not the case\n   * @param {Matrix} matrix\n   * @private\n   */\n\n\n  function _matrixIsVector(matrix) {\n    if (matrix.size().length !== 1) {\n      throw new Error('One dimensional matrix expected');\n    }\n  }\n});\nexports.createSort = createSort;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$array","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["__esModule","value","Matrix","createSort","Array"]],"~:compiled-at",1619135723922,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$matrix$sort.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/matrix/sort.js\"],\n\"sourcesContent\":[\"shadow$provide[195] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createSort = void 0;\\n\\nvar _array = require(\\\"../../utils/array.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar name = 'sort';\\nvar dependencies = ['typed', 'matrix', 'compare', 'compareNatural'];\\nvar createSort = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      compare = _ref.compare,\\n      compareNatural = _ref.compareNatural;\\n  var compareAsc = compare;\\n\\n  var compareDesc = function compareDesc(a, b) {\\n    return -compare(a, b);\\n  };\\n  /**\\n   * Sort the items in a matrix.\\n   *\\n   * Syntax:\\n   *\\n   *    math.sort(x)\\n   *    math.sort(x, compare)\\n   *\\n   * Examples:\\n   *\\n   *    math.sort([5, 10, 1]) // returns [1, 5, 10]\\n   *    math.sort(['C', 'B', 'A', 'D'], math.compareNatural)\\n   *    // returns ['A', 'B', 'C', 'D']\\n   *\\n   *    function sortByLength (a, b) {\\n   *      return a.length - b.length\\n   *    }\\n   *    math.sort(['Langdon', 'Tom', 'Sara'], sortByLength)\\n   *    // returns ['Tom', 'Sara', 'Langdon']\\n   *\\n   * See also:\\n   *\\n   *    filter, forEach, map, compare, compareNatural\\n   *\\n   * @param {Matrix | Array} x    A one dimensional matrix or array to sort\\n   * @param {Function | 'asc' | 'desc' | 'natural'} [compare='asc']\\n   *        An optional _comparator function or name. The function is called as\\n   *        `compare(a, b)`, and must return 1 when a > b, -1 when a < b,\\n   *        and 0 when a == b.\\n   * @return {Matrix | Array} Returns the sorted matrix.\\n   */\\n\\n\\n  return typed(name, {\\n    Array: function Array(x) {\\n      _arrayIsVector(x);\\n\\n      return x.sort(compareAsc);\\n    },\\n    Matrix: function Matrix(x) {\\n      _matrixIsVector(x);\\n\\n      return matrix(x.toArray().sort(compareAsc), x.storage());\\n    },\\n    'Array, function': function ArrayFunction(x, _comparator) {\\n      _arrayIsVector(x);\\n\\n      return x.sort(_comparator);\\n    },\\n    'Matrix, function': function MatrixFunction(x, _comparator) {\\n      _matrixIsVector(x);\\n\\n      return matrix(x.toArray().sort(_comparator), x.storage());\\n    },\\n    'Array, string': function ArrayString(x, order) {\\n      _arrayIsVector(x);\\n\\n      return x.sort(_comparator(order));\\n    },\\n    'Matrix, string': function MatrixString(x, order) {\\n      _matrixIsVector(x);\\n\\n      return matrix(x.toArray().sort(_comparator(order)), x.storage());\\n    }\\n  });\\n  /**\\n   * Get the comparator for given order ('asc', 'desc', 'natural')\\n   * @param {'asc' | 'desc' | 'natural'} order\\n   * @return {Function} Returns a _comparator function\\n   */\\n\\n  function _comparator(order) {\\n    if (order === 'asc') {\\n      return compareAsc;\\n    } else if (order === 'desc') {\\n      return compareDesc;\\n    } else if (order === 'natural') {\\n      return compareNatural;\\n    } else {\\n      throw new Error('String \\\"asc\\\", \\\"desc\\\", or \\\"natural\\\" expected');\\n    }\\n  }\\n  /**\\n   * Validate whether an array is one dimensional\\n   * Throws an error when this is not the case\\n   * @param {Array} array\\n   * @private\\n   */\\n\\n\\n  function _arrayIsVector(array) {\\n    if ((0, _array.arraySize)(array).length !== 1) {\\n      throw new Error('One dimensional array expected');\\n    }\\n  }\\n  /**\\n   * Validate whether a matrix is one dimensional\\n   * Throws an error when this is not the case\\n   * @param {Matrix} matrix\\n   * @private\\n   */\\n\\n\\n  function _matrixIsVector(matrix) {\\n    if (matrix.size().length !== 1) {\\n      throw new Error('One dimensional matrix expected');\\n    }\\n  }\\n});\\nexports.createSort = createSort;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createSort\",\"_array\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_comparator\",\"order\",\"compareAsc\",\"compareDesc\",\"compareNatural\",\"Error\",\"_arrayIsVector\",\"array\",\"arraySize\",\"length\",\"_matrixIsVector\",\"matrix\",\"size\",\"typed\",\"compare\",\"a\",\"b\",\"Array\",\"x\",\"sort\",\"Matrix\",\"toArray\",\"storage\",\"ArrayFunction\",\"MatrixFunction\",\"ArrayString\",\"MatrixString\"]\n}\n"]