["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/diag.js"],"~:js","shadow$provide[404]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.diagDocs={name:\"diag\",category:\"Matrix\",syntax:[\"diag(x)\",\"diag(x, k)\"],description:\"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.\",\nexamples:[\"diag(1:3)\",\"diag(1:3, 1)\",\"a \\x3d [1, 2, 3; 4, 5, 6; 7, 8, 9]\",\"diag(a)\"],seealso:\"concat det identity inv ones range size squeeze subset trace transpose zeros\".split(\" \")}}","~:source","shadow$provide[404] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diagDocs = void 0;\nvar diagDocs = {\n  name: 'diag',\n  category: 'Matrix',\n  syntax: ['diag(x)', 'diag(x, k)'],\n  description: 'Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.',\n  examples: ['diag(1:3)', 'diag(1:3, 1)', 'a = [1, 2, 3; 4, 5, 6; 7, 8, 9]', 'diag(a)'],\n  seealso: ['concat', 'det', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};\nexports.diagDocs = diagDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["diagDocs","seealso","__esModule","name","value","syntax","category","examples","description"]],"~:compiled-at",1619135723996,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$diag.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,QAAR,CAReA,CACbC,KAAM,MADOD,CAEbE,SAAU,QAFGF,CAGbG,OAAQ,CAAC,SAAD,CAAY,YAAZ,CAHKH,CAIbI,YAAa,2aAJAJ;AAKbK,SAAU,CAAC,WAAD,CAAc,cAAd,CAA8B,oCAA9B,CAAiE,SAAjE,CALGL,CAMbM,QAAS,8EAAA,CAAA,KAAA,CAAA,GAAA,CANIN,CAP+C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/diag.js\"],\n\"sourcesContent\":[\"shadow$provide[404] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.diagDocs = void 0;\\nvar diagDocs = {\\n  name: 'diag',\\n  category: 'Matrix',\\n  syntax: ['diag(x)', 'diag(x, k)'],\\n  description: 'Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.',\\n  examples: ['diag(1:3)', 'diag(1:3, 1)', 'a = [1, 2, 3; 4, 5, 6; 7, 8, 9]', 'diag(a)'],\\n  seealso: ['concat', 'det', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\\n};\\nexports.diagDocs = diagDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"diagDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]