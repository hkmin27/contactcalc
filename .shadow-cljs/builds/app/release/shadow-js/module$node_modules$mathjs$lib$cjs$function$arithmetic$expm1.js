["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/expm1.js"],"~:js","shadow$provide[81]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createExpm1=void 0;c=b(25);var q=b(38),f=b(50);b=(0,c.factory)(\"expm1\",[\"typed\",\"Complex\"],function(u){var k=u.typed,t=u.Complex;return k(\"expm1\",{number:f.expm1Number,Complex:function(p){var g=Math.exp(p.re);return new t(g*Math.cos(p.im)-1,g*Math.sin(p.im))},BigNumber:function(p){return p.exp().minus(1)},\"Array | Matrix\":function(p){return(0,q.deepMap)(p,this)}})});a.createExpm1=b}","~:source","shadow$provide[81] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createExpm1 = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'expm1';\nvar dependencies = ['typed', 'Complex'];\nvar createExpm1 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      _Complex = _ref.Complex;\n\n  /**\n   * Calculate the value of subtracting 1 from the exponential value.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.expm1(x)\n   *\n   * Examples:\n   *\n   *    math.expm1(2)                      // returns number 6.38905609893065\n   *    math.pow(math.e, 2) - 1            // returns number 6.3890560989306495\n   *    math.log(math.expm1(2) + 1)        // returns number 2\n   *\n   *    math.expm1([1, 2, 3])\n   *    // returns Array [\n   *    //   1.718281828459045,\n   *    //   6.3890560989306495,\n   *    //   19.085536923187668\n   *    // ]\n   *\n   * See also:\n   *\n   *    exp, log, pow\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to apply expm1\n   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`\n   */\n  return typed(name, {\n    number: _index.expm1Number,\n    Complex: function Complex(x) {\n      var r = Math.exp(x.re);\n      return new _Complex(r * Math.cos(x.im) - 1, r * Math.sin(x.im));\n    },\n    BigNumber: function BigNumber(x) {\n      return x.exp().minus(1);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    }\n  });\n});\nexports.createExpm1 = createExpm1;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$plain$number$index","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["Complex","createExpm1","__esModule","value","number","BigNumber"]],"~:compiled-at",1619135723771,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$expm1.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG7DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,WAAR,CAAsB,IAAK,EAEvBC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAEf,KAAIQ,EAAcR,CAAA,CAAQ,EAAR,CAAlB,CAEIS,EAAST,CAAA,CAAQ,EAAR,CAITM,EAAAA,CAA6B,CAAC,CAAA,CAAGC,CAASG,CAAAA,OAAb,EAFtBC,OAEsB,CADdC,CAAC,OAADA,CAAU,SAAVA,CACc,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IACrFC,EAAQD,CAAKC,CAAAA,KADwE,CAErFC,EAAWF,CAAKG,CAAAA,OA8BpB,OAAOF,EAAA,CAlCEH,OAkCF,CAAY,CACjBM,OAAQR,CAAOS,CAAAA,WADE,CAEjBF,QAASA,QAAgB,CAACG,CAAD,CAAI,CAC3B,IAAIC,EAAIC,IAAKC,CAAAA,GAAL,CAASH,CAAEI,CAAAA,EAAX,CACR,OAAO,KAAIR,CAAJ,CAAaK,CAAb,CAAiBC,IAAKG,CAAAA,GAAL,CAASL,CAAEM,CAAAA,EAAX,CAAjB,CAAkC,CAAlC,CAAqCL,CAArC,CAAyCC,IAAKK,CAAAA,GAAL,CAASP,CAAEM,CAAAA,EAAX,CAAzC,CAFoB,CAFZ,CAMjBE,UAAWA,QAAkB,CAACR,CAAD,CAAI,CAC/B,MAAOA,EAAEG,CAAAA,GAAF,EAAQM,CAAAA,KAAR,CAAc,CAAd,CADwB,CANhB,CASjB,iBAAkBC,QAAoB,CAACV,CAAD,CAAI,CACxC,MAAO,CAAC,CAAA,CAAGX,CAAYsB,CAAAA,OAAhB,EAAyBX,CAAzB,CAA4B,IAA5B,CADiC,CATzB,CAAZ,CAhCkF,CAA1D,CA8CjCjB,EAAQI,CAAAA,WAAR,CAAsBA,CA9DuC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/expm1.js\"],\n\"sourcesContent\":[\"shadow$provide[81] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createExpm1 = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../../utils/collection.js\\\");\\n\\nvar _index = require(\\\"../../plain/number/index.js\\\");\\n\\nvar name = 'expm1';\\nvar dependencies = ['typed', 'Complex'];\\nvar createExpm1 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      _Complex = _ref.Complex;\\n\\n  /**\\n   * Calculate the value of subtracting 1 from the exponential value.\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.expm1(x)\\n   *\\n   * Examples:\\n   *\\n   *    math.expm1(2)                      // returns number 6.38905609893065\\n   *    math.pow(math.e, 2) - 1            // returns number 6.3890560989306495\\n   *    math.log(math.expm1(2) + 1)        // returns number 2\\n   *\\n   *    math.expm1([1, 2, 3])\\n   *    // returns Array [\\n   *    //   1.718281828459045,\\n   *    //   6.3890560989306495,\\n   *    //   19.085536923187668\\n   *    // ]\\n   *\\n   * See also:\\n   *\\n   *    exp, log, pow\\n   *\\n   * @param {number | BigNumber | Complex | Array | Matrix} x  A number or matrix to apply expm1\\n   * @return {number | BigNumber | Complex | Array | Matrix} Exponent of `x`\\n   */\\n  return typed(name, {\\n    number: _index.expm1Number,\\n    Complex: function Complex(x) {\\n      var r = Math.exp(x.re);\\n      return new _Complex(r * Math.cos(x.im) - 1, r * Math.sin(x.im));\\n    },\\n    BigNumber: function BigNumber(x) {\\n      return x.exp().minus(1);\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      return (0, _collection.deepMap)(x, this);\\n    }\\n  });\\n});\\nexports.createExpm1 = createExpm1;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createExpm1\",\"_factory\",\"_collection\",\"_index\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"_Complex\",\"Complex\",\"number\",\"expm1Number\",\"x\",\"r\",\"Math\",\"exp\",\"re\",\"cos\",\"im\",\"sin\",\"BigNumber\",\"minus\",\"ArrayMatrix\",\"deepMap\"]\n}\n"]