["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/bitwise/bitOr.js"],"~:js","shadow$provide[433]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.bitOrDocs={name:\"bitOr\",category:\"Bitwise\",syntax:[\"x | y\",\"bitOr(x, y)\"],description:\"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.\",examples:[\"5 | 3\",\"bitOr([1, 2, 3], 4)\"],seealso:\"bitAnd bitNot bitXor leftShift rightArithShift rightLogShift\".split(\" \")}}","~:source","shadow$provide[433] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitOrDocs = void 0;\nvar bitOrDocs = {\n  name: 'bitOr',\n  category: 'Bitwise',\n  syntax: ['x | y', 'bitOr(x, y)'],\n  description: 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\n  examples: ['5 | 3', 'bitOr([1, 2, 3], 4)'],\n  seealso: ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\n};\nexports.bitOrDocs = bitOrDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","__esModule","name","value","syntax","category","examples","bitOrDocs","description"]],"~:compiled-at",1619135724001,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$bitwise$bitOr.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,SAAR,CARgBA,CACdC,KAAM,OADQD,CAEdE,SAAU,SAFIF,CAGdG,OAAQ,CAAC,OAAD,CAAU,aAAV,CAHMH,CAIdI,YAAa,6PAJCJ,CAKdK,SAAU,CAAC,OAAD,CAAU,qBAAV,CALIL,CAMdM,QAAS,8DAAA,CAAA,KAAA,CAAA,GAAA,CANKN,CAP8C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/bitwise/bitOr.js\"],\n\"sourcesContent\":[\"shadow$provide[433] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.bitOrDocs = void 0;\\nvar bitOrDocs = {\\n  name: 'bitOr',\\n  category: 'Bitwise',\\n  syntax: ['x | y', 'bitOr(x, y)'],\\n  description: 'Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.',\\n  examples: ['5 | 3', 'bitOr([1, 2, 3], 4)'],\\n  seealso: ['bitAnd', 'bitNot', 'bitXor', 'leftShift', 'rightArithShift', 'rightLogShift']\\n};\\nexports.bitOrDocs = bitOrDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"bitOrDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]