["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/trigonometry/acsch.js"],"~:js","shadow$provide[212]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createAcsch=void 0;c=b(25);var q=b(38),f=b(50);b=(0,c.factory)(\"acsch\",[\"typed\",\"BigNumber\"],function(u){var k=u.typed,t=u.BigNumber;return k(\"acsch\",{number:f.acschNumber,Complex:function(p){return p.acsch()},BigNumber:function(p){return(new t(1)).div(p).asinh()},\"Array | Matrix\":function(p){return(0,q.deepMap)(p,this)}})});a.createAcsch=b}","~:source","shadow$provide[212] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAcsch = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'acsch';\nvar dependencies = ['typed', 'BigNumber'];\nvar createAcsch = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      _BigNumber = _ref.BigNumber;\n\n  /**\n   * Calculate the hyperbolic arccosecant of a value,\n   * defined as `acsch(x) = asinh(1/x) = ln(1/x + sqrt(1/x^2 + 1))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acsch(x)\n   *\n   * Examples:\n   *\n   *    math.acsch(0.5)       // returns 1.4436354751788103\n   *\n   * See also:\n   *\n   *    asech, acoth\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosecant of x\n   */\n  return typed(name, {\n    number: _index.acschNumber,\n    Complex: function Complex(x) {\n      return x.acsch();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).asinh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    }\n  });\n});\nexports.createAcsch = createAcsch;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$plain$number$index","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["Complex","__esModule","value","createAcsch","number","BigNumber"]],"~:compiled-at",1619135723937,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$trigonometry$acsch.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,WAAR,CAAsB,IAAK,EAEvBC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAEf,KAAIQ,EAAcR,CAAA,CAAQ,EAAR,CAAlB,CAEIS,EAAST,CAAA,CAAQ,EAAR,CAITM,EAAAA,CAA6B,CAAC,CAAA,CAAGC,CAASG,CAAAA,OAAb,EAFtBC,OAEsB,CADdC,CAAC,OAADA,CAAU,WAAVA,CACc,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IACrFC,EAAQD,CAAKC,CAAAA,KADwE,CAErFC,EAAaF,CAAKG,CAAAA,SAuBtB,OAAOF,EAAA,CA3BEH,OA2BF,CAAY,CACjBM,OAAQR,CAAOS,CAAAA,WADE,CAEjBC,QAASA,QAAgB,CAACC,CAAD,CAAI,CAC3B,MAAOA,EAAEC,CAAAA,KAAF,EADoB,CAFZ,CAKjBL,UAAWA,QAAkB,CAACI,CAAD,CAAI,CAC/B,MAAyBE,CAAlB,IAAIP,CAAJ,CAAe,CAAf,CAAkBO,EAAAA,GAAlB,CAAsBF,CAAtB,CAAyBG,CAAAA,KAAzB,EADwB,CALhB,CAQjB,iBAAkBC,QAAoB,CAACJ,CAAD,CAAI,CACxC,MAAO,CAAC,CAAA,CAAGZ,CAAYiB,CAAAA,OAAhB,EAAyBL,CAAzB,CAA4B,IAA5B,CADiC,CARzB,CAAZ,CAzBkF,CAA1D,CAsCjClB,EAAQI,CAAAA,WAAR,CAAsBA,CAtDwC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/trigonometry/acsch.js\"],\n\"sourcesContent\":[\"shadow$provide[212] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAcsch = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../../utils/collection.js\\\");\\n\\nvar _index = require(\\\"../../plain/number/index.js\\\");\\n\\nvar name = 'acsch';\\nvar dependencies = ['typed', 'BigNumber'];\\nvar createAcsch = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      _BigNumber = _ref.BigNumber;\\n\\n  /**\\n   * Calculate the hyperbolic arccosecant of a value,\\n   * defined as `acsch(x) = asinh(1/x) = ln(1/x + sqrt(1/x^2 + 1))`.\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.acsch(x)\\n   *\\n   * Examples:\\n   *\\n   *    math.acsch(0.5)       // returns 1.4436354751788103\\n   *\\n   * See also:\\n   *\\n   *    asech, acoth\\n   *\\n   * @param {number | Complex | Array | Matrix} x  Function input\\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosecant of x\\n   */\\n  return typed(name, {\\n    number: _index.acschNumber,\\n    Complex: function Complex(x) {\\n      return x.acsch();\\n    },\\n    BigNumber: function BigNumber(x) {\\n      return new _BigNumber(1).div(x).asinh();\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      return (0, _collection.deepMap)(x, this);\\n    }\\n  });\\n});\\nexports.createAcsch = createAcsch;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAcsch\",\"_factory\",\"_collection\",\"_index\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"_BigNumber\",\"BigNumber\",\"number\",\"acschNumber\",\"Complex\",\"x\",\"acsch\",\"div\",\"asinh\",\"ArrayMatrix\",\"deepMap\"]\n}\n"]