["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/node/utils/access.js"],"~:js","shadow$provide[251]=function(c,b,y,a){function q(k){\"@babel/helpers - typeof\";q=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t};return q(k)}Object.defineProperty(a,\"__esModule\",{value:!0});a.accessFactory=function(k){var t=k.subset;return function(p,g){try{if(Array.isArray(p))return t(p,g);if(p&&\"function\"===typeof p.subset)return p.subset(g);\nif(\"string\"===typeof p)return t(p,g);if(\"object\"===q(p)){if(!g.isObjectProperty())throw new TypeError(\"Cannot apply a numeric index as object property\");return(0,u.getSafeProperty)(p,g.getObjectProperty())}throw new TypeError(\"Cannot apply index: unsupported type of object\");}catch(d){throw(0,f.errorTransform)(d);}}};var f=b(250),u=b(147)}","~:source","shadow$provide[251] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.accessFactory = accessFactory;\n\nvar _errorTransform = require(\"../../transform/utils/errorTransform.js\");\n\nvar _customs = require(\"../../../utils/customs.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction accessFactory(_ref) {\n  var subset = _ref.subset;\n\n  /**\n   * Retrieve part of an object:\n   *\n   * - Retrieve a property from an object\n   * - Retrieve a part of a string\n   * - Retrieve a matrix subset\n   *\n   * @param {Object | Array | Matrix | string} object\n   * @param {Index} index\n   * @return {Object | Array | Matrix | string} Returns the subset\n   */\n  return function access(object, index) {\n    try {\n      if (Array.isArray(object)) {\n        return subset(object, index);\n      } else if (object && typeof object.subset === 'function') {\n        // Matrix\n        return object.subset(index);\n      } else if (typeof object === 'string') {\n        // TODO: move getStringSubset into a separate util file, use that\n        return subset(object, index);\n      } else if (_typeof(object) === 'object') {\n        if (!index.isObjectProperty()) {\n          throw new TypeError('Cannot apply a numeric index as object property');\n        }\n\n        return (0, _customs.getSafeProperty)(object, index.getObjectProperty());\n      } else {\n        throw new TypeError('Cannot apply index: unsupported type of object');\n      }\n    } catch (err) {\n      throw (0, _errorTransform.errorTransform)(err);\n    }\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$errorTransform","~$module$node_modules$mathjs$lib$cjs$utils$customs"]],"~:properties",["^5",["accessFactory","__esModule","value"]],"~:compiled-at",1619135723954,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$node$utils$access.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAY9DC,QAASA,EAAO,CAACC,CAAD,CAAM,CAAE,yBAAsGD,EAAA,CAArD,UAAtB,GAAI,MAAOE,OAAX,EAA+D,QAA/D,GAAoC,MAAOA,OAAOC,CAAAA,QAAlD,CAAqFH,QAAgB,CAACC,CAAD,CAAM,CAAE,MAAO,OAAOA,EAAhB,CAA3G,CAAsJD,QAAgB,CAACC,CAAD,CAAM,CAAE,MAAOA,EAAA,EAAyB,UAAzB,GAAO,MAAOC,OAAd,EAAuCD,CAAIG,CAAAA,WAA3C,GAA2DF,MAA3D,EAAqED,CAArE,GAA6EC,MAAOG,CAAAA,SAApF,CAAgG,QAAhG,CAA2G,MAAOJ,EAA3H,CAAqI,OAAOD,EAAA,CAAQC,CAAR,CAArV,CATtBK,MAAOC,CAAAA,cAAP,CAAsBR,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CS,MAAO,CAAA,CADoC,CAA7C,CAGAT,EAAQU,CAAAA,aAAR,CAQAA,QAAsB,CAACC,CAAD,CAAO,CAC3B,IAAIC,EAASD,CAAKC,CAAAA,MAalB,OAAOC,SAAe,CAACC,CAAD,CAASC,CAAT,CAAgB,CACpC,GAAI,CACF,GAAIC,KAAMC,CAAAA,OAAN,CAAcH,CAAd,CAAJ,CACE,MAAOF,EAAA,CAAOE,CAAP,CAAeC,CAAf,CACF,IAAID,CAAJ,EAAuC,UAAvC,GAAc,MAAOA,EAAOF,CAAAA,MAA5B,CAEL,MAAOE,EAAOF,CAAAA,MAAP,CAAcG,CAAd,CACF;GAAsB,QAAtB,GAAI,MAAOD,EAAX,CAEL,MAAOF,EAAA,CAAOE,CAAP,CAAeC,CAAf,CACF,IAAwB,QAAxB,GAAId,CAAA,CAAQa,CAAR,CAAJ,CAAkC,CACvC,GAAI,CAACC,CAAMG,CAAAA,gBAAN,EAAL,CACE,KAAM,KAAIC,SAAJ,CAAc,iDAAd,CAAN,CAGF,MAAO,CAAC,CAAA,CAAGC,CAASC,CAAAA,eAAb,EAA8BP,CAA9B,CAAsCC,CAAMO,CAAAA,iBAAN,EAAtC,CALgC,CAOvC,KAAM,KAAIH,SAAJ,CAAc,gDAAd,CAAN,CAhBA,CAkBF,MAAOI,CAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGC,CAAgBC,CAAAA,cAApB,EAAoCF,CAApC,CAAN,CADY,CAnBsB,CAdX,CAN7B,KAAIC,EAAkB1B,CAAA,CAAQ,GAAR,CAAtB,CAEIsB,EAAWtB,CAAA,CAAQ,GAAR,CAV+C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/node/utils/access.js\"],\n\"sourcesContent\":[\"shadow$provide[251] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.accessFactory = accessFactory;\\n\\nvar _errorTransform = require(\\\"../../transform/utils/errorTransform.js\\\");\\n\\nvar _customs = require(\\\"../../../utils/customs.js\\\");\\n\\nfunction _typeof(obj) { \\\"@babel/helpers - typeof\\\"; if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nfunction accessFactory(_ref) {\\n  var subset = _ref.subset;\\n\\n  /**\\n   * Retrieve part of an object:\\n   *\\n   * - Retrieve a property from an object\\n   * - Retrieve a part of a string\\n   * - Retrieve a matrix subset\\n   *\\n   * @param {Object | Array | Matrix | string} object\\n   * @param {Index} index\\n   * @return {Object | Array | Matrix | string} Returns the subset\\n   */\\n  return function access(object, index) {\\n    try {\\n      if (Array.isArray(object)) {\\n        return subset(object, index);\\n      } else if (object && typeof object.subset === 'function') {\\n        // Matrix\\n        return object.subset(index);\\n      } else if (typeof object === 'string') {\\n        // TODO: move getStringSubset into a separate util file, use that\\n        return subset(object, index);\\n      } else if (_typeof(object) === 'object') {\\n        if (!index.isObjectProperty()) {\\n          throw new TypeError('Cannot apply a numeric index as object property');\\n        }\\n\\n        return (0, _customs.getSafeProperty)(object, index.getObjectProperty());\\n      } else {\\n        throw new TypeError('Cannot apply index: unsupported type of object');\\n      }\\n    } catch (err) {\\n      throw (0, _errorTransform.errorTransform)(err);\\n    }\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"Object\",\"defineProperty\",\"value\",\"accessFactory\",\"_ref\",\"subset\",\"access\",\"object\",\"index\",\"Array\",\"isArray\",\"isObjectProperty\",\"TypeError\",\"_customs\",\"getSafeProperty\",\"getObjectProperty\",\"err\",\"_errorTransform\",\"errorTransform\"]\n}\n"]