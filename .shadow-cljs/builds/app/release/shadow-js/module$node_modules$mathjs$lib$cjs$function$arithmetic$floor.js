["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/floor.js"],"~:js","shadow$provide[83]=function(c,b,y,a){function q(l,h){var n=Array.isArray(l)?l:void 0;if(!n)if(\"undefined\"!==typeof Symbol&&Symbol.iterator in Object(l)){n=[];var r=!0,v=!1,C=void 0;try{for(var z=l[Symbol.iterator](),w;!(r=(w=z.next()).done)&&(n.push(w.value),!h||n.length!==h);r=!0);}catch(B){v=!0,C=B}finally{try{if(!r&&null!=z[\"return\"])z[\"return\"]()}finally{if(v)throw C;}}}else n=void 0;if(!(z=n))a:{if(l){if(\"string\"===typeof l){z=f(l,h);break a}z=Object.prototype.toString.call(l).slice(8,-1);\"Object\"===\nz&&l.constructor&&(z=l.constructor.name);if(\"Map\"===z||\"Set\"===z){z=Array.from(l);break a}if(\"Arguments\"===z||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(z)){z=f(l,h);break a}}z=void 0}if(!(l=z))throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");return l}function f(l,h){if(null==h||h>l.length)h=l.length;for(var n=0,r=Array(h);n<h;n++)r[n]=l[n];return r}Object.defineProperty(a,\"__esModule\",\n{value:!0});a.createFloor=void 0;var u=function(l){return l&&l.__esModule?l:{\"default\":l}}(b(28));c=b(25);var k=b(38),t=b(19),p=b(58),g=b(76),d=b(77);b=(0,c.factory)(\"floor\",[\"typed\",\"config\",\"round\",\"matrix\",\"equalScalar\"],function(l){var h=l.typed,n=l.config,r=l.round,v=l.matrix;l=l.equalScalar;var C=(0,g.createAlgorithm11)({typed:h,equalScalar:l}),z=(0,d.createAlgorithm14)({typed:h});return h(\"floor\",{number:function(w){return(0,t.nearlyEqual)(w,r(w),n.epsilon)?r(w):Math.floor(w)},\"number, number\":function(w,\nB){if((0,t.nearlyEqual)(w,r(w,B),n.epsilon))return r(w,B);w=\"\".concat(w,\"e\").split(\"e\");var x=q(w,2);w=x[0];x=x[1];w=Math.floor(Number(\"\".concat(w,\"e\").concat(Number(x)+B)));w=\"\".concat(w,\"e\").split(\"e\");x=q(w,2);w=x[0];x=x[1];return Number(\"\".concat(w,\"e\").concat(Number(x)-B))},Complex:function(w){return w.floor()},\"Complex, number\":function(w,B){return w.floor(B)},BigNumber:function(w){return(0,p.nearlyEqual)(w,r(w),n.epsilon)?r(w):w.floor()},\"BigNumber, BigNumber\":function(w,B){return(0,p.nearlyEqual)(w,\nr(w,B),n.epsilon)?r(w,B):w.toDecimalPlaces(B.toNumber(),u[\"default\"].ROUND_FLOOR)},Fraction:function(w){return w.floor()},\"Fraction, number\":function(w,B){return w.floor(B)},\"Array | Matrix\":function(w){return(0,k.deepMap)(w,this,!0)},\"Array | Matrix, number\":function(w,B){var x=this;return(0,k.deepMap)(w,function(D){return x(D,B)},!0)},\"SparseMatrix, number | BigNumber\":function(w,B){return C(w,B,this,!1)},\"DenseMatrix, number | BigNumber\":function(w,B){return z(w,B,this,!1)},\"number | Complex | BigNumber, Array\":function(w,\nB){return z(v(B),w,this,!0).valueOf()}})});a.createFloor=b}","~:source","shadow$provide[83] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFloor = void 0;\n\nvar _decimal = _interopRequireDefault(require(\"decimal.js\"));\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar _nearlyEqual = require(\"../../utils/bignumber/nearlyEqual.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar name = 'floor';\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\nvar createFloor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      round = _ref.round,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar;\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Round a value towards minus infinity.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.floor(x)\n   *    math.floor(x, n)\n   *\n   * Examples:\n   *\n   *    math.floor(3.2)              // returns number 3\n   *    math.floor(3.8)              // returns number 3\n   *    math.floor(-4.2)             // returns number -5\n   *    math.floor(-4.7)             // returns number -5\n   *\n   *    math.floor(3.212, 2)          // returns number 3.21\n   *    math.floor(3.288, 2)          // returns number 3.28\n   *    math.floor(-4.212, 2)         // returns number -4.22\n   *    math.floor(-4.782, 2)         // returns number -4.79\n   *\n   *    const c = math.complex(3.24, -2.71)\n   *    math.floor(c)                 // returns Complex 3 - 3i\n   *    math.floor(c, 1)              // returns Complex 3.2 - 2.8i\n   *\n   *    math.floor([3.2, 3.8, -4.7])       // returns Array [3, 3, -5]\n   *    math.floor([3.21, 3.82, -4.71], 1)  // returns Array [3.2, 3.8, -4.8]\n   *\n   * See also:\n   *\n   *    ceil, fix, round\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\n   */\n\n  return typed('floor', {\n    number: function number(x) {\n      if ((0, _number.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return Math.floor(x);\n      }\n    },\n    'number, number': function numberNumber(x, n) {\n      if ((0, _number.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        var _$split = \"\".concat(x, \"e\").split('e'),\n            _$split2 = _slicedToArray(_$split, 2),\n            number = _$split2[0],\n            exponent = _$split2[1];\n\n        var result = Math.floor(Number(\"\".concat(number, \"e\").concat(Number(exponent) + n)));\n\n        var _$split3 = \"\".concat(result, \"e\").split('e');\n\n        var _$split4 = _slicedToArray(_$split3, 2);\n\n        number = _$split4[0];\n        exponent = _$split4[1];\n        return Number(\"\".concat(number, \"e\").concat(Number(exponent) - n));\n      }\n    },\n    Complex: function Complex(x) {\n      return x.floor();\n    },\n    'Complex, number': function ComplexNumber(x, n) {\n      return x.floor(n);\n    },\n    BigNumber: function BigNumber(x) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x), config.epsilon)) {\n        return round(x);\n      } else {\n        return x.floor();\n      }\n    },\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x, n), config.epsilon)) {\n        return round(x, n);\n      } else {\n        return x.toDecimalPlaces(n.toNumber(), _decimal[\"default\"].ROUND_FLOOR);\n      }\n    },\n    Fraction: function Fraction(x) {\n      return x.floor();\n    },\n    'Fraction, number': function FractionNumber(x, n) {\n      return x.floor(n);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      // deep map collection, skip zeros since floor(0) = 0\n      return (0, _collection.deepMap)(x, this, true);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\n      var _this = this;\n\n      // deep map collection, skip zeros since ceil(0) = 0\n      return (0, _collection.deepMap)(x, function (i) {\n        return _this(i, n);\n      }, true);\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createFloor = createFloor;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$utils$bignumber$nearlyEqual","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$number","~$module$node_modules$decimal_DOT_js$decimal","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["typed","Complex","__esModule","value","equalScalar","number","BigNumber","Fraction","createFloor"]],"~:compiled-at",1619135723772,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$floor.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/floor.js\"],\n\"sourcesContent\":[\"shadow$provide[83] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createFloor = void 0;\\n\\nvar _decimal = _interopRequireDefault(require(\\\"decimal.js\\\"));\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../../utils/collection.js\\\");\\n\\nvar _number = require(\\\"../../utils/number.js\\\");\\n\\nvar _nearlyEqual = require(\\\"../../utils/bignumber/nearlyEqual.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm11.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\n\\nfunction _nonIterableRest() { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\"); }\\n\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name; if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o); if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\n\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\\n\\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \\\"undefined\\\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\\\"return\\\"] != null) _i[\\\"return\\\"](); } finally { if (_d) throw _e; } } return _arr; }\\n\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\n\\nvar name = 'floor';\\nvar dependencies = ['typed', 'config', 'round', 'matrix', 'equalScalar'];\\nvar createFloor = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      config = _ref.config,\\n      round = _ref.round,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar;\\n  var algorithm11 = (0, _algorithm.createAlgorithm11)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Round a value towards minus infinity.\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.floor(x)\\n   *    math.floor(x, n)\\n   *\\n   * Examples:\\n   *\\n   *    math.floor(3.2)              // returns number 3\\n   *    math.floor(3.8)              // returns number 3\\n   *    math.floor(-4.2)             // returns number -5\\n   *    math.floor(-4.7)             // returns number -5\\n   *\\n   *    math.floor(3.212, 2)          // returns number 3.21\\n   *    math.floor(3.288, 2)          // returns number 3.28\\n   *    math.floor(-4.212, 2)         // returns number -4.22\\n   *    math.floor(-4.782, 2)         // returns number -4.79\\n   *\\n   *    const c = math.complex(3.24, -2.71)\\n   *    math.floor(c)                 // returns Complex 3 - 3i\\n   *    math.floor(c, 1)              // returns Complex 3.2 - 2.8i\\n   *\\n   *    math.floor([3.2, 3.8, -4.7])       // returns Array [3, 3, -5]\\n   *    math.floor([3.21, 3.82, -4.71], 1)  // returns Array [3.2, 3.8, -4.8]\\n   *\\n   * See also:\\n   *\\n   *    ceil, fix, round\\n   *\\n   * @param  {number | BigNumber | Fraction | Complex | Array | Matrix} x  Number to be rounded\\n   * @param  {number | BigNumber | Array} [n=0]                            Number of decimals\\n   * @return {number | BigNumber | Fraction | Complex | Array | Matrix} Rounded value\\n   */\\n\\n  return typed('floor', {\\n    number: function number(x) {\\n      if ((0, _number.nearlyEqual)(x, round(x), config.epsilon)) {\\n        return round(x);\\n      } else {\\n        return Math.floor(x);\\n      }\\n    },\\n    'number, number': function numberNumber(x, n) {\\n      if ((0, _number.nearlyEqual)(x, round(x, n), config.epsilon)) {\\n        return round(x, n);\\n      } else {\\n        var _$split = \\\"\\\".concat(x, \\\"e\\\").split('e'),\\n            _$split2 = _slicedToArray(_$split, 2),\\n            number = _$split2[0],\\n            exponent = _$split2[1];\\n\\n        var result = Math.floor(Number(\\\"\\\".concat(number, \\\"e\\\").concat(Number(exponent) + n)));\\n\\n        var _$split3 = \\\"\\\".concat(result, \\\"e\\\").split('e');\\n\\n        var _$split4 = _slicedToArray(_$split3, 2);\\n\\n        number = _$split4[0];\\n        exponent = _$split4[1];\\n        return Number(\\\"\\\".concat(number, \\\"e\\\").concat(Number(exponent) - n));\\n      }\\n    },\\n    Complex: function Complex(x) {\\n      return x.floor();\\n    },\\n    'Complex, number': function ComplexNumber(x, n) {\\n      return x.floor(n);\\n    },\\n    BigNumber: function BigNumber(x) {\\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x), config.epsilon)) {\\n        return round(x);\\n      } else {\\n        return x.floor();\\n      }\\n    },\\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, n) {\\n      if ((0, _nearlyEqual.nearlyEqual)(x, round(x, n), config.epsilon)) {\\n        return round(x, n);\\n      } else {\\n        return x.toDecimalPlaces(n.toNumber(), _decimal[\\\"default\\\"].ROUND_FLOOR);\\n      }\\n    },\\n    Fraction: function Fraction(x) {\\n      return x.floor();\\n    },\\n    'Fraction, number': function FractionNumber(x, n) {\\n      return x.floor(n);\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      // deep map collection, skip zeros since floor(0) = 0\\n      return (0, _collection.deepMap)(x, this, true);\\n    },\\n    'Array | Matrix, number': function ArrayMatrixNumber(x, n) {\\n      var _this = this;\\n\\n      // deep map collection, skip zeros since ceil(0) = 0\\n      return (0, _collection.deepMap)(x, function (i) {\\n        return _this(i, n);\\n      }, true);\\n    },\\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\\n      return algorithm11(x, y, this, false);\\n    },\\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\\n      return algorithm14(x, y, this, false);\\n    },\\n    'number | Complex | BigNumber, Array': function numberComplexBigNumberArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, this, true).valueOf();\\n    }\\n  });\\n});\\nexports.createFloor = createFloor;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_slicedToArray\",\"arr\",\"i\",\"Array\",\"isArray\",\"Symbol\",\"iterator\",\"Object\",\"_arr\",\"_n\",\"_d\",\"_e\",\"undefined\",\"_i\",\"_s\",\"done\",\"next\",\"push\",\"value\",\"length\",\"err\",\"o\",\"_arrayLikeToArray\",\"minLen\",\"n\",\"prototype\",\"toString\",\"call\",\"slice\",\"constructor\",\"name\",\"from\",\"test\",\"TypeError\",\"len\",\"arr2\",\"defineProperty\",\"createFloor\",\"_decimal\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_factory\",\"_collection\",\"_number\",\"_nearlyEqual\",\"_algorithm\",\"_algorithm2\",\"factory\",\"dependencies\",\"_ref\",\"typed\",\"config\",\"round\",\"matrix\",\"equalScalar\",\"algorithm11\",\"createAlgorithm11\",\"algorithm14\",\"createAlgorithm14\",\"number\",\"x\",\"nearlyEqual\",\"epsilon\",\"Math\",\"floor\",\"numberNumber\",\"_$split\",\"concat\",\"split\",\"_$split2\",\"exponent\",\"result\",\"Number\",\"_$split3\",\"_$split4\",\"Complex\",\"ComplexNumber\",\"BigNumber\",\"BigNumberBigNumber\",\"toDecimalPlaces\",\"toNumber\",\"ROUND_FLOOR\",\"Fraction\",\"FractionNumber\",\"ArrayMatrix\",\"deepMap\",\"ArrayMatrixNumber\",\"_this\",\"SparseMatrixNumberBigNumber\",\"y\",\"DenseMatrixNumberBigNumber\",\"numberComplexBigNumberArray\",\"valueOf\"]\n}\n"]