["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/bignumber/BigNumber.js"],"~:js","shadow$provide[29]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createBigNumberClass=void 0;var q=function(f){return f&&f.__esModule?f:{\"default\":f}}(b(28));c=b(25);c=(0,c.factory)(\"BigNumber\",[\"?on\",\"config\"],function(f){var u=f.on,k=q[\"default\"].clone({precision:f.config.precision,modulo:9});k.prototype.type=\"BigNumber\";k.prototype.isBigNumber=!0;k.prototype.toJSON=function(){return{mathjs:\"BigNumber\",value:this.toString()}};k.fromJSON=function(t){return new k(t.value)};\nu&&u(\"config\",function(t,p){t.precision!==p.precision&&k.config({precision:t.precision})});return k},{isClass:!0});a.createBigNumberClass=c}","~:source","shadow$provide[29] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBigNumberClass = void 0;\n\nvar _decimal = _interopRequireDefault(require(\"decimal.js\"));\n\nvar _factory = require(\"../../utils/factory.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar name = 'BigNumber';\nvar dependencies = ['?on', 'config'];\nvar createBigNumberClass = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var on = _ref.on,\n      config = _ref.config;\n  var EUCLID = 9; // Use euclidian division for mod calculation\n\n  var BigNumber = _decimal[\"default\"].clone({\n    precision: config.precision,\n    modulo: EUCLID\n  });\n  /**\n   * Attach type information\n   */\n\n\n  BigNumber.prototype.type = 'BigNumber';\n  BigNumber.prototype.isBigNumber = true;\n  /**\n   * Get a JSON representation of a BigNumber containing\n   * type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   */\n\n  BigNumber.prototype.toJSON = function () {\n    return {\n      mathjs: 'BigNumber',\n      value: this.toString()\n    };\n  };\n  /**\n   * Instantiate a BigNumber from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"BigNumber\", \"value\": \"0.2\"}`\n   * @return {BigNumber}\n   */\n\n\n  BigNumber.fromJSON = function (json) {\n    return new BigNumber(json.value);\n  };\n\n  if (on) {\n    // listen for changed in the configuration, automatically apply changed precision\n    on('config', function (curr, prev) {\n      if (curr.precision !== prev.precision) {\n        BigNumber.config({\n          precision: curr.precision\n        });\n      }\n    });\n  }\n\n  return BigNumber;\n}, {\n  isClass: true\n});\nexports.createBigNumberClass = createBigNumberClass;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$decimal_DOT_js$decimal","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["precision","fromJSON","isClass","__esModule","createBigNumberClass","modulo","value","mathjs","type","toJSON","isBigNumber"]],"~:compiled-at",1619135723734,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$bignumber$BigNumber.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG7DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,oBAAR,CAA+B,IAAK,EAEpC,KAAIC,EAIJC,QAA+B,CAACC,CAAD,CAAM,CAAE,MAAOA,EAAA,EAAOA,CAAIC,CAAAA,UAAX,CAAwBD,CAAxB,CAA8B,CAAE,UAAWA,CAAb,CAAvC,CAJtB,CAAuBT,CAAA,CAAQ,EAAR,CAAvB,CAEXW,EAAAA,CAAWX,CAAA,CAAQ,EAAR,CAMXM,EAAAA,CAAsC,CAAC,CAAA,CAAGK,CAASC,CAAAA,OAAb,EAF/BC,WAE+B,CADvBC,CAAC,KAADA,CAAQ,QAARA,CACuB,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IAC9FC,EAAKD,CAAKC,CAAAA,EADoF,CAK9FC,EAAYV,CAAA,CAAS,SAAT,CAAoBW,CAAAA,KAApB,CAA0B,CACxCC,UAJWJ,CAAKK,CAAAA,MAIED,CAAAA,SADsB,CAExCE,OAJWC,CAE6B,CAA1B,CAShBL,EAAUM,CAAAA,SAAUC,CAAAA,IAApB,CAA2B,WAC3BP,EAAUM,CAAAA,SAAUE,CAAAA,WAApB,CAAkC,CAAA,CAQlCR,EAAUM,CAAAA,SAAUG,CAAAA,MAApB,CAA6BC,QAAS,EAAG,CACvC,MAAO,CACLC,OAAQ,WADH,CAELvB,MAAO,IAAKwB,CAAAA,QAAL,EAFF,CADgC,CAczCZ,EAAUa,CAAAA,QAAV,CAAqBC,QAAS,CAACC,CAAD,CAAO,CACnC,MAAO,KAAIf,CAAJ,CAAce,CAAK3B,CAAAA,KAAnB,CAD4B,CAIjCW;CAAJ,EAEEA,CAAA,CAAG,QAAH,CAAa,QAAS,CAACiB,CAAD,CAAOC,CAAP,CAAa,CAC7BD,CAAKd,CAAAA,SAAT,GAAuBe,CAAKf,CAAAA,SAA5B,EACEF,CAAUG,CAAAA,MAAV,CAAiB,CACfD,UAAWc,CAAKd,CAAAA,SADD,CAAjB,CAF+B,CAAnC,CASF,OAAOF,EApD2F,CAA1D,CAqDvC,CACDkB,QAAS,CAAA,CADR,CArDuC,CAwD1CjC,EAAQI,CAAAA,oBAAR,CAA+BA,CAxE8B;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/bignumber/BigNumber.js\"],\n\"sourcesContent\":[\"shadow$provide[29] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createBigNumberClass = void 0;\\n\\nvar _decimal = _interopRequireDefault(require(\\\"decimal.js\\\"));\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\nvar name = 'BigNumber';\\nvar dependencies = ['?on', 'config'];\\nvar createBigNumberClass = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var on = _ref.on,\\n      config = _ref.config;\\n  var EUCLID = 9; // Use euclidian division for mod calculation\\n\\n  var BigNumber = _decimal[\\\"default\\\"].clone({\\n    precision: config.precision,\\n    modulo: EUCLID\\n  });\\n  /**\\n   * Attach type information\\n   */\\n\\n\\n  BigNumber.prototype.type = 'BigNumber';\\n  BigNumber.prototype.isBigNumber = true;\\n  /**\\n   * Get a JSON representation of a BigNumber containing\\n   * type information\\n   * @returns {Object} Returns a JSON object structured as:\\n   *                   `{\\\"mathjs\\\": \\\"BigNumber\\\", \\\"value\\\": \\\"0.2\\\"}`\\n   */\\n\\n  BigNumber.prototype.toJSON = function () {\\n    return {\\n      mathjs: 'BigNumber',\\n      value: this.toString()\\n    };\\n  };\\n  /**\\n   * Instantiate a BigNumber from a JSON object\\n   * @param {Object} json  a JSON object structured as:\\n   *                       `{\\\"mathjs\\\": \\\"BigNumber\\\", \\\"value\\\": \\\"0.2\\\"}`\\n   * @return {BigNumber}\\n   */\\n\\n\\n  BigNumber.fromJSON = function (json) {\\n    return new BigNumber(json.value);\\n  };\\n\\n  if (on) {\\n    // listen for changed in the configuration, automatically apply changed precision\\n    on('config', function (curr, prev) {\\n      if (curr.precision !== prev.precision) {\\n        BigNumber.config({\\n          precision: curr.precision\\n        });\\n      }\\n    });\\n  }\\n\\n  return BigNumber;\\n}, {\\n  isClass: true\\n});\\nexports.createBigNumberClass = createBigNumberClass;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createBigNumberClass\",\"_decimal\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"on\",\"BigNumber\",\"clone\",\"precision\",\"config\",\"modulo\",\"EUCLID\",\"prototype\",\"type\",\"isBigNumber\",\"toJSON\",\"BigNumber.prototype.toJSON\",\"mathjs\",\"toString\",\"fromJSON\",\"BigNumber.fromJSON\",\"json\",\"curr\",\"prev\",\"isClass\"]\n}\n"]