["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/trigonometry/cosh.js"],"~:js","shadow$provide[221]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createCosh=void 0;c=b(25);var q=b(38),f=b(19);b=(0,c.factory)(\"cosh\",[\"typed\"],function(u){u=u.typed;return u(\"cosh\",{number:f.cosh,Complex:function(k){return k.cosh()},BigNumber:function(k){return k.cosh()},Unit:function(k){if(!k.hasBase(k.constructor.BASE_UNITS.ANGLE))throw new TypeError(\"Unit in function cosh is no angle\");return this(k.value)},\"Array | Matrix\":function(k){return(0,q.deepMap)(k,this)}})});\na.createCosh=b}","~:source","shadow$provide[221] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createCosh = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _number = require(\"../../utils/number.js\");\n\nvar name = 'cosh';\nvar dependencies = ['typed'];\nvar createCosh = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Calculate the hyperbolic cosine of a value,\n   * defined as `cosh(x) = 1/2 * (exp(x) + exp(-x))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.cosh(x)\n   *\n   * Examples:\n   *\n   *    math.cosh(0.5)       // returns number 1.1276259652063807\n   *\n   * See also:\n   *\n   *    sinh, tanh\n   *\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic cosine of x\n   */\n  return typed(name, {\n    number: _number.cosh,\n    Complex: function Complex(x) {\n      return x.cosh();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.cosh();\n    },\n    Unit: function Unit(x) {\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\n        throw new TypeError('Unit in function cosh is no angle');\n      }\n\n      return this(x.value);\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    }\n  });\n});\nexports.createCosh = createCosh;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$number","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["Unit","Complex","__esModule","value","number","BigNumber","createCosh"]],"~:compiled-at",1619135723939,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$trigonometry$cosh.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,UAAR,CAAqB,IAAK,EAEtBC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAEf,KAAIQ,EAAcR,CAAA,CAAQ,EAAR,CAAlB,CAEIS,EAAUT,CAAA,CAAQ,EAAR,CAIVM,EAAAA,CAA4B,CAAC,CAAA,CAAGC,CAASG,CAAAA,OAAb,EAFrBC,MAEqB,CADbC,CAAC,OAADA,CACa,CAA0C,QAAS,CAACC,CAAD,CAAO,CACpFC,CAAAA,CAAQD,CAAKC,CAAAA,KAuBjB,OAAOA,EAAA,CA1BEH,MA0BF,CAAY,CACjBI,OAAQN,CAAQO,CAAAA,IADC,CAEjBC,QAASA,QAAgB,CAACC,CAAD,CAAI,CAC3B,MAAOA,EAAEF,CAAAA,IAAF,EADoB,CAFZ,CAKjBG,UAAWA,QAAkB,CAACD,CAAD,CAAI,CAC/B,MAAOA,EAAEF,CAAAA,IAAF,EADwB,CALhB,CAQjBI,KAAMA,QAAa,CAACF,CAAD,CAAI,CACrB,GAAI,CAACA,CAAEG,CAAAA,OAAF,CAAUH,CAAEI,CAAAA,WAAYC,CAAAA,UAAWC,CAAAA,KAAnC,CAAL,CACE,KAAM,KAAIC,SAAJ,CAAc,mCAAd,CAAN,CAGF,MAAO,KAAA,CAAKP,CAAEb,CAAAA,KAAP,CALc,CARN,CAejB,iBAAkBqB,QAAoB,CAACR,CAAD,CAAI,CACxC,MAAO,CAAC,CAAA,CAAGV,CAAYmB,CAAAA,OAAhB,EAAyBT,CAAzB,CAA4B,IAA5B,CADiC,CAfzB,CAAZ,CAxBiF,CAA1D,CA4ChChB;CAAQI,CAAAA,UAAR,CAAqBA,CA5DyC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/trigonometry/cosh.js\"],\n\"sourcesContent\":[\"shadow$provide[221] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createCosh = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../../utils/collection.js\\\");\\n\\nvar _number = require(\\\"../../utils/number.js\\\");\\n\\nvar name = 'cosh';\\nvar dependencies = ['typed'];\\nvar createCosh = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed;\\n\\n  /**\\n   * Calculate the hyperbolic cosine of a value,\\n   * defined as `cosh(x) = 1/2 * (exp(x) + exp(-x))`.\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.cosh(x)\\n   *\\n   * Examples:\\n   *\\n   *    math.cosh(0.5)       // returns number 1.1276259652063807\\n   *\\n   * See also:\\n   *\\n   *    sinh, tanh\\n   *\\n   * @param {number | BigNumber | Complex | Unit | Array | Matrix} x  Function input\\n   * @return {number | BigNumber | Complex | Array | Matrix} Hyperbolic cosine of x\\n   */\\n  return typed(name, {\\n    number: _number.cosh,\\n    Complex: function Complex(x) {\\n      return x.cosh();\\n    },\\n    BigNumber: function BigNumber(x) {\\n      return x.cosh();\\n    },\\n    Unit: function Unit(x) {\\n      if (!x.hasBase(x.constructor.BASE_UNITS.ANGLE)) {\\n        throw new TypeError('Unit in function cosh is no angle');\\n      }\\n\\n      return this(x.value);\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      return (0, _collection.deepMap)(x, this);\\n    }\\n  });\\n});\\nexports.createCosh = createCosh;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createCosh\",\"_factory\",\"_collection\",\"_number\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"number\",\"cosh\",\"Complex\",\"x\",\"BigNumber\",\"Unit\",\"hasBase\",\"constructor\",\"BASE_UNITS\",\"ANGLE\",\"TypeError\",\"ArrayMatrix\",\"deepMap\"]\n}\n"]