["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/utils/lruQueue.js"],"~:js","shadow$provide[126]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.lruQueue=function(q){var f=0,u=1,k=Object.create(null),t=Object.create(null),p=0,g=function(d){var l=t[d];if(l&&(delete k[l],delete t[d],--f,u===l))if(f)for(;!hasOwnProperty.call(k,++u););else p=0,u=1};q=Math.abs(q);return{hit:function(d){var l=t[d],h=++p;k[h]=d;t[d]=h;if(!l){++f;if(f<=q)return;d=k[u];g(d);return d}delete k[l];if(u===l)for(;!hasOwnProperty.call(k,++u););},\"delete\":g,clear:function(){f=p=0;u=1;\nk=Object.create(null);t=Object.create(null)}}}}","~:source","shadow$provide[126] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.lruQueue = lruQueue;\n\n// (c) 2018, Mariusz Nowak\n// SPDX-License-Identifier: ISC\n// Derived from https://github.com/medikoo/lru-queue\nfunction lruQueue(limit) {\n  var size = 0;\n  var base = 1;\n  var queue = Object.create(null);\n  var map = Object.create(null);\n  var index = 0;\n\n  var del = function del(id) {\n    var oldIndex = map[id];\n    if (!oldIndex) return;\n    delete queue[oldIndex];\n    delete map[id];\n    --size;\n    if (base !== oldIndex) return;\n\n    if (!size) {\n      index = 0;\n      base = 1;\n      return;\n    }\n\n    while (!hasOwnProperty.call(queue, ++base)) {\n      continue;\n    }\n  };\n\n  limit = Math.abs(limit);\n  return {\n    hit: function hit(id) {\n      var oldIndex = map[id];\n      var nuIndex = ++index;\n      queue[nuIndex] = id;\n      map[id] = nuIndex;\n\n      if (!oldIndex) {\n        ++size;\n        if (size <= limit) return undefined;\n        id = queue[base];\n        del(id);\n        return id;\n      }\n\n      delete queue[oldIndex];\n      if (base !== oldIndex) return undefined;\n\n      while (!hasOwnProperty.call(queue, ++base)) {\n        continue;\n      }\n\n      return undefined;\n    },\n    \"delete\": del,\n    clear: function clear() {\n      size = index = 0;\n      base = 1;\n      queue = Object.create(null);\n      map = Object.create(null);\n    }\n  };\n}\n\n;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","lruQueue","hit","clear"]],"~:compiled-at",1619135723803,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$utils$lruQueue.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,QAAR,CAKAA,QAAiB,CAACC,CAAD,CAAQ,CACvB,IAAIC,EAAO,CAAX,CACIC,EAAO,CADX,CAEIC,EAAQP,MAAOQ,CAAAA,MAAP,CAAc,IAAd,CAFZ,CAGIC,EAAMT,MAAOQ,CAAAA,MAAP,CAAc,IAAd,CAHV,CAIIE,EAAQ,CAJZ,CAMIC,EAAMA,QAAY,CAACC,CAAD,CAAK,CACzB,IAAIC,EAAWJ,CAAA,CAAIG,CAAJ,CACf,IAAKC,CAAL,GACA,OAAON,CAAA,CAAMM,CAAN,CAGH,CAFJ,OAAOJ,CAAA,CAAIG,CAAJ,CAEH,CADJ,EAAEP,CACE,CAAAC,CAAA,GAASO,CAJb,EAMA,GAAKR,CAAL,CAMA,IAAA,CAAO,CAACS,cAAeC,CAAAA,IAAf,CAAoBR,CAApB,CAA2B,EAAED,CAA7B,CAAR,CAAA,EANA,IACEI,EACA,CADQ,CACR,CAAAJ,CAAA,CAAO,CAVgB,CAmB3BF,EAAA,CAAQY,IAAKC,CAAAA,GAAL,CAASb,CAAT,CACR,OAAO,CACLc,IAAKA,QAAY,CAACN,CAAD,CAAK,CACpB,IAAIC,EAAWJ,CAAA,CAAIG,CAAJ,CAAf,CACIO,EAAU,EAAET,CAChBH,EAAA,CAAMY,CAAN,CAAA,CAAiBP,CACjBH,EAAA,CAAIG,CAAJ,CAAA,CAAUO,CAEV,IAAI,CAACN,CAAL,CAAe,CACb,EAAER,CACF,IAAIA,CAAJ,EAAYD,CAAZ,CAAmB,MACnBQ,EAAA,CAAKL,CAAA,CAAMD,CAAN,CACLK,EAAA,CAAIC,CAAJ,CACA,OAAOA,EALM,CAQf,OAAOL,CAAA,CAAMM,CAAN,CACP,IAAIP,CAAJ,GAAaO,CAAb,CAEA,IAAA,CAAO,CAACC,cAAeC,CAAAA,IAAf,CAAoBR,CAApB,CAA2B,EAAED,CAA7B,CAAR,CAAA,EAjBoB,CADjB,CAwBL,SAAUK,CAxBL,CAyBLS,MAAOA,QAAc,EAAG,CACtBf,CAAA,CAAOK,CAAP,CAAe,CACfJ,EAAA,CAAO,CACPC;CAAA,CAAQP,MAAOQ,CAAAA,MAAP,CAAc,IAAd,CACRC,EAAA,CAAMT,MAAOQ,CAAAA,MAAP,CAAc,IAAd,CAJgB,CAzBnB,CA3BgB,CAXqC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/utils/lruQueue.js\"],\n\"sourcesContent\":[\"shadow$provide[126] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.lruQueue = lruQueue;\\n\\n// (c) 2018, Mariusz Nowak\\n// SPDX-License-Identifier: ISC\\n// Derived from https://github.com/medikoo/lru-queue\\nfunction lruQueue(limit) {\\n  var size = 0;\\n  var base = 1;\\n  var queue = Object.create(null);\\n  var map = Object.create(null);\\n  var index = 0;\\n\\n  var del = function del(id) {\\n    var oldIndex = map[id];\\n    if (!oldIndex) return;\\n    delete queue[oldIndex];\\n    delete map[id];\\n    --size;\\n    if (base !== oldIndex) return;\\n\\n    if (!size) {\\n      index = 0;\\n      base = 1;\\n      return;\\n    }\\n\\n    while (!hasOwnProperty.call(queue, ++base)) {\\n      continue;\\n    }\\n  };\\n\\n  limit = Math.abs(limit);\\n  return {\\n    hit: function hit(id) {\\n      var oldIndex = map[id];\\n      var nuIndex = ++index;\\n      queue[nuIndex] = id;\\n      map[id] = nuIndex;\\n\\n      if (!oldIndex) {\\n        ++size;\\n        if (size <= limit) return undefined;\\n        id = queue[base];\\n        del(id);\\n        return id;\\n      }\\n\\n      delete queue[oldIndex];\\n      if (base !== oldIndex) return undefined;\\n\\n      while (!hasOwnProperty.call(queue, ++base)) {\\n        continue;\\n      }\\n\\n      return undefined;\\n    },\\n    \\\"delete\\\": del,\\n    clear: function clear() {\\n      size = index = 0;\\n      base = 1;\\n      queue = Object.create(null);\\n      map = Object.create(null);\\n    }\\n  };\\n}\\n\\n;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"lruQueue\",\"limit\",\"size\",\"base\",\"queue\",\"create\",\"map\",\"index\",\"del\",\"id\",\"oldIndex\",\"hasOwnProperty\",\"call\",\"Math\",\"abs\",\"hit\",\"nuIndex\",\"clear\"]\n}\n"]