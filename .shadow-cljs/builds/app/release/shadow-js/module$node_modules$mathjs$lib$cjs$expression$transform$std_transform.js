["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/transform/std.transform.js"],"~:js","shadow$provide[590]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createStdTransform=void 0;c=b(25);var q=b(536),f=b(250),u=b(581);b=(0,c.factory)(\"std\",[\"typed\",\"sqrt\",\"variance\"],function(k){var t=k.typed,p=k.sqrt;k=k.variance;var g=(0,q.createStd)({typed:t,sqrt:p,variance:k});return t(\"std\",{\"...any\":function(d){d=(0,u.lastDimToZeroBase)(d);try{return g.apply(null,d)}catch(l){throw(0,f.errorTransform)(l);}}})},{isTransformFunction:!0});a.createStdTransform=b}","~:source","shadow$provide[590] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createStdTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _std = require(\"../../function/statistics/std.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _lastDimToZeroBase = require(\"./utils/lastDimToZeroBase.js\");\n\nvar name = 'std';\nvar dependencies = ['typed', 'sqrt', 'variance'];\n/**\n * Attach a transform function to math.std\n * Adds a property transform containing the transform function.\n *\n * This transform changed the `dim` parameter of function std\n * from one-based to zero based\n */\n\nvar createStdTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      sqrt = _ref.sqrt,\n      variance = _ref.variance;\n  var std = (0, _std.createStd)({\n    typed: typed,\n    sqrt: sqrt,\n    variance: variance\n  });\n  return typed('std', {\n    '...any': function any(args) {\n      args = (0, _lastDimToZeroBase.lastDimToZeroBase)(args);\n\n      try {\n        return std.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createStdTransform = createStdTransform;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$function$statistics$std","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$lastDimToZeroBase","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$errorTransform","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["typed","__esModule","isTransformFunction","value","sqrt","createStdTransform","variance"]],"~:compiled-at",1619135724044,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$transform$std_transform.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,kBAAR,CAA6B,IAAK,EAE9BC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAEf,KAAIQ,EAAOR,CAAA,CAAQ,GAAR,CAAX,CAEIS,EAAkBT,CAAA,CAAQ,GAAR,CAFtB,CAIIU,EAAqBV,CAAA,CAAQ,GAAR,CAYrBM,EAAAA,CAAoC,CAAC,CAAA,CAAGC,CAASI,CAAAA,OAAb,EAV7BC,KAU6B,CATrBC,CAAC,OAADA,CAAU,MAAVA,CAAkB,UAAlBA,CASqB,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IAC5FC,EAAQD,CAAKC,CAAAA,KAD+E,CAE5FC,EAAOF,CAAKE,CAAAA,IACZC,EAAAA,CAAWH,CAAKG,CAAAA,QACpB,KAAIC,EAAM,CAAC,CAAA,CAAGV,CAAKW,CAAAA,SAAT,EAAoB,CAC5BJ,MAAOA,CADqB,CAE5BC,KAAMA,CAFsB,CAG5BC,SAAUA,CAHkB,CAApB,CAKV,OAAOF,EAAA,CAAM,KAAN,CAAa,CAClB,SAAUK,QAAY,CAACC,CAAD,CAAO,CAC3BA,CAAA,CAAO,CAAC,CAAA,CAAGX,CAAmBY,CAAAA,iBAAvB,EAA0CD,CAA1C,CAEP,IAAI,CACF,MAAOH,EAAIK,CAAAA,KAAJ,CAAU,IAAV,CAAgBF,CAAhB,CADL,CAEF,MAAOG,CAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGf,CAAgBgB,CAAAA,cAApB,EAAoCD,CAApC,CAAN,CADY,CALa,CADX,CAAb,CATyF,CAA1D,CAoBrC,CACDE,oBAAqB,CAAA,CADpB,CApBqC,CAuBxCxB,EAAQI,CAAAA,kBAAR,CAA6BA,CAjDiC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/transform/std.transform.js\"],\n\"sourcesContent\":[\"shadow$provide[590] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createStdTransform = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _std = require(\\\"../../function/statistics/std.js\\\");\\n\\nvar _errorTransform = require(\\\"./utils/errorTransform.js\\\");\\n\\nvar _lastDimToZeroBase = require(\\\"./utils/lastDimToZeroBase.js\\\");\\n\\nvar name = 'std';\\nvar dependencies = ['typed', 'sqrt', 'variance'];\\n/**\\n * Attach a transform function to math.std\\n * Adds a property transform containing the transform function.\\n *\\n * This transform changed the `dim` parameter of function std\\n * from one-based to zero based\\n */\\n\\nvar createStdTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      sqrt = _ref.sqrt,\\n      variance = _ref.variance;\\n  var std = (0, _std.createStd)({\\n    typed: typed,\\n    sqrt: sqrt,\\n    variance: variance\\n  });\\n  return typed('std', {\\n    '...any': function any(args) {\\n      args = (0, _lastDimToZeroBase.lastDimToZeroBase)(args);\\n\\n      try {\\n        return std.apply(null, args);\\n      } catch (err) {\\n        throw (0, _errorTransform.errorTransform)(err);\\n      }\\n    }\\n  });\\n}, {\\n  isTransformFunction: true\\n});\\nexports.createStdTransform = createStdTransform;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createStdTransform\",\"_factory\",\"_std\",\"_errorTransform\",\"_lastDimToZeroBase\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"sqrt\",\"variance\",\"std\",\"createStd\",\"any\",\"args\",\"lastDimToZeroBase\",\"apply\",\"err\",\"errorTransform\",\"isTransformFunction\"]\n}\n"]