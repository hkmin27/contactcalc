["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/matrix/dot.js"],"~:js","shadow$provide[245]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createDot=void 0;c=b(25);var q=b(14);b=(0,c.factory)(\"dot\",[\"typed\",\"addScalar\",\"multiplyScalar\",\"conj\",\"size\"],function(f){function u(h,n){h=k(h);n=k(n);if(1===h.length)h=h[0];else if(2===h.length&&1===h[1])h=h[0];else throw new RangeError(\"Expected a column vector, instead got a matrix of size (\"+h.join(\", \")+\")\");if(1===n.length)n=n[0];else if(2===n.length&&1===n[1])n=n[0];else throw new RangeError(\"Expected a column vector, instead got a matrix of size (\"+\nn.join(\", \")+\")\");if(h!==n)throw new RangeError(\"Vectors must have equal length (\"+h+\" !\\x3d \"+n+\")\");if(0===h)throw new RangeError(\"Cannot calculate the dot product of empty vectors\");return h}function k(h){return(0,q.isMatrix)(h)?h.size():l(h)}var t=f.typed,p=f.addScalar,g=f.multiplyScalar,d=f.conj,l=f.size;return t(\"dot\",{\"Array | DenseMatrix, Array | DenseMatrix\":function(h,n){var r=u(h,n),v=(0,q.isMatrix)(h)?h._data:h,C=(0,q.isMatrix)(h)?h._datatype:void 0,z=(0,q.isMatrix)(n)?n._data:n,w=(0,\nq.isMatrix)(n)?n._datatype:void 0,B=2===k(h).length,x=2===k(n).length;n=p;h=g;C&&w&&C===w&&\"string\"===typeof C&&(n=t.find(p,[C,C]),h=t.find(g,[C,C]));if(!B&&!x){C=h(d(v[0]),z[0]);for(w=1;w<r;w++)C=n(C,h(d(v[w]),z[w]));return C}if(!B&&x){C=h(d(v[0]),z[0][0]);for(w=1;w<r;w++)C=n(C,h(d(v[w]),z[w][0]));return C}if(B&&!x){C=h(d(v[0][0]),z[0]);for(w=1;w<r;w++)C=n(C,h(d(v[w][0]),z[w]));return C}if(B&&x){C=h(d(v[0][0]),z[0][0]);for(w=1;w<r;w++)C=n(C,h(d(v[w][0]),z[w][0]));return C}},\"SparseMatrix, SparseMatrix\":function(h,\nn){u(h,n);var r=h._index;h=h._values;var v=n._index;n=n._values;for(var C=0,z=0,w=0;z<r.length&&w<v.length;){var B=r[z],x=v[w];B<x?z++:B>x?w++:B===x&&(C=p(C,g(h[z],n[w])),z++,w++)}return C}})});a.createDot=b}","~:source","shadow$provide[245] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDot = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar name = 'dot';\nvar dependencies = ['typed', 'addScalar', 'multiplyScalar', 'conj', 'size'];\nvar createDot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      addScalar = _ref.addScalar,\n      multiplyScalar = _ref.multiplyScalar,\n      conj = _ref.conj,\n      size = _ref.size;\n\n  /**\n   * Calculate the dot product of two vectors. The dot product of\n   * `A = [a1, a2, ..., an]` and `B = [b1, b2, ..., bn]` is defined as:\n   *\n   *    dot(A, B) = conj(a1) * b1 + conj(a2) * b2 + ... + conj(an) * bn\n   *\n   * Syntax:\n   *\n   *    math.dot(x, y)\n   *\n   * Examples:\n   *\n   *    math.dot([2, 4, 1], [2, 2, 3])       // returns number 15\n   *    math.multiply([2, 4, 1], [2, 2, 3])  // returns number 15\n   *\n   * See also:\n   *\n   *    multiply, cross\n   *\n   * @param  {Array | Matrix} x     First vector\n   * @param  {Array | Matrix} y     Second vector\n   * @return {number}               Returns the dot product of `x` and `y`\n   */\n  return typed(name, {\n    'Array | DenseMatrix, Array | DenseMatrix': _denseDot,\n    'SparseMatrix, SparseMatrix': _sparseDot\n  });\n\n  function _validateDim(x, y) {\n    var xSize = _size(x);\n\n    var ySize = _size(y);\n\n    var xLen, yLen;\n\n    if (xSize.length === 1) {\n      xLen = xSize[0];\n    } else if (xSize.length === 2 && xSize[1] === 1) {\n      xLen = xSize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + xSize.join(', ') + ')');\n    }\n\n    if (ySize.length === 1) {\n      yLen = ySize[0];\n    } else if (ySize.length === 2 && ySize[1] === 1) {\n      yLen = ySize[0];\n    } else {\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + ySize.join(', ') + ')');\n    }\n\n    if (xLen !== yLen) throw new RangeError('Vectors must have equal length (' + xLen + ' != ' + yLen + ')');\n    if (xLen === 0) throw new RangeError('Cannot calculate the dot product of empty vectors');\n    return xLen;\n  }\n\n  function _denseDot(a, b) {\n    var N = _validateDim(a, b);\n\n    var adata = (0, _is.isMatrix)(a) ? a._data : a;\n    var adt = (0, _is.isMatrix)(a) ? a._datatype : undefined;\n    var bdata = (0, _is.isMatrix)(b) ? b._data : b;\n    var bdt = (0, _is.isMatrix)(b) ? b._datatype : undefined; // are these 2-dimensional column vectors? (as opposed to 1-dimensional vectors)\n\n    var aIsColumn = _size(a).length === 2;\n    var bIsColumn = _size(b).length === 2;\n    var add = addScalar;\n    var mul = multiplyScalar; // process data types\n\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      var dt = adt; // find signatures that matches (dt, dt)\n\n      add = typed.find(addScalar, [dt, dt]);\n      mul = typed.find(multiplyScalar, [dt, dt]);\n    } // both vectors 1-dimensional\n\n\n    if (!aIsColumn && !bIsColumn) {\n      var c = mul(conj(adata[0]), bdata[0]);\n\n      for (var i = 1; i < N; i++) {\n        c = add(c, mul(conj(adata[i]), bdata[i]));\n      }\n\n      return c;\n    } // a is 1-dim, b is column\n\n\n    if (!aIsColumn && bIsColumn) {\n      var _c = mul(conj(adata[0]), bdata[0][0]);\n\n      for (var _i = 1; _i < N; _i++) {\n        _c = add(_c, mul(conj(adata[_i]), bdata[_i][0]));\n      }\n\n      return _c;\n    } // a is column, b is 1-dim\n\n\n    if (aIsColumn && !bIsColumn) {\n      var _c2 = mul(conj(adata[0][0]), bdata[0]);\n\n      for (var _i2 = 1; _i2 < N; _i2++) {\n        _c2 = add(_c2, mul(conj(adata[_i2][0]), bdata[_i2]));\n      }\n\n      return _c2;\n    } // both vectors are column\n\n\n    if (aIsColumn && bIsColumn) {\n      var _c3 = mul(conj(adata[0][0]), bdata[0][0]);\n\n      for (var _i3 = 1; _i3 < N; _i3++) {\n        _c3 = add(_c3, mul(conj(adata[_i3][0]), bdata[_i3][0]));\n      }\n\n      return _c3;\n    }\n  }\n\n  function _sparseDot(x, y) {\n    _validateDim(x, y);\n\n    var xindex = x._index;\n    var xvalues = x._values;\n    var yindex = y._index;\n    var yvalues = y._values; // TODO optimize add & mul using datatype\n\n    var c = 0;\n    var add = addScalar;\n    var mul = multiplyScalar;\n    var i = 0;\n    var j = 0;\n\n    while (i < xindex.length && j < yindex.length) {\n      var I = xindex[i];\n      var J = yindex[j];\n\n      if (I < J) {\n        i++;\n        continue;\n      }\n\n      if (I > J) {\n        j++;\n        continue;\n      }\n\n      if (I === J) {\n        c = add(c, mul(xvalues[i], yvalues[j]));\n        i++;\n        j++;\n      }\n    }\n\n    return c;\n  } // TODO remove this once #1771 is fixed\n\n\n  function _size(x) {\n    return (0, _is.isMatrix)(x) ? x.size() : size(x);\n  }\n});\nexports.createDot = createDot;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["__esModule","createDot","value"]],"~:compiled-at",1619135723952,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$matrix$dot.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/matrix/dot.js\"],\n\"sourcesContent\":[\"shadow$provide[245] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createDot = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _is = require(\\\"../../utils/is.js\\\");\\n\\nvar name = 'dot';\\nvar dependencies = ['typed', 'addScalar', 'multiplyScalar', 'conj', 'size'];\\nvar createDot = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      addScalar = _ref.addScalar,\\n      multiplyScalar = _ref.multiplyScalar,\\n      conj = _ref.conj,\\n      size = _ref.size;\\n\\n  /**\\n   * Calculate the dot product of two vectors. The dot product of\\n   * `A = [a1, a2, ..., an]` and `B = [b1, b2, ..., bn]` is defined as:\\n   *\\n   *    dot(A, B) = conj(a1) * b1 + conj(a2) * b2 + ... + conj(an) * bn\\n   *\\n   * Syntax:\\n   *\\n   *    math.dot(x, y)\\n   *\\n   * Examples:\\n   *\\n   *    math.dot([2, 4, 1], [2, 2, 3])       // returns number 15\\n   *    math.multiply([2, 4, 1], [2, 2, 3])  // returns number 15\\n   *\\n   * See also:\\n   *\\n   *    multiply, cross\\n   *\\n   * @param  {Array | Matrix} x     First vector\\n   * @param  {Array | Matrix} y     Second vector\\n   * @return {number}               Returns the dot product of `x` and `y`\\n   */\\n  return typed(name, {\\n    'Array | DenseMatrix, Array | DenseMatrix': _denseDot,\\n    'SparseMatrix, SparseMatrix': _sparseDot\\n  });\\n\\n  function _validateDim(x, y) {\\n    var xSize = _size(x);\\n\\n    var ySize = _size(y);\\n\\n    var xLen, yLen;\\n\\n    if (xSize.length === 1) {\\n      xLen = xSize[0];\\n    } else if (xSize.length === 2 && xSize[1] === 1) {\\n      xLen = xSize[0];\\n    } else {\\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + xSize.join(', ') + ')');\\n    }\\n\\n    if (ySize.length === 1) {\\n      yLen = ySize[0];\\n    } else if (ySize.length === 2 && ySize[1] === 1) {\\n      yLen = ySize[0];\\n    } else {\\n      throw new RangeError('Expected a column vector, instead got a matrix of size (' + ySize.join(', ') + ')');\\n    }\\n\\n    if (xLen !== yLen) throw new RangeError('Vectors must have equal length (' + xLen + ' != ' + yLen + ')');\\n    if (xLen === 0) throw new RangeError('Cannot calculate the dot product of empty vectors');\\n    return xLen;\\n  }\\n\\n  function _denseDot(a, b) {\\n    var N = _validateDim(a, b);\\n\\n    var adata = (0, _is.isMatrix)(a) ? a._data : a;\\n    var adt = (0, _is.isMatrix)(a) ? a._datatype : undefined;\\n    var bdata = (0, _is.isMatrix)(b) ? b._data : b;\\n    var bdt = (0, _is.isMatrix)(b) ? b._datatype : undefined; // are these 2-dimensional column vectors? (as opposed to 1-dimensional vectors)\\n\\n    var aIsColumn = _size(a).length === 2;\\n    var bIsColumn = _size(b).length === 2;\\n    var add = addScalar;\\n    var mul = multiplyScalar; // process data types\\n\\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\\n      var dt = adt; // find signatures that matches (dt, dt)\\n\\n      add = typed.find(addScalar, [dt, dt]);\\n      mul = typed.find(multiplyScalar, [dt, dt]);\\n    } // both vectors 1-dimensional\\n\\n\\n    if (!aIsColumn && !bIsColumn) {\\n      var c = mul(conj(adata[0]), bdata[0]);\\n\\n      for (var i = 1; i < N; i++) {\\n        c = add(c, mul(conj(adata[i]), bdata[i]));\\n      }\\n\\n      return c;\\n    } // a is 1-dim, b is column\\n\\n\\n    if (!aIsColumn && bIsColumn) {\\n      var _c = mul(conj(adata[0]), bdata[0][0]);\\n\\n      for (var _i = 1; _i < N; _i++) {\\n        _c = add(_c, mul(conj(adata[_i]), bdata[_i][0]));\\n      }\\n\\n      return _c;\\n    } // a is column, b is 1-dim\\n\\n\\n    if (aIsColumn && !bIsColumn) {\\n      var _c2 = mul(conj(adata[0][0]), bdata[0]);\\n\\n      for (var _i2 = 1; _i2 < N; _i2++) {\\n        _c2 = add(_c2, mul(conj(adata[_i2][0]), bdata[_i2]));\\n      }\\n\\n      return _c2;\\n    } // both vectors are column\\n\\n\\n    if (aIsColumn && bIsColumn) {\\n      var _c3 = mul(conj(adata[0][0]), bdata[0][0]);\\n\\n      for (var _i3 = 1; _i3 < N; _i3++) {\\n        _c3 = add(_c3, mul(conj(adata[_i3][0]), bdata[_i3][0]));\\n      }\\n\\n      return _c3;\\n    }\\n  }\\n\\n  function _sparseDot(x, y) {\\n    _validateDim(x, y);\\n\\n    var xindex = x._index;\\n    var xvalues = x._values;\\n    var yindex = y._index;\\n    var yvalues = y._values; // TODO optimize add & mul using datatype\\n\\n    var c = 0;\\n    var add = addScalar;\\n    var mul = multiplyScalar;\\n    var i = 0;\\n    var j = 0;\\n\\n    while (i < xindex.length && j < yindex.length) {\\n      var I = xindex[i];\\n      var J = yindex[j];\\n\\n      if (I < J) {\\n        i++;\\n        continue;\\n      }\\n\\n      if (I > J) {\\n        j++;\\n        continue;\\n      }\\n\\n      if (I === J) {\\n        c = add(c, mul(xvalues[i], yvalues[j]));\\n        i++;\\n        j++;\\n      }\\n    }\\n\\n    return c;\\n  } // TODO remove this once #1771 is fixed\\n\\n\\n  function _size(x) {\\n    return (0, _is.isMatrix)(x) ? x.size() : size(x);\\n  }\\n});\\nexports.createDot = createDot;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createDot\",\"_factory\",\"_is\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_validateDim\",\"x\",\"y\",\"xSize\",\"_size\",\"ySize\",\"length\",\"xLen\",\"RangeError\",\"join\",\"yLen\",\"isMatrix\",\"size\",\"typed\",\"addScalar\",\"multiplyScalar\",\"conj\",\"_denseDot\",\"a\",\"b\",\"N\",\"adata\",\"_data\",\"adt\",\"_datatype\",\"undefined\",\"bdata\",\"bdt\",\"aIsColumn\",\"bIsColumn\",\"add\",\"mul\",\"find\",\"c\",\"i\",\"_c\",\"_i\",\"_c2\",\"_i2\",\"_c3\",\"_i3\",\"_sparseDot\",\"xindex\",\"_index\",\"xvalues\",\"_values\",\"yindex\",\"yvalues\",\"j\",\"I\",\"J\"]\n}\n"]