["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/transform/column.transform.js"],"~:js","shadow$provide[575]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createColumnTransform=void 0;var q=b(250);c=b(25);var f=b(122),u=b(14);b=(0,c.factory)(\"column\",[\"typed\",\"Index\",\"matrix\",\"range\"],function(k){var t=k.typed,p=k.Index,g=k.matrix;k=k.range;var d=(0,f.createColumn)({typed:t,Index:p,matrix:g,range:k});return t(\"column\",{\"...any\":function(l){var h=l.length-1,n=l[h];(0,u.isNumber)(n)&&(l[h]=n-1);try{return d.apply(null,l)}catch(r){throw(0,q.errorTransform)(r);}}})},\n{isTransformFunction:!0});a.createColumnTransform=b}","~:source","shadow$provide[575] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createColumnTransform = void 0;\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _column = require(\"../../function/matrix/column.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar name = 'column';\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\n/**\n * Attach a transform function to matrix.column\n * Adds a property transform containing the transform function.\n *\n * This transform changed the last `index` parameter of function column\n * from zero-based to one-based\n */\n\nvar createColumnTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      Index = _ref.Index,\n      matrix = _ref.matrix,\n      range = _ref.range;\n  var column = (0, _column.createColumn)({\n    typed: typed,\n    Index: Index,\n    matrix: matrix,\n    range: range\n  }); // @see: comment of column itself\n\n  return typed('column', {\n    '...any': function any(args) {\n      // change last argument from zero-based to one-based\n      var lastIndex = args.length - 1;\n      var last = args[lastIndex];\n\n      if ((0, _is.isNumber)(last)) {\n        args[lastIndex] = last - 1;\n      }\n\n      try {\n        return column.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createColumnTransform = createColumnTransform;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$function$matrix$column","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$errorTransform","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["range","Index","typed","matrix","__esModule","isTransformFunction","value","createColumnTransform"]],"~:compiled-at",1619135724041,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$transform$column_transform.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,qBAAR,CAAgC,IAAK,EAErC,KAAIC,EAAkBP,CAAA,CAAQ,GAAR,CAElBQ,EAAAA,CAAWR,CAAA,CAAQ,EAAR,CAEf,KAAIS,EAAUT,CAAA,CAAQ,GAAR,CAAd,CAEIU,EAAMV,CAAA,CAAQ,EAAR,CAYNM,EAAAA,CAAuC,CAAC,CAAA,CAAGE,CAASG,CAAAA,OAAb,EAVhCC,QAUgC,CATxBC,CAAC,OAADA,CAAU,OAAVA,CAAmB,QAAnBA,CAA6B,OAA7BA,CASwB,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IAC/FC,EAAQD,CAAKC,CAAAA,KADkF,CAE/FC,EAAQF,CAAKE,CAAAA,KAFkF,CAG/FC,EAASH,CAAKG,CAAAA,MACdC,EAAAA,CAAQJ,CAAKI,CAAAA,KACjB,KAAIC,EAAS,CAAC,CAAA,CAAGV,CAAQW,CAAAA,YAAZ,EAA0B,CACrCL,MAAOA,CAD8B,CAErCC,MAAOA,CAF8B,CAGrCC,OAAQA,CAH6B,CAIrCC,MAAOA,CAJ8B,CAA1B,CAOb,OAAOH,EAAA,CAAM,QAAN,CAAgB,CACrB,SAAUM,QAAY,CAACC,CAAD,CAAO,CAE3B,IAAIC,EAAYD,CAAKE,CAAAA,MAAjBD,CAA0B,CAA9B,CACIE,EAAOH,CAAA,CAAKC,CAAL,CAEP,EAAC,CAAA,CAAGb,CAAIgB,CAAAA,QAAR,EAAkBD,CAAlB,CAAJ,GACEH,CAAA,CAAKC,CAAL,CADF,CACoBE,CADpB,CAC2B,CAD3B,CAIA,IAAI,CACF,MAAON,EAAOQ,CAAAA,KAAP,CAAa,IAAb,CAAmBL,CAAnB,CADL,CAEF,MAAOM,CAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGrB,CAAgBsB,CAAAA,cAApB,EAAoCD,CAApC,CAAN,CADY,CAXa,CADR,CAAhB,CAZ4F,CAA1D;AA6BxC,CACDE,oBAAqB,CAAA,CADpB,CA7BwC,CAgC3C5B,EAAQI,CAAAA,qBAAR,CAAgCA,CA1D8B;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/transform/column.transform.js\"],\n\"sourcesContent\":[\"shadow$provide[575] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createColumnTransform = void 0;\\n\\nvar _errorTransform = require(\\\"./utils/errorTransform.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _column = require(\\\"../../function/matrix/column.js\\\");\\n\\nvar _is = require(\\\"../../utils/is.js\\\");\\n\\nvar name = 'column';\\nvar dependencies = ['typed', 'Index', 'matrix', 'range'];\\n/**\\n * Attach a transform function to matrix.column\\n * Adds a property transform containing the transform function.\\n *\\n * This transform changed the last `index` parameter of function column\\n * from zero-based to one-based\\n */\\n\\nvar createColumnTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      Index = _ref.Index,\\n      matrix = _ref.matrix,\\n      range = _ref.range;\\n  var column = (0, _column.createColumn)({\\n    typed: typed,\\n    Index: Index,\\n    matrix: matrix,\\n    range: range\\n  }); // @see: comment of column itself\\n\\n  return typed('column', {\\n    '...any': function any(args) {\\n      // change last argument from zero-based to one-based\\n      var lastIndex = args.length - 1;\\n      var last = args[lastIndex];\\n\\n      if ((0, _is.isNumber)(last)) {\\n        args[lastIndex] = last - 1;\\n      }\\n\\n      try {\\n        return column.apply(null, args);\\n      } catch (err) {\\n        throw (0, _errorTransform.errorTransform)(err);\\n      }\\n    }\\n  });\\n}, {\\n  isTransformFunction: true\\n});\\nexports.createColumnTransform = createColumnTransform;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createColumnTransform\",\"_errorTransform\",\"_factory\",\"_column\",\"_is\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"Index\",\"matrix\",\"range\",\"column\",\"createColumn\",\"any\",\"args\",\"lastIndex\",\"length\",\"last\",\"isNumber\",\"apply\",\"err\",\"errorTransform\",\"isTransformFunction\"]\n}\n"]