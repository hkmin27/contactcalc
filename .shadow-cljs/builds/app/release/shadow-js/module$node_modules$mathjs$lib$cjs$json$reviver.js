["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/json/reviver.js"],"~:js","shadow$provide[569]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createReviver=void 0;c=b(25);c=(0,c.factory)(\"reviver\",[\"classes\"],function(q){var f=q.classes;return function(u,k){return(u=f[k&&k.mathjs])&&\"function\"===typeof u.fromJSON?u.fromJSON(k):k}});a.createReviver=c}","~:source","shadow$provide[569] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createReviver = void 0;\n\nvar _factory = require(\"../utils/factory.js\");\n\nvar name = 'reviver';\nvar dependencies = ['classes'];\nvar createReviver = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var classes = _ref.classes;\n\n  /**\n   * Instantiate mathjs data types from their JSON representation\n   * @param {string} key\n   * @param {*} value\n   * @returns {*} Returns the revived object\n   */\n  return function reviver(key, value) {\n    var constructor = classes[value && value.mathjs];\n\n    if (constructor && typeof constructor.fromJSON === 'function') {\n      return constructor.fromJSON(value);\n    }\n\n    return value;\n  };\n});\nexports.createReviver = createReviver;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["__esModule","value","createReviver"]],"~:compiled-at",1619135724039,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$json$reviver.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,aAAR,CAAwB,IAAK,EAEzBC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAIXM,EAAAA,CAA+B,CAAC,CAAA,CAAGC,CAASC,CAAAA,OAAb,EAFxBC,SAEwB,CADhBC,CAAC,SAADA,CACgB,CAA0C,QAAS,CAACC,CAAD,CAAO,CAC3F,IAAIC,EAAUD,CAAKC,CAAAA,OAQnB,OAAOC,SAAgB,CAACC,CAAD,CAAMT,CAAN,CAAa,CAGlC,MAAA,CAFIU,CAEJ,CAFkBH,CAAA,CAAQP,CAAR,EAAiBA,CAAMW,CAAAA,MAAvB,CAElB,GAAmD,UAAnD,GAAmB,MAAOD,EAAYE,CAAAA,QAAtC,CACSF,CAAYE,CAAAA,QAAZ,CAAqBZ,CAArB,CADT,CAIOA,CAP2B,CATuD,CAA1D,CAmBnCH,EAAQI,CAAAA,aAAR,CAAwBA,CA/BsC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/json/reviver.js\"],\n\"sourcesContent\":[\"shadow$provide[569] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createReviver = void 0;\\n\\nvar _factory = require(\\\"../utils/factory.js\\\");\\n\\nvar name = 'reviver';\\nvar dependencies = ['classes'];\\nvar createReviver = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var classes = _ref.classes;\\n\\n  /**\\n   * Instantiate mathjs data types from their JSON representation\\n   * @param {string} key\\n   * @param {*} value\\n   * @returns {*} Returns the revived object\\n   */\\n  return function reviver(key, value) {\\n    var constructor = classes[value && value.mathjs];\\n\\n    if (constructor && typeof constructor.fromJSON === 'function') {\\n      return constructor.fromJSON(value);\\n    }\\n\\n    return value;\\n  };\\n});\\nexports.createReviver = createReviver;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createReviver\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"classes\",\"reviver\",\"key\",\"constructor\",\"mathjs\",\"fromJSON\"]\n}\n"]