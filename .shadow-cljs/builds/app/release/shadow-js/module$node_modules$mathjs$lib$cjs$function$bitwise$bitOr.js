["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/bitwise/bitOr.js"],"~:js","shadow$provide[111]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createBitOr=void 0;var q=b(108);c=b(25);var f=b(77),u=b(87),k=b(86),t=b(85),p=b(84),g=b(50);b=(0,c.factory)(\"bitOr\",[\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\"],function(d){var l=d.typed,h=d.matrix,n=d.equalScalar;d=d.DenseMatrix;var r=(0,p.createAlgorithm01)({typed:l}),v=(0,t.createAlgorithm04)({typed:l,equalScalar:n}),C=(0,k.createAlgorithm10)({typed:l,DenseMatrix:d}),z=(0,u.createAlgorithm13)({typed:l}),\nw=(0,f.createAlgorithm14)({typed:l});return l(\"bitOr\",{\"number, number\":g.bitOrNumber,\"BigNumber, BigNumber\":q.bitOrBigNumber,\"SparseMatrix, SparseMatrix\":function(B,x){return v(B,x,this)},\"SparseMatrix, DenseMatrix\":function(B,x){return r(x,B,this,!0)},\"DenseMatrix, SparseMatrix\":function(B,x){return r(B,x,this,!1)},\"DenseMatrix, DenseMatrix\":function(B,x){return z(B,x,this)},\"Array, Array\":function(B,x){return this(h(B),h(x)).valueOf()},\"Array, Matrix\":function(B,x){return this(h(B),x)},\"Matrix, Array\":function(B,\nx){return this(B,h(x))},\"SparseMatrix, any\":function(B,x){return C(B,x,this,!1)},\"DenseMatrix, any\":function(B,x){return w(B,x,this,!1)},\"any, SparseMatrix\":function(B,x){return C(x,B,this,!0)},\"any, DenseMatrix\":function(B,x){return w(x,B,this,!0)},\"Array, any\":function(B,x){return w(h(B),x,this,!1).valueOf()},\"any, Array\":function(B,x){return w(h(x),B,this,!0).valueOf()}})});a.createBitOr=b}","~:source","shadow$provide[111] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createBitOr = void 0;\n\nvar _bitwise = require(\"../../utils/bignumber/bitwise.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm10.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm04.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm01.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'bitOr';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nvar createBitOr = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm01 = (0, _algorithm5.createAlgorithm01)({\n    typed: typed\n  });\n  var algorithm04 = (0, _algorithm4.createAlgorithm04)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm10 = (0, _algorithm3.createAlgorithm10)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm2.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Bitwise OR two values, `x | y`.\n   * For matrices, the function is evaluated element wise.\n   * For units, the function is evaluated on the lowest print base.\n   *\n   * Syntax:\n   *\n   *    math.bitOr(x, y)\n   *\n   * Examples:\n   *\n   *    math.bitOr(1, 2)               // returns number 3\n   *\n   *    math.bitOr([1, 2, 3], 4)       // returns Array [5, 6, 7]\n   *\n   * See also:\n   *\n   *    bitAnd, bitNot, bitXor, leftShift, rightArithShift, rightLogShift\n   *\n   * @param  {number | BigNumber | Array | Matrix} x First value to or\n   * @param  {number | BigNumber | Array | Matrix} y Second value to or\n   * @return {number | BigNumber | Array | Matrix} OR of `x` and `y`\n   */\n\n  return typed(name, {\n    'number, number': _index.bitOrNumber,\n    'BigNumber, BigNumber': _bitwise.bitOrBigNumber,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm04(x, y, this);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm01(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm01(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm10(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm10(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createBitOr = createBitOr;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$plain$number$index","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm10","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm04","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13","~$module$node_modules$mathjs$lib$cjs$utils$bignumber$bitwise"]],"~:properties",["^5",["typed","DenseMatrix","__esModule","value","equalScalar","createBitOr"]],"~:compiled-at",1619135723790,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$bitwise$bitOr.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/bitwise/bitOr.js\"],\n\"sourcesContent\":[\"shadow$provide[111] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createBitOr = void 0;\\n\\nvar _bitwise = require(\\\"../../utils/bignumber/bitwise.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm10.js\\\");\\n\\nvar _algorithm4 = require(\\\"../../type/matrix/utils/algorithm04.js\\\");\\n\\nvar _algorithm5 = require(\\\"../../type/matrix/utils/algorithm01.js\\\");\\n\\nvar _index = require(\\\"../../plain/number/index.js\\\");\\n\\nvar name = 'bitOr';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\\nvar createBitOr = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      DenseMatrix = _ref.DenseMatrix;\\n  var algorithm01 = (0, _algorithm5.createAlgorithm01)({\\n    typed: typed\\n  });\\n  var algorithm04 = (0, _algorithm4.createAlgorithm04)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm10 = (0, _algorithm3.createAlgorithm10)({\\n    typed: typed,\\n    DenseMatrix: DenseMatrix\\n  });\\n  var algorithm13 = (0, _algorithm2.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Bitwise OR two values, `x | y`.\\n   * For matrices, the function is evaluated element wise.\\n   * For units, the function is evaluated on the lowest print base.\\n   *\\n   * Syntax:\\n   *\\n   *    math.bitOr(x, y)\\n   *\\n   * Examples:\\n   *\\n   *    math.bitOr(1, 2)               // returns number 3\\n   *\\n   *    math.bitOr([1, 2, 3], 4)       // returns Array [5, 6, 7]\\n   *\\n   * See also:\\n   *\\n   *    bitAnd, bitNot, bitXor, leftShift, rightArithShift, rightLogShift\\n   *\\n   * @param  {number | BigNumber | Array | Matrix} x First value to or\\n   * @param  {number | BigNumber | Array | Matrix} y Second value to or\\n   * @return {number | BigNumber | Array | Matrix} OR of `x` and `y`\\n   */\\n\\n  return typed(name, {\\n    'number, number': _index.bitOrNumber,\\n    'BigNumber, BigNumber': _bitwise.bitOrBigNumber,\\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\\n      return algorithm04(x, y, this);\\n    },\\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\\n      return algorithm01(y, x, this, true);\\n    },\\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\\n      return algorithm01(x, y, this, false);\\n    },\\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\\n      return algorithm13(x, y, this);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y));\\n    },\\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\\n      return algorithm10(x, y, this, false);\\n    },\\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\\n      return algorithm14(x, y, this, false);\\n    },\\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\\n      return algorithm10(y, x, this, true);\\n    },\\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\\n      return algorithm14(y, x, this, true);\\n    },\\n    'Array, any': function ArrayAny(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(x), y, this, false).valueOf();\\n    },\\n    'any, Array': function anyArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, this, true).valueOf();\\n    }\\n  });\\n});\\nexports.createBitOr = createBitOr;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createBitOr\",\"_bitwise\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_algorithm4\",\"_algorithm5\",\"_index\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\",\"algorithm01\",\"createAlgorithm01\",\"algorithm04\",\"createAlgorithm04\",\"algorithm10\",\"createAlgorithm10\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"bitOrNumber\",\"bitOrBigNumber\",\"SparseMatrixSparseMatrix\",\"x\",\"y\",\"SparseMatrixDenseMatrix\",\"DenseMatrixSparseMatrix\",\"DenseMatrixDenseMatrix\",\"ArrayArray\",\"valueOf\",\"ArrayMatrix\",\"MatrixArray\",\"SparseMatrixAny\",\"DenseMatrixAny\",\"anySparseMatrix\",\"anyDenseMatrix\",\"ArrayAny\",\"anyArray\"]\n}\n"]