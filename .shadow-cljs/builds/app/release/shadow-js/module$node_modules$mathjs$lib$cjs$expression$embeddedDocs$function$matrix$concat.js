["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/concat.js"],"~:js","shadow$provide[408]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.concatDocs={name:\"concat\",category:\"Matrix\",syntax:[\"concat(A, B, C, ...)\",\"concat(A, B, C, ..., dim)\"],description:\"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.\",examples:[\"A \\x3d [1, 2; 5, 6]\",\"B \\x3d [3, 4; 7, 8]\",\"concat(A, B)\",\"concat(A, B, 1)\",\"concat(A, B, 2)\"],seealso:\"det diag identity inv ones range size squeeze subset trace transpose zeros\".split(\" \")}}","~:source","shadow$provide[408] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.concatDocs = void 0;\nvar concatDocs = {\n  name: 'concat',\n  category: 'Matrix',\n  syntax: ['concat(A, B, C, ...)', 'concat(A, B, C, ..., dim)'],\n  description: 'Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.',\n  examples: ['A = [1, 2; 5, 6]', 'B = [3, 4; 7, 8]', 'concat(A, B)', 'concat(A, B, 1)', 'concat(A, B, 2)'],\n  seealso: ['det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\n};\nexports.concatDocs = concatDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["concatDocs","seealso","__esModule","name","value","syntax","category","examples","description"]],"~:compiled-at",1619135723997,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$concat.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,UAAR,CARiBA,CACfC,KAAM,QADSD,CAEfE,SAAU,QAFKF,CAGfG,OAAQ,CAAC,sBAAD,CAAyB,2BAAzB,CAHOH,CAIfI,YAAa,gKAJEJ,CAKfK,SAAU,CAAC,qBAAD,CAAqB,qBAArB,CAAyC,cAAzC,CAAyD,iBAAzD,CAA4E,iBAA5E,CALKL,CAMfM,QAAS,4EAAA,CAAA,KAAA,CAAA,GAAA,CANMN,CAP6C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/concat.js\"],\n\"sourcesContent\":[\"shadow$provide[408] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.concatDocs = void 0;\\nvar concatDocs = {\\n  name: 'concat',\\n  category: 'Matrix',\\n  syntax: ['concat(A, B, C, ...)', 'concat(A, B, C, ..., dim)'],\\n  description: 'Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.',\\n  examples: ['A = [1, 2; 5, 6]', 'B = [3, 4; 7, 8]', 'concat(A, B)', 'concat(A, B, 1)', 'concat(A, B, 2)'],\\n  seealso: ['det', 'diag', 'identity', 'inv', 'ones', 'range', 'size', 'squeeze', 'subset', 'trace', 'transpose', 'zeros']\\n};\\nexports.concatDocs = concatDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"concatDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]