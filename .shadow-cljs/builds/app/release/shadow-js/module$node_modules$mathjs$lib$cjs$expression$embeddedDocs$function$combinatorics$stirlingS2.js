["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/combinatorics/stirlingS2.js"],"~:js","shadow$provide[425]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.stirlingS2Docs={name:\"stirlingS2\",category:\"Combinatorics\",syntax:[\"stirlingS2(n, k)\"],description:\"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k \\x3c\\x3d n. If n \\x3d k or k \\x3d 1, then s(n,k) \\x3d 1.\",examples:[\"stirlingS2(5, 3)\"],\nseealso:[\"bellNumbers\"]}}","~:source","shadow$provide[425] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stirlingS2Docs = void 0;\nvar stirlingS2Docs = {\n  name: 'stirlingS2',\n  category: 'Combinatorics',\n  syntax: ['stirlingS2(n, k)'],\n  description: 'he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.',\n  examples: ['stirlingS2(5, 3)'],\n  seealso: ['bellNumbers']\n};\nexports.stirlingS2Docs = stirlingS2Docs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","stirlingS2Docs","__esModule","name","value","syntax","category","examples","description"]],"~:compiled-at",1619135723999,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$combinatorics$stirlingS2.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,cAAR,CARqBA,CACnBC,KAAM,YADaD,CAEnBE,SAAU,eAFSF,CAGnBG,OAAQ,CAAC,kBAAD,CAHWH,CAInBI,YAAa,gSAJMJ,CAKnBK,SAAU,CAAC,kBAAD,CALSL;AAMnBM,QAAS,CAAC,aAAD,CANUN,CAPyC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/combinatorics/stirlingS2.js\"],\n\"sourcesContent\":[\"shadow$provide[425] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.stirlingS2Docs = void 0;\\nvar stirlingS2Docs = {\\n  name: 'stirlingS2',\\n  category: 'Combinatorics',\\n  syntax: ['stirlingS2(n, k)'],\\n  description: 'he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.',\\n  examples: ['stirlingS2(5, 3)'],\\n  seealso: ['bellNumbers']\\n};\\nexports.stirlingS2Docs = stirlingS2Docs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"stirlingS2Docs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]