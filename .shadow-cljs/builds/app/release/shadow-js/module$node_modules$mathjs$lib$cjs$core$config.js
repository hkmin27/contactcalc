["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/core/config.js"],"~:js","shadow$provide[13]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.DEFAULT_CONFIG={epsilon:1E-12,matrix:\"Matrix\",number:\"number\",precision:64,predictable:!1,randomSeed:null}}","~:source","shadow$provide[13] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DEFAULT_CONFIG = void 0;\nvar DEFAULT_CONFIG = {\n  // minimum relative difference between two compared values,\n  // used by all comparison functions\n  epsilon: 1e-12,\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\n  matrix: 'Matrix',\n  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n  number: 'number',\n  // number of significant digits in BigNumbers\n  precision: 64,\n  // predictable output type of functions. When true, output type depends only\n  // on the input types. When false (default), output type can vary depending\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n  // predictable is false, and returns `NaN` when true.\n  predictable: false,\n  // random seed for seeded pseudo random number generation\n  // null = randomly seed\n  randomSeed: null\n};\nexports.DEFAULT_CONFIG = DEFAULT_CONFIG;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["precision","randomSeed","matrix","__esModule","predictable","value","number","DEFAULT_CONFIG","epsilon"]],"~:compiled-at",1619135723703,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$core$config.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG7DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAuBAH,EAAQI,CAAAA,cAAR,CAnBqBA,CAGnBC,QAAS,KAHUD,CAKnBE,OAAQ,QALWF,CAOnBG,OAAQ,QAPWH,CASnBI,UAAW,EATQJ,CAcnBK,YAAa,CAAA,CAdML,CAiBnBM,WAAY,IAjBON,CAPwC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/core/config.js\"],\n\"sourcesContent\":[\"shadow$provide[13] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.DEFAULT_CONFIG = void 0;\\nvar DEFAULT_CONFIG = {\\n  // minimum relative difference between two compared values,\\n  // used by all comparison functions\\n  epsilon: 1e-12,\\n  // type of default matrix output. Choose 'matrix' (default) or 'array'\\n  matrix: 'Matrix',\\n  // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\\n  number: 'number',\\n  // number of significant digits in BigNumbers\\n  precision: 64,\\n  // predictable output type of functions. When true, output type depends only\\n  // on the input types. When false (default), output type can vary depending\\n  // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\\n  // predictable is false, and returns `NaN` when true.\\n  predictable: false,\\n  // random seed for seeded pseudo random number generation\\n  // null = randomly seed\\n  randomSeed: null\\n};\\nexports.DEFAULT_CONFIG = DEFAULT_CONFIG;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"DEFAULT_CONFIG\",\"epsilon\",\"matrix\",\"number\",\"precision\",\"predictable\",\"randomSeed\"]\n}\n"]