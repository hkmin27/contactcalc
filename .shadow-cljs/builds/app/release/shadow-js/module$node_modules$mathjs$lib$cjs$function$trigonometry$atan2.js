["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/trigonometry/atan2.js"],"~:js","shadow$provide[218]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createAtan2=void 0;c=b(25);var q=b(89),f=b(94),u=b(106),k=b(76),t=b(96),p=b(87),g=b(77);b=(0,c.factory)(\"atan2\",[\"typed\",\"matrix\",\"equalScalar\",\"BigNumber\",\"DenseMatrix\"],function(d){var l=d.typed,h=d.matrix,n=d.equalScalar,r=d.BigNumber;d=d.DenseMatrix;var v=(0,q.createAlgorithm02)({typed:l,equalScalar:n}),C=(0,f.createAlgorithm03)({typed:l}),z=(0,u.createAlgorithm09)({typed:l,equalScalar:n}),w=(0,k.createAlgorithm11)({typed:l,\nequalScalar:n}),B=(0,t.createAlgorithm12)({typed:l,DenseMatrix:d}),x=(0,p.createAlgorithm13)({typed:l}),D=(0,g.createAlgorithm14)({typed:l});return l(\"atan2\",{\"number, number\":Math.atan2,\"BigNumber, BigNumber\":function(F,E){return r.atan2(F,E)},\"SparseMatrix, SparseMatrix\":function(F,E){return z(F,E,this,!1)},\"SparseMatrix, DenseMatrix\":function(F,E){return v(E,F,this,!0)},\"DenseMatrix, SparseMatrix\":function(F,E){return C(F,E,this,!1)},\"DenseMatrix, DenseMatrix\":function(F,E){return x(F,E,this)},\n\"Array, Array\":function(F,E){return this(h(F),h(E)).valueOf()},\"Array, Matrix\":function(F,E){return this(h(F),E)},\"Matrix, Array\":function(F,E){return this(F,h(E))},\"SparseMatrix, number | BigNumber\":function(F,E){return w(F,E,this,!1)},\"DenseMatrix, number | BigNumber\":function(F,E){return D(F,E,this,!1)},\"number | BigNumber, SparseMatrix\":function(F,E){return B(E,F,this,!0)},\"number | BigNumber, DenseMatrix\":function(F,E){return D(E,F,this,!0)},\"Array, number | BigNumber\":function(F,E){return D(h(F),\nE,this,!1).valueOf()},\"number | BigNumber, Array\":function(F,E){return D(h(E),F,this,!0).valueOf()}})});a.createAtan2=b}","~:source","shadow$provide[218] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAtan2 = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm09.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'atan2';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\nvar createAtan2 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      BigNumber = _ref.BigNumber,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm09 = (0, _algorithm3.createAlgorithm09)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculate the inverse tangent function with two arguments, y/x.\n   * By providing two arguments, the right quadrant of the computed angle can be\n   * determined.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.atan2(y, x)\n   *\n   * Examples:\n   *\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\n   *\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\n   *    const x = math.cos(angle)\n   *    const y = math.sin(angle)\n   *\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    tan, atan, sin, cos\n   *\n   * @param {number | Array | Matrix} y  Second dimension\n   * @param {number | Array | Matrix} x  First dimension\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\n   */\n\n  return typed(name, {\n    'number, number': Math.atan2,\n    // Complex numbers doesn't seem to have a reasonable implementation of\n    // atan2(). Even Matlab removed the support, after they only calculated\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\n      return BigNumber.atan2(y, x);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm09(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      // mind the order of y and x!\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm12(y, x, this, true);\n    },\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\n      // mind the order of y and x\n      return algorithm14(y, x, this, true);\n    },\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createAtan2 = createAtan2;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm09","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03"]],"~:properties",["^5",["createAtan2","typed","DenseMatrix","__esModule","value","equalScalar"]],"~:compiled-at",1619135723938,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$trigonometry$atan2.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/trigonometry/atan2.js\"],\n\"sourcesContent\":[\"shadow$provide[218] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAtan2 = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm02.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm03.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm09.js\\\");\\n\\nvar _algorithm4 = require(\\\"../../type/matrix/utils/algorithm11.js\\\");\\n\\nvar _algorithm5 = require(\\\"../../type/matrix/utils/algorithm12.js\\\");\\n\\nvar _algorithm6 = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm7 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar name = 'atan2';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'BigNumber', 'DenseMatrix'];\\nvar createAtan2 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      BigNumber = _ref.BigNumber,\\n      DenseMatrix = _ref.DenseMatrix;\\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\\n    typed: typed\\n  });\\n  var algorithm09 = (0, _algorithm3.createAlgorithm09)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\\n    typed: typed,\\n    DenseMatrix: DenseMatrix\\n  });\\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Calculate the inverse tangent function with two arguments, y/x.\\n   * By providing two arguments, the right quadrant of the computed angle can be\\n   * determined.\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.atan2(y, x)\\n   *\\n   * Examples:\\n   *\\n   *    math.atan2(2, 2) / math.pi       // returns number 0.25\\n   *\\n   *    const angle = math.unit(60, 'deg') // returns Unit 60 deg\\n   *    const x = math.cos(angle)\\n   *    const y = math.sin(angle)\\n   *\\n   *    math.atan(2)             // returns Complex 1.5707963267948966 -1.3169578969248166 i\\n   *\\n   * See also:\\n   *\\n   *    tan, atan, sin, cos\\n   *\\n   * @param {number | Array | Matrix} y  Second dimension\\n   * @param {number | Array | Matrix} x  First dimension\\n   * @return {number | Array | Matrix} Four-quadrant inverse tangent\\n   */\\n\\n  return typed(name, {\\n    'number, number': Math.atan2,\\n    // Complex numbers doesn't seem to have a reasonable implementation of\\n    // atan2(). Even Matlab removed the support, after they only calculated\\n    // the atan only on base of the real part of the numbers and ignored the imaginary.\\n    'BigNumber, BigNumber': function BigNumberBigNumber(y, x) {\\n      return BigNumber.atan2(y, x);\\n    },\\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\\n      return algorithm09(x, y, this, false);\\n    },\\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\\n      // mind the order of y and x!\\n      return algorithm02(y, x, this, true);\\n    },\\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\\n      return algorithm03(x, y, this, false);\\n    },\\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\\n      return algorithm13(x, y, this);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      return this(x, matrix(y));\\n    },\\n    'SparseMatrix, number | BigNumber': function SparseMatrixNumberBigNumber(x, y) {\\n      return algorithm11(x, y, this, false);\\n    },\\n    'DenseMatrix, number | BigNumber': function DenseMatrixNumberBigNumber(x, y) {\\n      return algorithm14(x, y, this, false);\\n    },\\n    'number | BigNumber, SparseMatrix': function numberBigNumberSparseMatrix(x, y) {\\n      // mind the order of y and x\\n      return algorithm12(y, x, this, true);\\n    },\\n    'number | BigNumber, DenseMatrix': function numberBigNumberDenseMatrix(x, y) {\\n      // mind the order of y and x\\n      return algorithm14(y, x, this, true);\\n    },\\n    'Array, number | BigNumber': function ArrayNumberBigNumber(x, y) {\\n      return algorithm14(matrix(x), y, this, false).valueOf();\\n    },\\n    'number | BigNumber, Array': function numberBigNumberArray(x, y) {\\n      return algorithm14(matrix(y), x, this, true).valueOf();\\n    }\\n  });\\n});\\nexports.createAtan2 = createAtan2;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAtan2\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_algorithm4\",\"_algorithm5\",\"_algorithm6\",\"_algorithm7\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"equalScalar\",\"BigNumber\",\"DenseMatrix\",\"algorithm02\",\"createAlgorithm02\",\"algorithm03\",\"createAlgorithm03\",\"algorithm09\",\"createAlgorithm09\",\"algorithm11\",\"createAlgorithm11\",\"algorithm12\",\"createAlgorithm12\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"Math\",\"atan2\",\"BigNumberBigNumber\",\"y\",\"x\",\"SparseMatrixSparseMatrix\",\"SparseMatrixDenseMatrix\",\"DenseMatrixSparseMatrix\",\"DenseMatrixDenseMatrix\",\"ArrayArray\",\"valueOf\",\"ArrayMatrix\",\"MatrixArray\",\"SparseMatrixNumberBigNumber\",\"DenseMatrixNumberBigNumber\",\"numberBigNumberSparseMatrix\",\"numberBigNumberDenseMatrix\",\"ArrayNumberBigNumber\",\"numberBigNumberArray\"]\n}\n"]