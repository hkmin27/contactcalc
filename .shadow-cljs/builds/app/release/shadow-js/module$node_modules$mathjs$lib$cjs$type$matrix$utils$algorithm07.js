["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm07.js"],"~:js","shadow$provide[112]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createAlgorithm07=void 0;c=b(25);var q=b(22);b=(0,c.factory)(\"algorithm07\",[\"typed\",\"DenseMatrix\"],function(f){function u(p,g,d,l,h){var n=p._values,r=p._index,v=p._ptr;p=v[g];for(g=v[g+1];p<g;p++)v=r[p],d[v]=h,l[v]=n[p]}var k=f.typed,t=f.DenseMatrix;return function(p,g,d){var l=p._size,h=p._datatype,n=g._size,r=g._datatype;if(l.length!==n.length)throw new q.DimensionError(l.length,n.length);if(l[0]!==n[0]||l[1]!==\nn[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+l+\") must match Matrix B (\"+n+\")\");n=l[0];l=l[1];var v=0,C=d;if(\"string\"===typeof h&&h===r){var z=h;v=k.convert(0,z);C=k.find(d,[z,z])}r=[];for(d=0;d<n;d++)r[d]=[];var w=[],B=[],x=[],D=[];for(h=0;h<l;h++){var F=h+1;u(p,h,x,w,F);u(g,h,D,B,F);for(d=0;d<n;d++)r[d][h]=C(x[d]===F?w[d]:v,D[d]===F?B[d]:v)}return new t({data:r,size:[n,l],datatype:z})}});a.createAlgorithm07=b}","~:source","shadow$provide[112] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm07 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm07';\nvar dependencies = ['typed', 'DenseMatrix'];\nvar createAlgorithm07 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      DenseMatrix = _ref.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij).\n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  return function algorithm07(a, b, callback) {\n    // sparse matrix arrays\n    var asize = a._size;\n    var adt = a._datatype; // sparse matrix arrays\n\n    var bsize = b._size;\n    var bdt = b._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // vars\n\n\n    var i, j; // result arrays\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspaces\n\n\n    var xa = [];\n    var xb = []; // marks indicating we have a value in x for a given column\n\n    var wa = [];\n    var wb = []; // loop columns\n\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // scatter the values of A(:,j) into workspace\n\n      _scatter(a, j, wa, xa, mark); // scatter the values of B(:,j) into workspace\n\n\n      _scatter(b, j, wb, xb, mark); // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        var va = wa[i] === mark ? xa[i] : zero;\n        var vb = wb[i] === mark ? xb[i] : zero; // invoke callback\n\n        cdata[i][j] = cf(va, vb);\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n\n  function _scatter(m, j, w, x, mark) {\n    // a arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr; // loop values in column j\n\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      var i = index[k]; // update workspace\n\n      w[i] = mark;\n      x[i] = values[k];\n    }\n  }\n});\nexports.createAlgorithm07 = createAlgorithm07;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$error$DimensionError","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["__esModule","createAlgorithm07","value","datatype","size","data"]],"~:compiled-at",1619135723790,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm07.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm07.js\"],\n\"sourcesContent\":[\"shadow$provide[112] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAlgorithm07 = void 0;\\n\\nvar _factory = require(\\\"../../../utils/factory.js\\\");\\n\\nvar _DimensionError = require(\\\"../../../error/DimensionError.js\\\");\\n\\nvar name = 'algorithm07';\\nvar dependencies = ['typed', 'DenseMatrix'];\\nvar createAlgorithm07 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      DenseMatrix = _ref.DenseMatrix;\\n\\n  /**\\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij).\\n   * Callback function invoked MxN times.\\n   *\\n   * C(i,j) = f(Aij, Bij)\\n   *\\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\\n   *\\n   * @return {Matrix}                    DenseMatrix (C)\\n   *\\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\\n   */\\n  return function algorithm07(a, b, callback) {\\n    // sparse matrix arrays\\n    var asize = a._size;\\n    var adt = a._datatype; // sparse matrix arrays\\n\\n    var bsize = b._size;\\n    var bdt = b._datatype; // validate dimensions\\n\\n    if (asize.length !== bsize.length) {\\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\\n    } // check rows & columns\\n\\n\\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\\n    } // rows & columns\\n\\n\\n    var rows = asize[0];\\n    var columns = asize[1]; // datatype\\n\\n    var dt; // zero value\\n\\n    var zero = 0; // callback signature to use\\n\\n    var cf = callback; // process data types\\n\\n    if (typeof adt === 'string' && adt === bdt) {\\n      // datatype\\n      dt = adt; // convert 0 to the same datatype\\n\\n      zero = typed.convert(0, dt); // callback\\n\\n      cf = typed.find(callback, [dt, dt]);\\n    } // vars\\n\\n\\n    var i, j; // result arrays\\n\\n    var cdata = []; // initialize c\\n\\n    for (i = 0; i < rows; i++) {\\n      cdata[i] = [];\\n    } // workspaces\\n\\n\\n    var xa = [];\\n    var xb = []; // marks indicating we have a value in x for a given column\\n\\n    var wa = [];\\n    var wb = []; // loop columns\\n\\n    for (j = 0; j < columns; j++) {\\n      // columns mark\\n      var mark = j + 1; // scatter the values of A(:,j) into workspace\\n\\n      _scatter(a, j, wa, xa, mark); // scatter the values of B(:,j) into workspace\\n\\n\\n      _scatter(b, j, wb, xb, mark); // loop rows\\n\\n\\n      for (i = 0; i < rows; i++) {\\n        // matrix values @ i,j\\n        var va = wa[i] === mark ? xa[i] : zero;\\n        var vb = wb[i] === mark ? xb[i] : zero; // invoke callback\\n\\n        cdata[i][j] = cf(va, vb);\\n      }\\n    } // return dense matrix\\n\\n\\n    return new DenseMatrix({\\n      data: cdata,\\n      size: [rows, columns],\\n      datatype: dt\\n    });\\n  };\\n\\n  function _scatter(m, j, w, x, mark) {\\n    // a arrays\\n    var values = m._values;\\n    var index = m._index;\\n    var ptr = m._ptr; // loop values in column j\\n\\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\\n      // row\\n      var i = index[k]; // update workspace\\n\\n      w[i] = mark;\\n      x[i] = values[k];\\n    }\\n  }\\n});\\nexports.createAlgorithm07 = createAlgorithm07;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAlgorithm07\",\"_factory\",\"_DimensionError\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_scatter\",\"m\",\"j\",\"w\",\"x\",\"mark\",\"values\",\"_values\",\"index\",\"_index\",\"ptr\",\"_ptr\",\"k\",\"k1\",\"i\",\"typed\",\"DenseMatrix\",\"algorithm07\",\"a\",\"b\",\"callback\",\"asize\",\"_size\",\"adt\",\"_datatype\",\"bsize\",\"bdt\",\"length\",\"DimensionError\",\"RangeError\",\"rows\",\"columns\",\"zero\",\"cf\",\"dt\",\"convert\",\"find\",\"cdata\",\"xa\",\"xb\",\"wa\",\"wb\",\"va\",\"vb\",\"data\",\"size\",\"datatype\"]\n}\n"]