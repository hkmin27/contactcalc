["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/geometry/intersect.js"],"~:js","shadow$provide[529]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createIntersect=void 0;var q=b(14);c=b(25);c=(0,c.factory)(\"intersect\",\"typed config abs add addScalar matrix multiply multiplyScalar divideScalar subtract smaller equalScalar\".split(\" \"),function(f){function u(D){return\"number\"===typeof D||(0,q.isBigNumber)(D)}function k(D){return 2===D.length&&u(D[0])&&u(D[1])}function t(D){return 3===D.length&&u(D[0])&&u(D[1])&&u(D[2])}function p(D,F,E,G,I,L,M,S,P,R,ba,Q){D=\nC(w(D,F),w(E,G));I=C(w(I,L),w(M,S));P=C(w(P,R),w(ba,Q));return n(n(D,I),P)}var g=f.typed,d=f.config,l=f.abs,h=f.add,n=f.addScalar,r=f.matrix,v=f.multiply,C=f.multiplyScalar,z=f.divideScalar,w=f.subtract,B=f.smaller,x=f.equalScalar;return g(\"intersect\",{\"Array, Array, Array\":function(D,F,E){if(!t(D))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for first argument\");if(!t(F))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for second argument\");if(!(4===E.length&&\nu(E[0])&&u(E[1])&&u(E[2])&&u(E[3])))throw new TypeError(\"Array with 4 numbers expected as third argument\");var G=D[0],I=D[1];D=D[2];var L=F[0],M=F[1];F=F[2];var S=E[0],P=E[1],R=E[2];E=E[3];var ba=C(G,S);S=C(L,S);var Q=C(I,P);P=C(M,P);var T=C(D,R);R=C(F,R);R=z(w(w(w(E,ba),Q),T),w(w(w(n(n(S,P),R),ba),Q),T));G=n(G,C(R,w(L,G)));I=n(I,C(R,w(M,I)));D=n(D,C(R,w(F,D)));return[G,I,D]},\"Array, Array, Array, Array\":function(D,F,E,G){if(2===D.length){if(!k(D))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for first argument\");\nif(!k(F))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for second argument\");if(!k(E))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for third argument\");if(!k(G))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for fourth argument\");var I=w(D,F),L=w(E,G),M=w(C(I[0],L[1]),C(L[0],I[1]));if(B(l(M),d.epsilon))D=null;else{F=C(L[0],D[1]);var S=C(L[1],D[0]);G=C(L[0],E[1]);E=C(L[1],E[0]);E=z(n(w(w(F,S),G),E),M);D=h(v(I,E),D)}return D}if(3===D.length){if(!t(D))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for first argument\");\nif(!t(F))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for second argument\");if(!t(E))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for third argument\");if(!t(G))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for fourth argument\");L=D[0];I=D[1];M=D[2];var P=F[0],R=F[1],ba=F[2];F=E[0];D=E[1];E=E[2];var Q=G[0];S=G[1];G=G[2];var T=p(L,F,Q,F,I,D,S,D,M,E,G,E),Y=p(Q,F,P,L,S,D,R,I,G,E,ba,M),ca=p(L,F,P,L,I,D,R,I,M,E,ba,M),ka=p(Q,F,Q,F,S,D,S,D,G,E,G,\nE),ha=p(P,L,P,L,R,I,R,I,ba,M,ba,M);ca=z(w(C(T,Y),C(ca,ka)),w(C(ha,ka),C(Y,Y)));T=z(n(T,C(ca,Y)),ka);L=n(L,C(ca,w(P,L)));I=n(I,C(ca,w(R,I)));M=n(M,C(ca,w(ba,M)));F=n(F,C(T,w(Q,F)));D=n(D,C(T,w(S,D)));E=n(E,C(T,w(G,E)));D=x(L,F)&&x(I,D)&&x(M,E)?[L,I,M]:null;return D}throw new TypeError(\"Arrays with two or thee dimensional points expected\");},\"Matrix, Matrix, Matrix\":function(D,F,E){return r(this(D.valueOf(),F.valueOf(),E.valueOf()))},\"Matrix, Matrix, Matrix, Matrix\":function(D,F,E,G){return r(this(D.valueOf(),\nF.valueOf(),E.valueOf(),G.valueOf()))}})});a.createIntersect=c}","~:source","shadow$provide[529] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIntersect = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'intersect';\nvar dependencies = ['typed', 'config', 'abs', 'add', 'addScalar', 'matrix', 'multiply', 'multiplyScalar', 'divideScalar', 'subtract', 'smaller', 'equalScalar'];\nvar createIntersect = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      abs = _ref.abs,\n      add = _ref.add,\n      addScalar = _ref.addScalar,\n      matrix = _ref.matrix,\n      multiply = _ref.multiply,\n      multiplyScalar = _ref.multiplyScalar,\n      divideScalar = _ref.divideScalar,\n      subtract = _ref.subtract,\n      smaller = _ref.smaller,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Calculates the point of intersection of two lines in two or three dimensions\n   * and of a line and a plane in three dimensions. The inputs are in the form of\n   * arrays or 1 dimensional matrices. The line intersection functions return null\n   * if the lines do not meet.\n   *\n   * Note: Fill the plane coefficients as `x + y + z = c` and not as `x + y + z + c = 0`.\n   *\n   * Syntax:\n   *\n   *    math.intersect(endPoint1Line1, endPoint2Line1, endPoint1Line2, endPoint2Line2)\n   *    math.intersect(endPoint1, endPoint2, planeCoefficients)\n   *\n   * Examples:\n   *\n   *    math.intersect([0, 0], [10, 10], [10, 0], [0, 10])              // Returns [5, 5]\n   *    math.intersect([0, 0, 0], [10, 10, 0], [10, 0, 0], [0, 10, 0])  // Returns [5, 5, 0]\n   *    math.intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])            // Returns [7, -4, 3]\n   *\n   * @param  {Array | Matrix} w   Co-ordinates of first end-point of first line\n   * @param  {Array | Matrix} x   Co-ordinates of second end-point of first line\n   * @param  {Array | Matrix} y   Co-ordinates of first end-point of second line\n   *                              OR Co-efficients of the plane's equation\n   * @param  {Array | Matrix} z   Co-ordinates of second end-point of second line\n   *                              OR null if the calculation is for line and plane\n   * @return {Array}              Returns the point of intersection of lines/lines-planes\n   */\n  return typed('intersect', {\n    'Array, Array, Array': function ArrayArrayArray(x, y, plane) {\n      if (!_3d(x)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n      }\n\n      if (!_3d(y)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n      }\n\n      if (!_4d(plane)) {\n        throw new TypeError('Array with 4 numbers expected as third argument');\n      }\n\n      return _intersectLinePlane(x[0], x[1], x[2], y[0], y[1], y[2], plane[0], plane[1], plane[2], plane[3]);\n    },\n    'Array, Array, Array, Array': function ArrayArrayArrayArray(w, x, y, z) {\n      if (w.length === 2) {\n        if (!_2d(w)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_2d(x)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');\n        }\n\n        if (!_2d(z)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for fourth argument');\n        }\n\n        return _intersect2d(w, x, y, z);\n      } else if (w.length === 3) {\n        if (!_3d(w)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_3d(x)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for third argument');\n        }\n\n        if (!_3d(z)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for fourth argument');\n        }\n\n        return _intersect3d(w[0], w[1], w[2], x[0], x[1], x[2], y[0], y[1], y[2], z[0], z[1], z[2]);\n      } else {\n        throw new TypeError('Arrays with two or thee dimensional points expected');\n      }\n    },\n    'Matrix, Matrix, Matrix': function MatrixMatrixMatrix(x, y, plane) {\n      return matrix(this(x.valueOf(), y.valueOf(), plane.valueOf()));\n    },\n    'Matrix, Matrix, Matrix, Matrix': function MatrixMatrixMatrixMatrix(w, x, y, z) {\n      // TODO: output matrix type should match input matrix type\n      return matrix(this(w.valueOf(), x.valueOf(), y.valueOf(), z.valueOf()));\n    }\n  });\n\n  function _isNumeric(a) {\n    // intersect supports numbers and bignumbers\n    return typeof a === 'number' || (0, _is.isBigNumber)(a);\n  }\n\n  function _2d(x) {\n    return x.length === 2 && _isNumeric(x[0]) && _isNumeric(x[1]);\n  }\n\n  function _3d(x) {\n    return x.length === 3 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]);\n  }\n\n  function _4d(x) {\n    return x.length === 4 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]) && _isNumeric(x[3]);\n  }\n\n  function _intersect2d(p1a, p1b, p2a, p2b) {\n    var o1 = p1a;\n    var o2 = p2a;\n    var d1 = subtract(o1, p1b);\n    var d2 = subtract(o2, p2b);\n    var det = subtract(multiplyScalar(d1[0], d2[1]), multiplyScalar(d2[0], d1[1]));\n\n    if (smaller(abs(det), config.epsilon)) {\n      return null;\n    }\n\n    var d20o11 = multiplyScalar(d2[0], o1[1]);\n    var d21o10 = multiplyScalar(d2[1], o1[0]);\n    var d20o21 = multiplyScalar(d2[0], o2[1]);\n    var d21o20 = multiplyScalar(d2[1], o2[0]);\n    var t = divideScalar(addScalar(subtract(subtract(d20o11, d21o10), d20o21), d21o20), det);\n    return add(multiply(d1, t), o1);\n  }\n\n  function _intersect3dHelper(a, b, c, d, e, f, g, h, i, j, k, l) {\n    // (a - b)*(c - d) + (e - f)*(g - h) + (i - j)*(k - l)\n    var add1 = multiplyScalar(subtract(a, b), subtract(c, d));\n    var add2 = multiplyScalar(subtract(e, f), subtract(g, h));\n    var add3 = multiplyScalar(subtract(i, j), subtract(k, l));\n    return addScalar(addScalar(add1, add2), add3);\n  }\n\n  function _intersect3d(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4) {\n    var d1343 = _intersect3dHelper(x1, x3, x4, x3, y1, y3, y4, y3, z1, z3, z4, z3);\n\n    var d4321 = _intersect3dHelper(x4, x3, x2, x1, y4, y3, y2, y1, z4, z3, z2, z1);\n\n    var d1321 = _intersect3dHelper(x1, x3, x2, x1, y1, y3, y2, y1, z1, z3, z2, z1);\n\n    var d4343 = _intersect3dHelper(x4, x3, x4, x3, y4, y3, y4, y3, z4, z3, z4, z3);\n\n    var d2121 = _intersect3dHelper(x2, x1, x2, x1, y2, y1, y2, y1, z2, z1, z2, z1);\n\n    var ta = divideScalar(subtract(multiplyScalar(d1343, d4321), multiplyScalar(d1321, d4343)), subtract(multiplyScalar(d2121, d4343), multiplyScalar(d4321, d4321)));\n    var tb = divideScalar(addScalar(d1343, multiplyScalar(ta, d4321)), d4343);\n    var pax = addScalar(x1, multiplyScalar(ta, subtract(x2, x1)));\n    var pay = addScalar(y1, multiplyScalar(ta, subtract(y2, y1)));\n    var paz = addScalar(z1, multiplyScalar(ta, subtract(z2, z1)));\n    var pbx = addScalar(x3, multiplyScalar(tb, subtract(x4, x3)));\n    var pby = addScalar(y3, multiplyScalar(tb, subtract(y4, y3)));\n    var pbz = addScalar(z3, multiplyScalar(tb, subtract(z4, z3)));\n\n    if (equalScalar(pax, pbx) && equalScalar(pay, pby) && equalScalar(paz, pbz)) {\n      return [pax, pay, paz];\n    } else {\n      return null;\n    }\n  }\n\n  function _intersectLinePlane(x1, y1, z1, x2, y2, z2, x, y, z, c) {\n    var x1x = multiplyScalar(x1, x);\n    var x2x = multiplyScalar(x2, x);\n    var y1y = multiplyScalar(y1, y);\n    var y2y = multiplyScalar(y2, y);\n    var z1z = multiplyScalar(z1, z);\n    var z2z = multiplyScalar(z2, z);\n    var t = divideScalar(subtract(subtract(subtract(c, x1x), y1y), z1z), subtract(subtract(subtract(addScalar(addScalar(x2x, y2y), z2z), x1x), y1y), z1z));\n    var px = addScalar(x1, multiplyScalar(t, subtract(x2, x1)));\n    var py = addScalar(y1, multiplyScalar(t, subtract(y2, y1)));\n    var pz = addScalar(z1, multiplyScalar(t, subtract(z2, z1)));\n    return [px, py, pz]; // TODO: Add cases when line is parallel to the plane:\n    //       (a) no intersection,\n    //       (b) line contained in plane\n  }\n});\nexports.createIntersect = createIntersect;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["createIntersect","__esModule","value"]],"~:compiled-at",1619135724022,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$geometry$intersect.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/geometry/intersect.js\"],\n\"sourcesContent\":[\"shadow$provide[529] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createIntersect = void 0;\\n\\nvar _is = require(\\\"../../utils/is.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar name = 'intersect';\\nvar dependencies = ['typed', 'config', 'abs', 'add', 'addScalar', 'matrix', 'multiply', 'multiplyScalar', 'divideScalar', 'subtract', 'smaller', 'equalScalar'];\\nvar createIntersect = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      config = _ref.config,\\n      abs = _ref.abs,\\n      add = _ref.add,\\n      addScalar = _ref.addScalar,\\n      matrix = _ref.matrix,\\n      multiply = _ref.multiply,\\n      multiplyScalar = _ref.multiplyScalar,\\n      divideScalar = _ref.divideScalar,\\n      subtract = _ref.subtract,\\n      smaller = _ref.smaller,\\n      equalScalar = _ref.equalScalar;\\n\\n  /**\\n   * Calculates the point of intersection of two lines in two or three dimensions\\n   * and of a line and a plane in three dimensions. The inputs are in the form of\\n   * arrays or 1 dimensional matrices. The line intersection functions return null\\n   * if the lines do not meet.\\n   *\\n   * Note: Fill the plane coefficients as `x + y + z = c` and not as `x + y + z + c = 0`.\\n   *\\n   * Syntax:\\n   *\\n   *    math.intersect(endPoint1Line1, endPoint2Line1, endPoint1Line2, endPoint2Line2)\\n   *    math.intersect(endPoint1, endPoint2, planeCoefficients)\\n   *\\n   * Examples:\\n   *\\n   *    math.intersect([0, 0], [10, 10], [10, 0], [0, 10])              // Returns [5, 5]\\n   *    math.intersect([0, 0, 0], [10, 10, 0], [10, 0, 0], [0, 10, 0])  // Returns [5, 5, 0]\\n   *    math.intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])            // Returns [7, -4, 3]\\n   *\\n   * @param  {Array | Matrix} w   Co-ordinates of first end-point of first line\\n   * @param  {Array | Matrix} x   Co-ordinates of second end-point of first line\\n   * @param  {Array | Matrix} y   Co-ordinates of first end-point of second line\\n   *                              OR Co-efficients of the plane's equation\\n   * @param  {Array | Matrix} z   Co-ordinates of second end-point of second line\\n   *                              OR null if the calculation is for line and plane\\n   * @return {Array}              Returns the point of intersection of lines/lines-planes\\n   */\\n  return typed('intersect', {\\n    'Array, Array, Array': function ArrayArrayArray(x, y, plane) {\\n      if (!_3d(x)) {\\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\\n      }\\n\\n      if (!_3d(y)) {\\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\\n      }\\n\\n      if (!_4d(plane)) {\\n        throw new TypeError('Array with 4 numbers expected as third argument');\\n      }\\n\\n      return _intersectLinePlane(x[0], x[1], x[2], y[0], y[1], y[2], plane[0], plane[1], plane[2], plane[3]);\\n    },\\n    'Array, Array, Array, Array': function ArrayArrayArrayArray(w, x, y, z) {\\n      if (w.length === 2) {\\n        if (!_2d(w)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\\n        }\\n\\n        if (!_2d(x)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');\\n        }\\n\\n        if (!_2d(y)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');\\n        }\\n\\n        if (!_2d(z)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for fourth argument');\\n        }\\n\\n        return _intersect2d(w, x, y, z);\\n      } else if (w.length === 3) {\\n        if (!_3d(w)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\\n        }\\n\\n        if (!_3d(x)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\\n        }\\n\\n        if (!_3d(y)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for third argument');\\n        }\\n\\n        if (!_3d(z)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for fourth argument');\\n        }\\n\\n        return _intersect3d(w[0], w[1], w[2], x[0], x[1], x[2], y[0], y[1], y[2], z[0], z[1], z[2]);\\n      } else {\\n        throw new TypeError('Arrays with two or thee dimensional points expected');\\n      }\\n    },\\n    'Matrix, Matrix, Matrix': function MatrixMatrixMatrix(x, y, plane) {\\n      return matrix(this(x.valueOf(), y.valueOf(), plane.valueOf()));\\n    },\\n    'Matrix, Matrix, Matrix, Matrix': function MatrixMatrixMatrixMatrix(w, x, y, z) {\\n      // TODO: output matrix type should match input matrix type\\n      return matrix(this(w.valueOf(), x.valueOf(), y.valueOf(), z.valueOf()));\\n    }\\n  });\\n\\n  function _isNumeric(a) {\\n    // intersect supports numbers and bignumbers\\n    return typeof a === 'number' || (0, _is.isBigNumber)(a);\\n  }\\n\\n  function _2d(x) {\\n    return x.length === 2 && _isNumeric(x[0]) && _isNumeric(x[1]);\\n  }\\n\\n  function _3d(x) {\\n    return x.length === 3 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]);\\n  }\\n\\n  function _4d(x) {\\n    return x.length === 4 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]) && _isNumeric(x[3]);\\n  }\\n\\n  function _intersect2d(p1a, p1b, p2a, p2b) {\\n    var o1 = p1a;\\n    var o2 = p2a;\\n    var d1 = subtract(o1, p1b);\\n    var d2 = subtract(o2, p2b);\\n    var det = subtract(multiplyScalar(d1[0], d2[1]), multiplyScalar(d2[0], d1[1]));\\n\\n    if (smaller(abs(det), config.epsilon)) {\\n      return null;\\n    }\\n\\n    var d20o11 = multiplyScalar(d2[0], o1[1]);\\n    var d21o10 = multiplyScalar(d2[1], o1[0]);\\n    var d20o21 = multiplyScalar(d2[0], o2[1]);\\n    var d21o20 = multiplyScalar(d2[1], o2[0]);\\n    var t = divideScalar(addScalar(subtract(subtract(d20o11, d21o10), d20o21), d21o20), det);\\n    return add(multiply(d1, t), o1);\\n  }\\n\\n  function _intersect3dHelper(a, b, c, d, e, f, g, h, i, j, k, l) {\\n    // (a - b)*(c - d) + (e - f)*(g - h) + (i - j)*(k - l)\\n    var add1 = multiplyScalar(subtract(a, b), subtract(c, d));\\n    var add2 = multiplyScalar(subtract(e, f), subtract(g, h));\\n    var add3 = multiplyScalar(subtract(i, j), subtract(k, l));\\n    return addScalar(addScalar(add1, add2), add3);\\n  }\\n\\n  function _intersect3d(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4) {\\n    var d1343 = _intersect3dHelper(x1, x3, x4, x3, y1, y3, y4, y3, z1, z3, z4, z3);\\n\\n    var d4321 = _intersect3dHelper(x4, x3, x2, x1, y4, y3, y2, y1, z4, z3, z2, z1);\\n\\n    var d1321 = _intersect3dHelper(x1, x3, x2, x1, y1, y3, y2, y1, z1, z3, z2, z1);\\n\\n    var d4343 = _intersect3dHelper(x4, x3, x4, x3, y4, y3, y4, y3, z4, z3, z4, z3);\\n\\n    var d2121 = _intersect3dHelper(x2, x1, x2, x1, y2, y1, y2, y1, z2, z1, z2, z1);\\n\\n    var ta = divideScalar(subtract(multiplyScalar(d1343, d4321), multiplyScalar(d1321, d4343)), subtract(multiplyScalar(d2121, d4343), multiplyScalar(d4321, d4321)));\\n    var tb = divideScalar(addScalar(d1343, multiplyScalar(ta, d4321)), d4343);\\n    var pax = addScalar(x1, multiplyScalar(ta, subtract(x2, x1)));\\n    var pay = addScalar(y1, multiplyScalar(ta, subtract(y2, y1)));\\n    var paz = addScalar(z1, multiplyScalar(ta, subtract(z2, z1)));\\n    var pbx = addScalar(x3, multiplyScalar(tb, subtract(x4, x3)));\\n    var pby = addScalar(y3, multiplyScalar(tb, subtract(y4, y3)));\\n    var pbz = addScalar(z3, multiplyScalar(tb, subtract(z4, z3)));\\n\\n    if (equalScalar(pax, pbx) && equalScalar(pay, pby) && equalScalar(paz, pbz)) {\\n      return [pax, pay, paz];\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  function _intersectLinePlane(x1, y1, z1, x2, y2, z2, x, y, z, c) {\\n    var x1x = multiplyScalar(x1, x);\\n    var x2x = multiplyScalar(x2, x);\\n    var y1y = multiplyScalar(y1, y);\\n    var y2y = multiplyScalar(y2, y);\\n    var z1z = multiplyScalar(z1, z);\\n    var z2z = multiplyScalar(z2, z);\\n    var t = divideScalar(subtract(subtract(subtract(c, x1x), y1y), z1z), subtract(subtract(subtract(addScalar(addScalar(x2x, y2y), z2z), x1x), y1y), z1z));\\n    var px = addScalar(x1, multiplyScalar(t, subtract(x2, x1)));\\n    var py = addScalar(y1, multiplyScalar(t, subtract(y2, y1)));\\n    var pz = addScalar(z1, multiplyScalar(t, subtract(z2, z1)));\\n    return [px, py, pz]; // TODO: Add cases when line is parallel to the plane:\\n    //       (a) no intersection,\\n    //       (b) line contained in plane\\n  }\\n});\\nexports.createIntersect = createIntersect;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createIntersect\",\"_is\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_isNumeric\",\"a\",\"isBigNumber\",\"_2d\",\"x\",\"length\",\"_3d\",\"_intersect3dHelper\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"add1\",\"multiplyScalar\",\"subtract\",\"add2\",\"add3\",\"addScalar\",\"typed\",\"config\",\"abs\",\"add\",\"matrix\",\"multiply\",\"divideScalar\",\"smaller\",\"equalScalar\",\"ArrayArrayArray\",\"y\",\"plane\",\"TypeError\",\"x1x\",\"x1\",\"x2x\",\"x2\",\"y1y\",\"y1\",\"y2y\",\"y2\",\"z1z\",\"z1\",\"z\",\"z2z\",\"z2\",\"t\",\"px\",\"py\",\"pz\",\"ArrayArrayArrayArray\",\"w\",\"d1\",\"d2\",\"det\",\"epsilon\",\"d20o11\",\"d21o10\",\"d20o21\",\"d21o20\",\"d1343\",\"x3\",\"x4\",\"y3\",\"y4\",\"z3\",\"z4\",\"d4321\",\"d1321\",\"d4343\",\"d2121\",\"ta\",\"tb\",\"pax\",\"pay\",\"paz\",\"pbx\",\"pby\",\"pbz\",\"MatrixMatrixMatrix\",\"valueOf\",\"MatrixMatrixMatrixMatrix\"]\n}\n"]