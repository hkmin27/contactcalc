["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/rotationMatrix.js"],"~:js","shadow$provide[517]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.rotationMatrixDocs={name:\"rotationMatrix\",category:\"Matrix\",syntax:[\"rotationMatrix(theta)\",\"rotationMatrix(theta, v)\",\"rotationMatrix(theta, v, format)\"],description:\"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.\",examples:[\"rotationMatrix(pi / 2)\",'rotationMatrix(unit(\"45deg\"), [0, 0, 1])','rotationMatrix(1, matrix([0, 0, 1]), \"sparse\")'],\nseealso:[\"cos\",\"sin\"]}}","~:source","shadow$provide[517] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotationMatrixDocs = void 0;\nvar rotationMatrixDocs = {\n  name: 'rotationMatrix',\n  category: 'Matrix',\n  syntax: ['rotationMatrix(theta)', 'rotationMatrix(theta, v)', 'rotationMatrix(theta, v, format)'],\n  description: 'Returns a 2-D rotation matrix (2x2) for a given angle (in radians). ' + 'Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.',\n  examples: ['rotationMatrix(pi / 2)', 'rotationMatrix(unit(\"45deg\"), [0, 0, 1])', 'rotationMatrix(1, matrix([0, 0, 1]), \"sparse\")'],\n  seealso: ['cos', 'sin']\n};\nexports.rotationMatrixDocs = rotationMatrixDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","__esModule","name","value","syntax","rotationMatrixDocs","category","examples","description"]],"~:compiled-at",1619135724012,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$rotationMatrix.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,kBAAR,CARyBA,CACvBC,KAAM,gBADiBD,CAEvBE,SAAU,QAFaF,CAGvBG,OAAQ,CAAC,uBAAD,CAA0B,0BAA1B,CAAsD,kCAAtD,CAHeH,CAIvBI,YAAa,0JAJUJ,CAKvBK,SAAU,CAAC,wBAAD,CAA2B,0CAA3B,CAAuE,gDAAvE,CALaL;AAMvBM,QAAS,CAAC,KAAD,CAAQ,KAAR,CANcN,CAPqC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/rotationMatrix.js\"],\n\"sourcesContent\":[\"shadow$provide[517] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.rotationMatrixDocs = void 0;\\nvar rotationMatrixDocs = {\\n  name: 'rotationMatrix',\\n  category: 'Matrix',\\n  syntax: ['rotationMatrix(theta)', 'rotationMatrix(theta, v)', 'rotationMatrix(theta, v, format)'],\\n  description: 'Returns a 2-D rotation matrix (2x2) for a given angle (in radians). ' + 'Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.',\\n  examples: ['rotationMatrix(pi / 2)', 'rotationMatrix(unit(\\\"45deg\\\"), [0, 0, 1])', 'rotationMatrix(1, matrix([0, 0, 1]), \\\"sparse\\\")'],\\n  seealso: ['cos', 'sin']\\n};\\nexports.rotationMatrixDocs = rotationMatrixDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"rotationMatrixDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]