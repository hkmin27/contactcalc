["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/unit/to.js"],"~:js","shadow$provide[161]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createTo=void 0;c=b(25);var q=b(87),f=b(77);b=(0,c.factory)(\"to\",[\"typed\",\"matrix\"],function(u){var k=u.typed,t=u.matrix,p=(0,q.createAlgorithm13)({typed:k}),g=(0,f.createAlgorithm14)({typed:k});return k(\"to\",{\"Unit, Unit | string\":function(d,l){return d.to(l)},\"Matrix, Matrix\":function(d,l){return p(d,l,this)},\"Array, Array\":function(d,l){return this(t(d),t(l)).valueOf()},\"Array, Matrix\":function(d,l){return this(t(d),\nl)},\"Matrix, Array\":function(d,l){return this(d,t(l))},\"Matrix, any\":function(d,l){return g(d,l,this,!1)},\"any, Matrix\":function(d,l){return g(l,d,this,!0)},\"Array, any\":function(d,l){return g(t(d),l,this,!1).valueOf()},\"any, Array\":function(d,l){return g(t(l),d,this,!0).valueOf()}})});a.createTo=b}","~:source","shadow$provide[161] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createTo = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'to';\nvar dependencies = ['typed', 'matrix'];\nvar createTo = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var algorithm13 = (0, _algorithm.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Change the unit of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.to(x, unit)\n   *\n   * Examples:\n   *\n   *    math.to(math.unit('2 inch'), 'cm')                   // returns Unit 5.08 cm\n   *    math.to(math.unit('2 inch'), math.unit(null, 'cm'))  // returns Unit 5.08 cm\n   *    math.to(math.unit(16, 'bytes'), 'bits')              // returns Unit 128 bits\n   *\n   * See also:\n   *\n   *    unit\n   *\n   * @param {Unit | Array | Matrix} x     The unit to be converted.\n   * @param {Unit | Array | Matrix} unit  New unit. Can be a string like \"cm\"\n   *                                      or a unit without value.\n   * @return {Unit | Array | Matrix} value with changed, fixed unit.\n   */\n\n  return typed(name, {\n    'Unit, Unit | string': function UnitUnitString(x, unit) {\n      return x.to(unit);\n    },\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'Matrix, any': function MatrixAny(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm14(x, y, this, false);\n    },\n    'any, Matrix': function anyMatrix(x, y) {\n      // SparseMatrix does not support Units\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createTo = createTo;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13"]],"~:properties",["^5",["typed","createTo","__esModule","value"]],"~:compiled-at",1619135723895,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$unit$to.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,QAAR,CAAmB,IAAK,EAEpBC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAEf,KAAIQ,EAAaR,CAAA,CAAQ,EAAR,CAAjB,CAEIS,EAAcT,CAAA,CAAQ,EAAR,CAIdM,EAAAA,CAA0B,CAAC,CAAA,CAAGC,CAASG,CAAAA,OAAb,EAFnBC,IAEmB,CADXC,CAAC,OAADA,CAAU,QAAVA,CACW,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IAClFC,EAAQD,CAAKC,CAAAA,KADqE,CAElFC,EAASF,CAAKE,CAAAA,MAFoE,CAGlFC,EAAc,CAAC,CAAA,CAAGR,CAAWS,CAAAA,iBAAf,EAAkC,CAClDH,MAAOA,CAD2C,CAAlC,CAHoE,CAMlFI,EAAc,CAAC,CAAA,CAAGT,CAAYU,CAAAA,iBAAhB,EAAmC,CACnDL,MAAOA,CAD4C,CAAnC,CA4BlB,OAAOA,EAAA,CApCEH,IAoCF,CAAY,CACjB,sBAAuBS,QAAuB,CAACC,CAAD,CAAIC,CAAJ,CAAU,CACtD,MAAOD,EAAEE,CAAAA,EAAF,CAAKD,CAAL,CAD+C,CADvC,CAIjB,iBAAkBE,QAAqB,CAACH,CAAD,CAAII,CAAJ,CAAO,CAE5C,MAAOT,EAAA,CAAYK,CAAZ,CAAeI,CAAf,CAAkB,IAAlB,CAFqC,CAJ7B,CAQjB,eAAgBC,QAAmB,CAACL,CAAD,CAAII,CAAJ,CAAO,CAExC,MAAO,KAAA,CAAKV,CAAA,CAAOM,CAAP,CAAL,CAAgBN,CAAA,CAAOU,CAAP,CAAhB,CAA2BE,CAAAA,OAA3B,EAFiC,CARzB,CAYjB,gBAAiBC,QAAoB,CAACP,CAAD,CAAII,CAAJ,CAAO,CAE1C,MAAO,KAAA,CAAKV,CAAA,CAAOM,CAAP,CAAL;AAAgBI,CAAhB,CAFmC,CAZ3B,CAgBjB,gBAAiBI,QAAoB,CAACR,CAAD,CAAII,CAAJ,CAAO,CAE1C,MAAO,KAAA,CAAKJ,CAAL,CAAQN,CAAA,CAAOU,CAAP,CAAR,CAFmC,CAhB3B,CAoBjB,cAAeK,QAAkB,CAACT,CAAD,CAAII,CAAJ,CAAO,CAEtC,MAAOP,EAAA,CAAYG,CAAZ,CAAeI,CAAf,CAAkB,IAAlB,CAAwB,CAAA,CAAxB,CAF+B,CApBvB,CAwBjB,cAAeM,QAAkB,CAACV,CAAD,CAAII,CAAJ,CAAO,CAEtC,MAAOP,EAAA,CAAYO,CAAZ,CAAeJ,CAAf,CAAkB,IAAlB,CAAwB,CAAA,CAAxB,CAF+B,CAxBvB,CA4BjB,aAAcW,QAAiB,CAACX,CAAD,CAAII,CAAJ,CAAO,CAEpC,MAAOP,EAAA,CAAYH,CAAA,CAAOM,CAAP,CAAZ,CAAuBI,CAAvB,CAA0B,IAA1B,CAAgC,CAAA,CAAhC,CAAuCE,CAAAA,OAAvC,EAF6B,CA5BrB,CAgCjB,aAAcM,QAAiB,CAACZ,CAAD,CAAII,CAAJ,CAAO,CAEpC,MAAOP,EAAA,CAAYH,CAAA,CAAOU,CAAP,CAAZ,CAAuBJ,CAAvB,CAA0B,IAA1B,CAAgC,CAAA,CAAhC,CAAsCM,CAAAA,OAAtC,EAF6B,CAhCrB,CAAZ,CAlC+E,CAA1D,CAwE9BzB,EAAQI,CAAAA,QAAR,CAAmBA,CAxF2C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/unit/to.js\"],\n\"sourcesContent\":[\"shadow$provide[161] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createTo = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar name = 'to';\\nvar dependencies = ['typed', 'matrix'];\\nvar createTo = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix;\\n  var algorithm13 = (0, _algorithm.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm2.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Change the unit of a value.\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.to(x, unit)\\n   *\\n   * Examples:\\n   *\\n   *    math.to(math.unit('2 inch'), 'cm')                   // returns Unit 5.08 cm\\n   *    math.to(math.unit('2 inch'), math.unit(null, 'cm'))  // returns Unit 5.08 cm\\n   *    math.to(math.unit(16, 'bytes'), 'bits')              // returns Unit 128 bits\\n   *\\n   * See also:\\n   *\\n   *    unit\\n   *\\n   * @param {Unit | Array | Matrix} x     The unit to be converted.\\n   * @param {Unit | Array | Matrix} unit  New unit. Can be a string like \\\"cm\\\"\\n   *                                      or a unit without value.\\n   * @return {Unit | Array | Matrix} value with changed, fixed unit.\\n   */\\n\\n  return typed(name, {\\n    'Unit, Unit | string': function UnitUnitString(x, unit) {\\n      return x.to(unit);\\n    },\\n    'Matrix, Matrix': function MatrixMatrix(x, y) {\\n      // SparseMatrix does not support Units\\n      return algorithm13(x, y, this);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y));\\n    },\\n    'Matrix, any': function MatrixAny(x, y) {\\n      // SparseMatrix does not support Units\\n      return algorithm14(x, y, this, false);\\n    },\\n    'any, Matrix': function anyMatrix(x, y) {\\n      // SparseMatrix does not support Units\\n      return algorithm14(y, x, this, true);\\n    },\\n    'Array, any': function ArrayAny(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(x), y, this, false).valueOf();\\n    },\\n    'any, Array': function anyArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, this, true).valueOf();\\n    }\\n  });\\n});\\nexports.createTo = createTo;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createTo\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"UnitUnitString\",\"x\",\"unit\",\"to\",\"MatrixMatrix\",\"y\",\"ArrayArray\",\"valueOf\",\"ArrayMatrix\",\"MatrixArray\",\"MatrixAny\",\"anyMatrix\",\"ArrayAny\",\"anyArray\"]\n}\n"]