["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/rotate.js"],"~:js","shadow$provide[518]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.rotateDocs={name:\"rotate\",category:\"Matrix\",syntax:[\"rotate(w, theta)\",\"rotate(w, theta, v)\"],description:\"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.\",examples:[\"rotate([1, 0], math.pi / 2)\",'rotate(matrix([1, 0]), unit(\"35deg\"))','rotate([1, 0, 0], unit(\"90deg\"), [0, 0, 1])','rotate(matrix([1, 0, 0]), unit(\"90deg\"), matrix([0, 0, 1]))'],\nseealso:[\"matrix\",\"rotationMatrix\"]}}","~:source","shadow$provide[518] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotateDocs = void 0;\nvar rotateDocs = {\n  name: 'rotate',\n  category: 'Matrix',\n  syntax: ['rotate(w, theta)', 'rotate(w, theta, v)'],\n  description: 'Returns a 2-D rotation matrix (2x2) for a given angle (in radians). ' + 'Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.',\n  examples: ['rotate([1, 0], math.pi / 2)', 'rotate(matrix([1, 0]), unit(\"35deg\"))', 'rotate([1, 0, 0], unit(\"90deg\"), [0, 0, 1])', 'rotate(matrix([1, 0, 0]), unit(\"90deg\"), matrix([0, 0, 1]))'],\n  seealso: ['matrix', 'rotationMatrix']\n};\nexports.rotateDocs = rotateDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","__esModule","rotateDocs","name","value","syntax","category","examples","description"]],"~:compiled-at",1619135724012,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$rotate.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,UAAR,CARiBA,CACfC,KAAM,QADSD,CAEfE,SAAU,QAFKF,CAGfG,OAAQ,CAAC,kBAAD,CAAqB,qBAArB,CAHOH,CAIfI,YAAa,0JAJEJ,CAKfK,SAAU,CAAC,6BAAD,CAAgC,uCAAhC,CAAyE,6CAAzE,CAAwH,6DAAxH,CALKL;AAMfM,QAAS,CAAC,QAAD,CAAW,gBAAX,CANMN,CAP6C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/rotate.js\"],\n\"sourcesContent\":[\"shadow$provide[518] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.rotateDocs = void 0;\\nvar rotateDocs = {\\n  name: 'rotate',\\n  category: 'Matrix',\\n  syntax: ['rotate(w, theta)', 'rotate(w, theta, v)'],\\n  description: 'Returns a 2-D rotation matrix (2x2) for a given angle (in radians). ' + 'Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.',\\n  examples: ['rotate([1, 0], math.pi / 2)', 'rotate(matrix([1, 0]), unit(\\\"35deg\\\"))', 'rotate([1, 0, 0], unit(\\\"90deg\\\"), [0, 0, 1])', 'rotate(matrix([1, 0, 0]), unit(\\\"90deg\\\"), matrix([0, 0, 1]))'],\\n  seealso: ['matrix', 'rotationMatrix']\\n};\\nexports.rotateDocs = rotateDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"rotateDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]