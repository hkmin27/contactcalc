["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/string/print.js"],"~:js","shadow$provide[160]=function(c,b,y,a){function q(k,t,p){return k.replace(/\\$([\\w.]+)/g,function(g,d){d=d.split(\".\");for(var l=t[d.shift()];d.length&&void 0!==l;){var h=d.shift();l=h?l[h]:l+\".\"}return void 0!==l?(0,u.isString)(l)?l:(0,f.format)(l,p):g})}Object.defineProperty(a,\"__esModule\",{value:!0});a.createPrint=void 0;var f=b(21),u=b(14);c=b(25);c=(0,c.factory)(\"print\",[\"typed\"],function(k){k=k.typed;return k(\"print\",{\"string, Object | Array\":q,\"string, Object | Array, number | Object\":q})});a.createPrint=\nc}","~:source","shadow$provide[160] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPrint = void 0;\n\nvar _string = require(\"../../utils/string.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'print';\nvar dependencies = ['typed'];\nvar createPrint = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Interpolate values into a string template.\n   *\n   * Syntax:\n   *\n   *     math.print(template, values)\n   *     math.print(template, values, precision)\n   *     math.print(template, values, options)\n   *\n   * Example usage:\n   *\n   *     // the following outputs: 'Lucy is 5 years old'\n   *     math.print('Lucy is $age years old', {age: 5})\n   *\n   *     // the following outputs: 'The value of pi is 3.141592654'\n   *     math.print('The value of pi is $pi', {pi: math.pi}, 10)\n   *\n   *     // the following outputs: 'hello Mary! The date is 2013-03-23'\n   *     math.print('Hello $user.name! The date is $date', {\n   *       user: {\n   *         name: 'Mary',\n   *       },\n   *       date: new Date(2013, 2, 23).toISOString().substring(0, 10)\n   *     })\n   *\n   *     // the following outputs: 'My favorite fruits are apples and bananas !'\n   *     math.print('My favorite fruits are $0 and $1 !', [\n   *       'apples',\n   *       'bananas'\n   *     ])\n   *\n   * See also:\n   *\n   *     format\n   *\n   * @param {string} template           A string containing variable placeholders.\n   * @param {Object | Array | Matrix}   values An object or array containing variables\n   *                                    which will be filled in in the template.\n   * @param {number | Object} [options] Formatting options,\n   *                                    or the number of digits to format numbers.\n   *                                    See function math.format for a description\n   *                                    of all options.\n   * @return {string} Interpolated string\n   */\n  return typed(name, {\n    // note: Matrix will be converted automatically to an Array\n    'string, Object | Array': _print,\n    'string, Object | Array, number | Object': _print\n  });\n});\n/**\n * Interpolate values into a string template.\n * @param {string} template\n * @param {Object} values\n * @param {number | Object} [options]\n * @returns {string} Interpolated string\n * @private\n */\n\nexports.createPrint = createPrint;\n\nfunction _print(template, values, options) {\n  return template.replace(/\\$([\\w.]+)/g, function (original, key) {\n    var keys = key.split('.');\n    var value = values[keys.shift()];\n\n    while (keys.length && value !== undefined) {\n      var k = keys.shift();\n      value = k ? value[k] : value + '.';\n    }\n\n    if (value !== undefined) {\n      if (!(0, _is.isString)(value)) {\n        return (0, _string.format)(value, options);\n      } else {\n        return value;\n      }\n    }\n\n    return original;\n  });\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$utils$string","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["__esModule","createPrint","value"]],"~:compiled-at",1619135723895,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$string$print.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAgF9DC,QAASA,EAAM,CAACC,CAAD,CAAWC,CAAX,CAAmBC,CAAnB,CAA4B,CACzC,MAAOF,EAASG,CAAAA,OAAT,CAAiB,aAAjB,CAAgC,QAAS,CAACC,CAAD,CAAWC,CAAX,CAAgB,CAC1DC,CAAAA,CAAOD,CAAIE,CAAAA,KAAJ,CAAU,GAAV,CAGX,KAFA,IAAIC,EAAQP,CAAA,CAAOK,CAAKG,CAAAA,KAAL,EAAP,CAEZ,CAAOH,CAAKI,CAAAA,MAAZ,EAAgCC,IAAAA,EAAhC,GAAsBH,CAAtB,CAAA,CAA2C,CACzC,IAAII,EAAIN,CAAKG,CAAAA,KAAL,EACRD,EAAA,CAAQI,CAAA,CAAIJ,CAAA,CAAMI,CAAN,CAAJ,CAAeJ,CAAf,CAAuB,GAFU,CAK3C,MAAcG,KAAAA,EAAd,GAAIH,CAAJ,CACO,CAAC,CAAA,CAAGK,CAAIC,CAAAA,QAAR,EAAkBN,CAAlB,CAAL,CAGSA,CAHT,CACS,CAAC,CAAA,CAAGO,CAAQC,CAAAA,MAAZ,EAAoBR,CAApB,CAA2BN,CAA3B,CAFX,CAQOE,CAjBuD,CAAzD,CADkC,CA7E3Ca,MAAOC,CAAAA,cAAP,CAAsBpB,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CU,MAAO,CAAA,CADoC,CAA7C,CAGAV,EAAQqB,CAAAA,WAAR,CAAsB,IAAK,EAE3B,KAAIJ,EAAUnB,CAAA,CAAQ,EAAR,CAAd,CAEIiB,EAAMjB,CAAA,CAAQ,EAAR,CAENwB,EAAAA,CAAWxB,CAAA,CAAQ,EAAR,CAIXuB,EAAAA,CAA6B,CAAC,CAAA,CAAGC,CAASC,CAAAA,OAAb,EAFtBC,OAEsB,CADdC,CAAC,OAADA,CACc,CAA0C,QAAS,CAACC,CAAD,CAAO,CACrFC,CAAAA,CAAQD,CAAKC,CAAAA,KA8CjB,OAAOA,EAAA,CAjDEH,OAiDF,CAAY,CAEjB,yBAA0BvB,CAFT,CAGjB,0CAA2CA,CAH1B,CAAZ,CA/CkF,CAA1D,CA8DjCD,EAAQqB,CAAAA,WAAR;AAAsBA,CA9EwC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/string/print.js\"],\n\"sourcesContent\":[\"shadow$provide[160] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createPrint = void 0;\\n\\nvar _string = require(\\\"../../utils/string.js\\\");\\n\\nvar _is = require(\\\"../../utils/is.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar name = 'print';\\nvar dependencies = ['typed'];\\nvar createPrint = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed;\\n\\n  /**\\n   * Interpolate values into a string template.\\n   *\\n   * Syntax:\\n   *\\n   *     math.print(template, values)\\n   *     math.print(template, values, precision)\\n   *     math.print(template, values, options)\\n   *\\n   * Example usage:\\n   *\\n   *     // the following outputs: 'Lucy is 5 years old'\\n   *     math.print('Lucy is $age years old', {age: 5})\\n   *\\n   *     // the following outputs: 'The value of pi is 3.141592654'\\n   *     math.print('The value of pi is $pi', {pi: math.pi}, 10)\\n   *\\n   *     // the following outputs: 'hello Mary! The date is 2013-03-23'\\n   *     math.print('Hello $user.name! The date is $date', {\\n   *       user: {\\n   *         name: 'Mary',\\n   *       },\\n   *       date: new Date(2013, 2, 23).toISOString().substring(0, 10)\\n   *     })\\n   *\\n   *     // the following outputs: 'My favorite fruits are apples and bananas !'\\n   *     math.print('My favorite fruits are $0 and $1 !', [\\n   *       'apples',\\n   *       'bananas'\\n   *     ])\\n   *\\n   * See also:\\n   *\\n   *     format\\n   *\\n   * @param {string} template           A string containing variable placeholders.\\n   * @param {Object | Array | Matrix}   values An object or array containing variables\\n   *                                    which will be filled in in the template.\\n   * @param {number | Object} [options] Formatting options,\\n   *                                    or the number of digits to format numbers.\\n   *                                    See function math.format for a description\\n   *                                    of all options.\\n   * @return {string} Interpolated string\\n   */\\n  return typed(name, {\\n    // note: Matrix will be converted automatically to an Array\\n    'string, Object | Array': _print,\\n    'string, Object | Array, number | Object': _print\\n  });\\n});\\n/**\\n * Interpolate values into a string template.\\n * @param {string} template\\n * @param {Object} values\\n * @param {number | Object} [options]\\n * @returns {string} Interpolated string\\n * @private\\n */\\n\\nexports.createPrint = createPrint;\\n\\nfunction _print(template, values, options) {\\n  return template.replace(/\\\\$([\\\\w.]+)/g, function (original, key) {\\n    var keys = key.split('.');\\n    var value = values[keys.shift()];\\n\\n    while (keys.length && value !== undefined) {\\n      var k = keys.shift();\\n      value = k ? value[k] : value + '.';\\n    }\\n\\n    if (value !== undefined) {\\n      if (!(0, _is.isString)(value)) {\\n        return (0, _string.format)(value, options);\\n      } else {\\n        return value;\\n      }\\n    }\\n\\n    return original;\\n  });\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_print\",\"template\",\"values\",\"options\",\"replace\",\"original\",\"key\",\"keys\",\"split\",\"value\",\"shift\",\"length\",\"undefined\",\"k\",\"_is\",\"isString\",\"_string\",\"format\",\"Object\",\"defineProperty\",\"createPrint\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\"]\n}\n"]