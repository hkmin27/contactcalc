["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/tiny-emitter/index.js"],"~:js","shadow$provide[930]=function(c,b,y,a){function q(){}q.prototype={on:function(f,u,k){var t=this.e||(this.e={});(t[f]||(t[f]=[])).push({fn:u,ctx:k});return this},once:function(f,u,k){function t(){p.off(f,t);u.apply(k,arguments)}var p=this;t._=u;return this.on(f,t,k)},emit:function(f){var u=[].slice.call(arguments,1),k=((this.e||(this.e={}))[f]||[]).slice(),t=0,p=k.length;for(t;t<p;t++)k[t].fn.apply(k[t].ctx,u);return this},off:function(f,u){var k=this.e||(this.e={}),t=k[f],p=[];if(t&&u)for(var g=0,\nd=t.length;g<d;g++)t[g].fn!==u&&t[g].fn._!==u&&p.push(t[g]);p.length?k[f]=p:delete k[f];return this}};y.exports=q;y.exports.TinyEmitter=q}","~:source","shadow$provide[930] = function(global,require,module,exports) {\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["e","once","off","prototype","fn","TinyEmitter","emit","on","_","ctx"]],"~:compiled-at",1619135724112,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$tiny_emitter$index.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAC9DC,QAASA,EAAE,EAAG,EAKdA,CAAEC,CAAAA,SAAF,CAAc,CACZC,GAAIA,QAAS,CAACC,CAAD,CAAOC,CAAP,CAAiBC,CAAjB,CAAsB,CACjC,IAAIC,EAAI,IAAKA,CAAAA,CAATA,GAAe,IAAKA,CAAAA,CAApBA,CAAwB,EAAxBA,CAEwBC,EAA3BD,CAAA,CAAEH,CAAF,CAA2BI,GAAfD,CAAA,CAAEH,CAAF,CAAeI,CAAL,EAAKA,GAAAA,IAA5B,CAAiC,CAC/BC,GAAIJ,CAD2B,CAE/BC,IAAKA,CAF0B,CAAjC,CAKA,OAAO,KAR0B,CADvB,CAYZI,KAAMA,QAAS,CAACN,CAAD,CAAOC,CAAP,CAAiBC,CAAjB,CAAsB,CAEnCK,QAASA,EAAS,EAAG,CACnBC,CAAKC,CAAAA,GAAL,CAAST,CAAT,CAAeO,CAAf,CACAN,EAASS,CAAAA,KAAT,CAAeR,CAAf,CAAoBS,SAApB,CAFmB,CADrB,IAAIH,EAAO,IAMXD,EAASK,CAAAA,CAAT,CAAaX,CACb,OAAO,KAAKF,CAAAA,EAAL,CAAQC,CAAR,CAAcO,CAAd,CAAwBL,CAAxB,CAR4B,CAZzB,CAuBZW,KAAMA,QAAS,CAACb,CAAD,CAAO,CACpB,IAAIc,EAAO,EAAGC,CAAAA,KAAMC,CAAAA,IAAT,CAAcL,SAAd,CAAyB,CAAzB,CAAX,CACIM,EAAiDF,CAAvC,CAAC,IAAKZ,CAAAA,CAAN,GAAY,IAAKA,CAAAA,CAAjB,CAAqB,EAArB,GAA0BH,CAA1B,CAAuCe,EAAJ,EAAIA,EAAAA,KAAxC,EADb,CAEIG,EAAI,CAFR,CAGIC,EAAMF,CAAOG,CAAAA,MAEjB,KAAKF,CAAL,CAAQA,CAAR,CAAYC,CAAZ,CAAiBD,CAAA,EAAjB,CACED,CAAA,CAAOC,CAAP,CAAUb,CAAAA,EAAGK,CAAAA,KAAb,CAAmBO,CAAA,CAAOC,CAAP,CAAUhB,CAAAA,GAA7B,CAAkCY,CAAlC,CAGF,OAAO,KAVa,CAvBV,CAoCZL,IAAKA,QAAS,CAACT,CAAD,CAAOC,CAAP,CAAiB,CAC7B,IAAIE,EAAI,IAAKA,CAAAA,CAATA,GAAe,IAAKA,CAAAA,CAApBA,CAAwB,EAAxBA,CAAJ,CACIkB,EAAOlB,CAAA,CAAEH,CAAF,CADX,CAEIsB,EAAa,EAEjB,IAAID,CAAJ,EAAYpB,CAAZ,CACE,IADoB,IACXiB,EAAI,CADO;AACJC,EAAME,CAAKD,CAAAA,MAA3B,CAAmCF,CAAnC,CAAuCC,CAAvC,CAA4CD,CAAA,EAA5C,CACMG,CAAA,CAAKH,CAAL,CAAQb,CAAAA,EAAZ,GAAmBJ,CAAnB,EAA+BoB,CAAA,CAAKH,CAAL,CAAQb,CAAAA,EAAGO,CAAAA,CAA1C,GAAgDX,CAAhD,EACEqB,CAAWlB,CAAAA,IAAX,CAAgBiB,CAAA,CAAKH,CAAL,CAAhB,CAQLI,EAAWF,CAAAA,MAAZ,CACIjB,CAAA,CAAEH,CAAF,CADJ,CACcsB,CADd,CAEI,OAAOnB,CAAA,CAAEH,CAAF,CAEX,OAAO,KApBsB,CApCnB,CA4DdL,EAAOC,CAAAA,OAAP,CAAiBC,CACjBF,EAAOC,CAAAA,OAAQ2B,CAAAA,WAAf,CAA6B1B,CAnEiC;\",\n\"sources\":[\"node_modules/tiny-emitter/index.js\"],\n\"sourcesContent\":[\"shadow$provide[930] = function(global,require,module,exports) {\\nfunction E () {\\n  // Keep this empty so it's easier to inherit from\\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\\n}\\n\\nE.prototype = {\\n  on: function (name, callback, ctx) {\\n    var e = this.e || (this.e = {});\\n\\n    (e[name] || (e[name] = [])).push({\\n      fn: callback,\\n      ctx: ctx\\n    });\\n\\n    return this;\\n  },\\n\\n  once: function (name, callback, ctx) {\\n    var self = this;\\n    function listener () {\\n      self.off(name, listener);\\n      callback.apply(ctx, arguments);\\n    };\\n\\n    listener._ = callback\\n    return this.on(name, listener, ctx);\\n  },\\n\\n  emit: function (name) {\\n    var data = [].slice.call(arguments, 1);\\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\\n    var i = 0;\\n    var len = evtArr.length;\\n\\n    for (i; i < len; i++) {\\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\\n    }\\n\\n    return this;\\n  },\\n\\n  off: function (name, callback) {\\n    var e = this.e || (this.e = {});\\n    var evts = e[name];\\n    var liveEvents = [];\\n\\n    if (evts && callback) {\\n      for (var i = 0, len = evts.length; i < len; i++) {\\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\\n          liveEvents.push(evts[i]);\\n      }\\n    }\\n\\n    // Remove event from queue to prevent memory leak\\n    // Suggested by https://github.com/lazd\\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\\n\\n    (liveEvents.length)\\n      ? e[name] = liveEvents\\n      : delete e[name];\\n\\n    return this;\\n  }\\n};\\n\\nmodule.exports = E;\\nmodule.exports.TinyEmitter = E;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"E\",\"prototype\",\"on\",\"name\",\"callback\",\"ctx\",\"e\",\"push\",\"fn\",\"once\",\"listener\",\"self\",\"off\",\"apply\",\"arguments\",\"_\",\"emit\",\"data\",\"slice\",\"call\",\"evtArr\",\"i\",\"len\",\"length\",\"evts\",\"liveEvents\",\"TinyEmitter\"]\n}\n"]