["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/dotDivide.js"],"~:js","shadow$provide[171]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createDotDivide=void 0;c=b(25);var q=b(89),f=b(94),u=b(112),k=b(76),t=b(96),p=b(87),g=b(77);b=(0,c.factory)(\"dotDivide\",[\"typed\",\"matrix\",\"equalScalar\",\"divideScalar\",\"DenseMatrix\"],function(d){var l=d.typed,h=d.matrix,n=d.equalScalar,r=d.divideScalar;d=d.DenseMatrix;var v=(0,q.createAlgorithm02)({typed:l,equalScalar:n}),C=(0,f.createAlgorithm03)({typed:l}),z=(0,u.createAlgorithm07)({typed:l,DenseMatrix:d}),w=\n(0,k.createAlgorithm11)({typed:l,equalScalar:n}),B=(0,t.createAlgorithm12)({typed:l,DenseMatrix:d}),x=(0,p.createAlgorithm13)({typed:l}),D=(0,g.createAlgorithm14)({typed:l});return l(\"dotDivide\",{\"any, any\":r,\"SparseMatrix, SparseMatrix\":function(F,E){return z(F,E,r,!1)},\"SparseMatrix, DenseMatrix\":function(F,E){return v(E,F,r,!0)},\"DenseMatrix, SparseMatrix\":function(F,E){return C(F,E,r,!1)},\"DenseMatrix, DenseMatrix\":function(F,E){return x(F,E,r)},\"Array, Array\":function(F,E){return this(h(F),h(E)).valueOf()},\n\"Array, Matrix\":function(F,E){return this(h(F),E)},\"Matrix, Array\":function(F,E){return this(F,h(E))},\"SparseMatrix, any\":function(F,E){return w(F,E,r,!1)},\"DenseMatrix, any\":function(F,E){return D(F,E,r,!1)},\"any, SparseMatrix\":function(F,E){return B(E,F,r,!0)},\"any, DenseMatrix\":function(F,E){return D(E,F,r,!0)},\"Array, any\":function(F,E){return D(h(F),E,r,!1).valueOf()},\"any, Array\":function(F,E){return D(h(E),F,r,!0).valueOf()}})});a.createDotDivide=b}","~:source","shadow$provide[171] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDotDivide = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm07.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar name = 'dotDivide';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'divideScalar', 'DenseMatrix'];\nvar createDotDivide = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      divideScalar = _ref.divideScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm07 = (0, _algorithm3.createAlgorithm07)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Divide two matrices element wise. The function accepts both matrices and\n   * scalar values.\n   *\n   * Syntax:\n   *\n   *    math.dotDivide(x, y)\n   *\n   * Examples:\n   *\n   *    math.dotDivide(2, 4)   // returns 0.5\n   *\n   *    a = [[9, 5], [6, 1]]\n   *    b = [[3, 2], [5, 2]]\n   *\n   *    math.dotDivide(a, b)   // returns [[3, 2.5], [1.2, 0.5]]\n   *    math.divide(a, b)      // returns [[1.75, 0.75], [-1.75, 2.25]]\n   *\n   * See also:\n   *\n   *    divide, multiply, dotMultiply\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Numerator\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Denominator\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Quotient, `x ./ y`\n   */\n\n  return typed(name, {\n    'any, any': divideScalar,\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm07(x, y, divideScalar, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, divideScalar, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, divideScalar, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, divideScalar);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, divideScalar, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, divideScalar, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, divideScalar, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, divideScalar, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, divideScalar, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, divideScalar, true).valueOf();\n    }\n  });\n});\nexports.createDotDivide = createDotDivide;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm07","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03"]],"~:properties",["^5",["typed","DenseMatrix","createDotDivide","__esModule","value","equalScalar"]],"~:compiled-at",1619135723900,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$dotDivide.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/dotDivide.js\"],\n\"sourcesContent\":[\"shadow$provide[171] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createDotDivide = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm02.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm03.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm07.js\\\");\\n\\nvar _algorithm4 = require(\\\"../../type/matrix/utils/algorithm11.js\\\");\\n\\nvar _algorithm5 = require(\\\"../../type/matrix/utils/algorithm12.js\\\");\\n\\nvar _algorithm6 = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm7 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar name = 'dotDivide';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'divideScalar', 'DenseMatrix'];\\nvar createDotDivide = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      divideScalar = _ref.divideScalar,\\n      DenseMatrix = _ref.DenseMatrix;\\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\\n    typed: typed\\n  });\\n  var algorithm07 = (0, _algorithm3.createAlgorithm07)({\\n    typed: typed,\\n    DenseMatrix: DenseMatrix\\n  });\\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\\n    typed: typed,\\n    DenseMatrix: DenseMatrix\\n  });\\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Divide two matrices element wise. The function accepts both matrices and\\n   * scalar values.\\n   *\\n   * Syntax:\\n   *\\n   *    math.dotDivide(x, y)\\n   *\\n   * Examples:\\n   *\\n   *    math.dotDivide(2, 4)   // returns 0.5\\n   *\\n   *    a = [[9, 5], [6, 1]]\\n   *    b = [[3, 2], [5, 2]]\\n   *\\n   *    math.dotDivide(a, b)   // returns [[3, 2.5], [1.2, 0.5]]\\n   *    math.divide(a, b)      // returns [[1.75, 0.75], [-1.75, 2.25]]\\n   *\\n   * See also:\\n   *\\n   *    divide, multiply, dotMultiply\\n   *\\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x Numerator\\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Denominator\\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix}                    Quotient, `x ./ y`\\n   */\\n\\n  return typed(name, {\\n    'any, any': divideScalar,\\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\\n      return algorithm07(x, y, divideScalar, false);\\n    },\\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\\n      return algorithm02(y, x, divideScalar, true);\\n    },\\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\\n      return algorithm03(x, y, divideScalar, false);\\n    },\\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\\n      return algorithm13(x, y, divideScalar);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y));\\n    },\\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\\n      return algorithm11(x, y, divideScalar, false);\\n    },\\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\\n      return algorithm14(x, y, divideScalar, false);\\n    },\\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\\n      return algorithm12(y, x, divideScalar, true);\\n    },\\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\\n      return algorithm14(y, x, divideScalar, true);\\n    },\\n    'Array, any': function ArrayAny(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(x), y, divideScalar, false).valueOf();\\n    },\\n    'any, Array': function anyArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, divideScalar, true).valueOf();\\n    }\\n  });\\n});\\nexports.createDotDivide = createDotDivide;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createDotDivide\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_algorithm4\",\"_algorithm5\",\"_algorithm6\",\"_algorithm7\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"equalScalar\",\"divideScalar\",\"DenseMatrix\",\"algorithm02\",\"createAlgorithm02\",\"algorithm03\",\"createAlgorithm03\",\"algorithm07\",\"createAlgorithm07\",\"algorithm11\",\"createAlgorithm11\",\"algorithm12\",\"createAlgorithm12\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"SparseMatrixSparseMatrix\",\"x\",\"y\",\"SparseMatrixDenseMatrix\",\"DenseMatrixSparseMatrix\",\"DenseMatrixDenseMatrix\",\"ArrayArray\",\"valueOf\",\"ArrayMatrix\",\"MatrixArray\",\"SparseMatrixAny\",\"DenseMatrixAny\",\"anySparseMatrix\",\"anyDenseMatrix\",\"ArrayAny\",\"anyArray\"]\n}\n"]