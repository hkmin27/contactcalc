["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/probability/randomInt.js"],"~:js","shadow$provide[557]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createRandomInt=void 0;c=b(25);var q=b(555),f=b(553),u=b(14);b=(0,c.factory)(\"randomInt\",[\"typed\",\"config\",\"?on\"],function(k){function t(h,n,r){var v=(0,q.randomMatrix)(h.valueOf(),function(){return p(n,r)});return(0,u.isMatrix)(h)?h.create(v):v}function p(h,n){return Math.floor(h+l()*(n-h))}var g=k.typed,d=k.config;k=k.on;var l=(0,f.createRng)(d.randomSeed);k&&k(\"config\",function(h,n){h.randomSeed!==n.randomSeed&&\n(l=(0,f.createRng)(h.randomSeed))});return g(\"randomInt\",{\"\":function(){return p(0,1)},number:function(h){return p(0,h)},\"number, number\":function(h,n){return p(h,n)},\"Array | Matrix\":function(h){return t(h,0,1)},\"Array | Matrix, number\":function(h,n){return t(h,0,n)},\"Array | Matrix, number, number\":function(h,n,r){return t(h,n,r)}})});a.createRandomInt=b}","~:source","shadow$provide[557] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createRandomInt = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _randomMatrix = require(\"./util/randomMatrix.js\");\n\nvar _seededRNG = require(\"./util/seededRNG.js\");\n\nvar _is = require(\"../../utils/is.js\");\n\nvar name = 'randomInt';\nvar dependencies = ['typed', 'config', '?on'];\nvar createRandomInt = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      on = _ref.on;\n  // seeded pseudo random number generator\n  var rng = (0, _seededRNG.createRng)(config.randomSeed);\n\n  if (on) {\n    on('config', function (curr, prev) {\n      if (curr.randomSeed !== prev.randomSeed) {\n        rng = (0, _seededRNG.createRng)(curr.randomSeed);\n      }\n    });\n  }\n  /**\n   * Return a random integer number larger or equal to `min` and smaller than `max`\n   * using a uniform distribution.\n   *\n   * Syntax:\n   *\n   *     math.randomInt()                // generate a random integer between 0 and 1\n   *     math.randomInt(max)             // generate a random integer between 0 and max\n   *     math.randomInt(min, max)        // generate a random integer between min and max\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\n   *\n   * Examples:\n   *\n   *     math.randomInt(100)    // returns a random integer between 0 and 100\n   *     math.randomInt(30, 40) // returns a random integer between 30 and 40\n   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1\n   *\n   * See also:\n   *\n   *     random, pickRandom\n   *\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\n   *                                size and filled with random values is returned\n   * @param {number} [min]  Minimum boundary for the random value, included\n   * @param {number} [max]  Maximum boundary for the random value, excluded\n   * @return {number | Array | Matrix} A random integer value\n   */\n\n\n  return typed(name, {\n    '': function _() {\n      return _randomInt(0, 1);\n    },\n    number: function number(max) {\n      return _randomInt(0, max);\n    },\n    'number, number': function numberNumber(min, max) {\n      return _randomInt(min, max);\n    },\n    'Array | Matrix': function ArrayMatrix(size) {\n      return _randomIntMatrix(size, 0, 1);\n    },\n    'Array | Matrix, number': function ArrayMatrixNumber(size, max) {\n      return _randomIntMatrix(size, 0, max);\n    },\n    'Array | Matrix, number, number': function ArrayMatrixNumberNumber(size, min, max) {\n      return _randomIntMatrix(size, min, max);\n    }\n  });\n\n  function _randomIntMatrix(size, min, max) {\n    var res = (0, _randomMatrix.randomMatrix)(size.valueOf(), function () {\n      return _randomInt(min, max);\n    });\n    return (0, _is.isMatrix)(size) ? size.create(res) : res;\n  }\n\n  function _randomInt(min, max) {\n    return Math.floor(min + rng() * (max - min));\n  }\n});\nexports.createRandomInt = createRandomInt;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$function$probability$util$randomMatrix","~$module$node_modules$mathjs$lib$cjs$function$probability$util$seededRNG"]],"~:properties",["^5",["__esModule","value","number","createRandomInt"]],"~:compiled-at",1619135724031,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$probability$randomInt.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/probability/randomInt.js\"],\n\"sourcesContent\":[\"shadow$provide[557] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createRandomInt = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _randomMatrix = require(\\\"./util/randomMatrix.js\\\");\\n\\nvar _seededRNG = require(\\\"./util/seededRNG.js\\\");\\n\\nvar _is = require(\\\"../../utils/is.js\\\");\\n\\nvar name = 'randomInt';\\nvar dependencies = ['typed', 'config', '?on'];\\nvar createRandomInt = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      config = _ref.config,\\n      on = _ref.on;\\n  // seeded pseudo random number generator\\n  var rng = (0, _seededRNG.createRng)(config.randomSeed);\\n\\n  if (on) {\\n    on('config', function (curr, prev) {\\n      if (curr.randomSeed !== prev.randomSeed) {\\n        rng = (0, _seededRNG.createRng)(curr.randomSeed);\\n      }\\n    });\\n  }\\n  /**\\n   * Return a random integer number larger or equal to `min` and smaller than `max`\\n   * using a uniform distribution.\\n   *\\n   * Syntax:\\n   *\\n   *     math.randomInt()                // generate a random integer between 0 and 1\\n   *     math.randomInt(max)             // generate a random integer between 0 and max\\n   *     math.randomInt(min, max)        // generate a random integer between min and max\\n   *     math.randomInt(size)            // generate a matrix with random integer between 0 and 1\\n   *     math.randomInt(size, max)       // generate a matrix with random integer between 0 and max\\n   *     math.randomInt(size, min, max)  // generate a matrix with random integer between min and max\\n   *\\n   * Examples:\\n   *\\n   *     math.randomInt(100)    // returns a random integer between 0 and 100\\n   *     math.randomInt(30, 40) // returns a random integer between 30 and 40\\n   *     math.randomInt([2, 3]) // returns a 2x3 matrix with random integers between 0 and 1\\n   *\\n   * See also:\\n   *\\n   *     random, pickRandom\\n   *\\n   * @param {Array | Matrix} [size] If provided, an array or matrix with given\\n   *                                size and filled with random values is returned\\n   * @param {number} [min]  Minimum boundary for the random value, included\\n   * @param {number} [max]  Maximum boundary for the random value, excluded\\n   * @return {number | Array | Matrix} A random integer value\\n   */\\n\\n\\n  return typed(name, {\\n    '': function _() {\\n      return _randomInt(0, 1);\\n    },\\n    number: function number(max) {\\n      return _randomInt(0, max);\\n    },\\n    'number, number': function numberNumber(min, max) {\\n      return _randomInt(min, max);\\n    },\\n    'Array | Matrix': function ArrayMatrix(size) {\\n      return _randomIntMatrix(size, 0, 1);\\n    },\\n    'Array | Matrix, number': function ArrayMatrixNumber(size, max) {\\n      return _randomIntMatrix(size, 0, max);\\n    },\\n    'Array | Matrix, number, number': function ArrayMatrixNumberNumber(size, min, max) {\\n      return _randomIntMatrix(size, min, max);\\n    }\\n  });\\n\\n  function _randomIntMatrix(size, min, max) {\\n    var res = (0, _randomMatrix.randomMatrix)(size.valueOf(), function () {\\n      return _randomInt(min, max);\\n    });\\n    return (0, _is.isMatrix)(size) ? size.create(res) : res;\\n  }\\n\\n  function _randomInt(min, max) {\\n    return Math.floor(min + rng() * (max - min));\\n  }\\n});\\nexports.createRandomInt = createRandomInt;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createRandomInt\",\"_factory\",\"_randomMatrix\",\"_seededRNG\",\"_is\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_randomIntMatrix\",\"size\",\"min\",\"max\",\"res\",\"randomMatrix\",\"valueOf\",\"_randomInt\",\"isMatrix\",\"create\",\"Math\",\"floor\",\"rng\",\"typed\",\"config\",\"on\",\"createRng\",\"randomSeed\",\"curr\",\"prev\",\"_\",\"number\",\"numberNumber\",\"ArrayMatrix\",\"ArrayMatrixNumber\",\"ArrayMatrixNumberNumber\"]\n}\n"]