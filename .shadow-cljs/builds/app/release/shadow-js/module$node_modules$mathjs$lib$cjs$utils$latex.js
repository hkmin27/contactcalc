["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/utils/latex.js"],"~:js","shadow$provide[260]=function(c,b,y,a){function q(p){return(0,f[\"default\"])(p,{preserveFormatting:!0})}Object.defineProperty(a,\"__esModule\",{value:!0});a.escapeLatex=q;a.toSymbol=function(p,g){return(\"undefined\"===typeof g?0:g)?(0,u.hasOwnProperty)(t,p)?t[p]:\"\\\\mathrm{\"+q(p)+\"}\":(0,u.hasOwnProperty)(k,p)?k[p]:q(p)};a.defaultTemplate=a.latexFunctions=a.latexOperators=a.latexSymbols=void 0;var f=function(p){return p&&p.__esModule?p:{\"default\":p}}(b(259)),u=b(15),k={Alpha:\"A\",alpha:\"\\\\alpha\",Beta:\"B\",\nbeta:\"\\\\beta\",Gamma:\"\\\\Gamma\",gamma:\"\\\\gamma\",Delta:\"\\\\Delta\",delta:\"\\\\delta\",Epsilon:\"E\",epsilon:\"\\\\epsilon\",varepsilon:\"\\\\varepsilon\",Zeta:\"Z\",zeta:\"\\\\zeta\",Eta:\"H\",eta:\"\\\\eta\",Theta:\"\\\\Theta\",theta:\"\\\\theta\",vartheta:\"\\\\vartheta\",Iota:\"I\",iota:\"\\\\iota\",Kappa:\"K\",kappa:\"\\\\kappa\",varkappa:\"\\\\varkappa\",Lambda:\"\\\\Lambda\",lambda:\"\\\\lambda\",Mu:\"M\",mu:\"\\\\mu\",Nu:\"N\",nu:\"\\\\nu\",Xi:\"\\\\Xi\",xi:\"\\\\xi\",Omicron:\"O\",omicron:\"o\",Pi:\"\\\\Pi\",pi:\"\\\\pi\",varpi:\"\\\\varpi\",Rho:\"P\",rho:\"\\\\rho\",varrho:\"\\\\varrho\",Sigma:\"\\\\Sigma\",\nsigma:\"\\\\sigma\",varsigma:\"\\\\varsigma\",Tau:\"T\",tau:\"\\\\tau\",Upsilon:\"\\\\Upsilon\",upsilon:\"\\\\upsilon\",Phi:\"\\\\Phi\",phi:\"\\\\phi\",varphi:\"\\\\varphi\",Chi:\"X\",chi:\"\\\\chi\",Psi:\"\\\\Psi\",psi:\"\\\\psi\",Omega:\"\\\\Omega\",omega:\"\\\\omega\",\"true\":\"\\\\mathrm{True}\",\"false\":\"\\\\mathrm{False}\",i:\"i\",inf:\"\\\\infty\",Inf:\"\\\\infty\",infinity:\"\\\\infty\",Infinity:\"\\\\infty\",oo:\"\\\\infty\",lim:\"\\\\lim\",undefined:\"\\\\mathbf{?}\"};a.latexSymbols=k;c={transpose:\"^\\\\top\",ctranspose:\"^H\",factorial:\"!\",pow:\"^\",dotPow:\".^\\\\wedge\",unaryPlus:\"+\",unaryMinus:\"-\",\nbitNot:\"\\\\~\",not:\"\\\\neg\",multiply:\"\\\\cdot\",divide:\"\\\\frac\",dotMultiply:\".\\\\cdot\",dotDivide:\".:\",mod:\"\\\\mod\",add:\"+\",subtract:\"-\",to:\"\\\\rightarrow\",leftShift:\"\\x3c\\x3c\",rightArithShift:\"\\x3e\\x3e\",rightLogShift:\"\\x3e\\x3e\\x3e\",equal:\"\\x3d\",unequal:\"\\\\neq\",smaller:\"\\x3c\",larger:\"\\x3e\",smallerEq:\"\\\\leq\",largerEq:\"\\\\geq\",bitAnd:\"\\\\\\x26\",bitXor:\"\\\\underline{|}\",bitOr:\"|\",and:\"\\\\wedge\",xor:\"\\\\veebar\",or:\"\\\\vee\"};a.latexOperators=c;c={abs:{1:\"\\\\left|${args[0]}\\\\right|\"},add:{2:\"\\\\left(${args[0]}\".concat(c.add,\n\"${args[1]}\\\\right)\")},cbrt:{1:\"\\\\sqrt[3]{${args[0]}}\"},ceil:{1:\"\\\\left\\\\lceil${args[0]}\\\\right\\\\rceil\"},cube:{1:\"\\\\left(${args[0]}\\\\right)^3\"},divide:{2:\"\\\\frac{${args[0]}}{${args[1]}}\"},dotDivide:{2:\"\\\\left(${args[0]}\".concat(c.dotDivide,\"${args[1]}\\\\right)\")},dotMultiply:{2:\"\\\\left(${args[0]}\".concat(c.dotMultiply,\"${args[1]}\\\\right)\")},dotPow:{2:\"\\\\left(${args[0]}\".concat(c.dotPow,\"${args[1]}\\\\right)\")},exp:{1:\"\\\\exp\\\\left(${args[0]}\\\\right)\"},expm1:\"\\\\left(e\".concat(c.pow,\"{${args[0]}}-1\\\\right)\"),\nfix:{1:\"\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)\"},floor:{1:\"\\\\left\\\\lfloor${args[0]}\\\\right\\\\rfloor\"},gcd:\"\\\\gcd\\\\left(${args}\\\\right)\",hypot:\"\\\\hypot\\\\left(${args}\\\\right)\",log:{1:\"\\\\ln\\\\left(${args[0]}\\\\right)\",2:\"\\\\log_{${args[1]}}\\\\left(${args[0]}\\\\right)\"},log10:{1:\"\\\\log_{10}\\\\left(${args[0]}\\\\right)\"},log1p:{1:\"\\\\ln\\\\left(${args[0]}+1\\\\right)\",2:\"\\\\log_{${args[1]}}\\\\left(${args[0]}+1\\\\right)\"},log2:\"\\\\log_{2}\\\\left(${args[0]}\\\\right)\",mod:{2:\"\\\\left(${args[0]}\".concat(c.mod,\"${args[1]}\\\\right)\")},\nmultiply:{2:\"\\\\left(${args[0]}\".concat(c.multiply,\"${args[1]}\\\\right)\")},norm:{1:\"\\\\left\\\\|${args[0]}\\\\right\\\\|\",2:void 0},nthRoot:{2:\"\\\\sqrt[${args[1]}]{${args[0]}}\"},nthRoots:{2:\"\\\\{y : $y^{args[1]} \\x3d {${args[0]}}\\\\}\"},pow:{2:\"\\\\left(${args[0]}\\\\right)\".concat(c.pow,\"{${args[1]}}\")},round:{1:\"\\\\left\\\\lfloor${args[0]}\\\\right\\\\rceil\",2:void 0},sign:{1:\"\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)\"},sqrt:{1:\"\\\\sqrt{${args[0]}}\"},square:{1:\"\\\\left(${args[0]}\\\\right)^2\"},subtract:{2:\"\\\\left(${args[0]}\".concat(c.subtract,\n\"${args[1]}\\\\right)\")},unaryMinus:{1:\"\".concat(c.unaryMinus,\"\\\\left(${args[0]}\\\\right)\")},unaryPlus:{1:\"\".concat(c.unaryPlus,\"\\\\left(${args[0]}\\\\right)\")},bitAnd:{2:\"\\\\left(${args[0]}\".concat(c.bitAnd,\"${args[1]}\\\\right)\")},bitNot:{1:c.bitNot+\"\\\\left(${args[0]}\\\\right)\"},bitOr:{2:\"\\\\left(${args[0]}\".concat(c.bitOr,\"${args[1]}\\\\right)\")},bitXor:{2:\"\\\\left(${args[0]}\".concat(c.bitXor,\"${args[1]}\\\\right)\")},leftShift:{2:\"\\\\left(${args[0]}\".concat(c.leftShift,\"${args[1]}\\\\right)\")},rightArithShift:{2:\"\\\\left(${args[0]}\".concat(c.rightArithShift,\n\"${args[1]}\\\\right)\")},rightLogShift:{2:\"\\\\left(${args[0]}\".concat(c.rightLogShift,\"${args[1]}\\\\right)\")},bellNumbers:{1:\"\\\\mathrm{B}_{${args[0]}}\"},catalan:{1:\"\\\\mathrm{C}_{${args[0]}}\"},stirlingS2:{2:\"\\\\mathrm{S}\\\\left(${args}\\\\right)\"},arg:{1:\"\\\\arg\\\\left(${args[0]}\\\\right)\"},conj:{1:\"\\\\left(${args[0]}\\\\right)^*\"},im:{1:\"\\\\Im\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace\"},re:{1:\"\\\\Re\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace\"},and:{2:\"\\\\left(${args[0]}\".concat(c.and,\"${args[1]}\\\\right)\")},not:{1:c.not+\n\"\\\\left(${args[0]}\\\\right)\"},or:{2:\"\\\\left(${args[0]}\".concat(c.or,\"${args[1]}\\\\right)\")},xor:{2:\"\\\\left(${args[0]}\".concat(c.xor,\"${args[1]}\\\\right)\")},cross:{2:\"\\\\left(${args[0]}\\\\right)\\\\times\\\\left(${args[1]}\\\\right)\"},ctranspose:{1:\"\\\\left(${args[0]}\\\\right)\".concat(c.ctranspose)},det:{1:\"\\\\det\\\\left(${args[0]}\\\\right)\"},dot:{2:\"\\\\left(${args[0]}\\\\cdot${args[1]}\\\\right)\"},expm:{1:\"\\\\exp\\\\left(${args[0]}\\\\right)\"},inv:{1:\"\\\\left(${args[0]}\\\\right)^{-1}\"},sqrtm:{1:\"{${args[0]}}\".concat(c.pow,\"{\\\\frac{1}{2}}\")},\ntrace:{1:\"\\\\mathrm{tr}\\\\left(${args[0]}\\\\right)\"},transpose:{1:\"\\\\left(${args[0]}\\\\right)\".concat(c.transpose)},combinations:{2:\"\\\\binom{${args[0]}}{${args[1]}}\"},combinationsWithRep:{2:\"\\\\left(\\\\!\\\\!{\\\\binom{${args[0]}}{${args[1]}}}\\\\!\\\\!\\\\right)\"},factorial:{1:\"\\\\left(${args[0]}\\\\right)\".concat(c.factorial)},gamma:{1:\"\\\\Gamma\\\\left(${args[0]}\\\\right)\"},equal:{2:\"\\\\left(${args[0]}\".concat(c.equal,\"${args[1]}\\\\right)\")},larger:{2:\"\\\\left(${args[0]}\".concat(c.larger,\"${args[1]}\\\\right)\")},largerEq:{2:\"\\\\left(${args[0]}\".concat(c.largerEq,\n\"${args[1]}\\\\right)\")},smaller:{2:\"\\\\left(${args[0]}\".concat(c.smaller,\"${args[1]}\\\\right)\")},smallerEq:{2:\"\\\\left(${args[0]}\".concat(c.smallerEq,\"${args[1]}\\\\right)\")},unequal:{2:\"\\\\left(${args[0]}\".concat(c.unequal,\"${args[1]}\\\\right)\")},erf:{1:\"erf\\\\left(${args[0]}\\\\right)\"},max:\"\\\\max\\\\left(${args}\\\\right)\",min:\"\\\\min\\\\left(${args}\\\\right)\",variance:\"\\\\mathrm{Var}\\\\left(${args}\\\\right)\",acos:{1:\"\\\\cos^{-1}\\\\left(${args[0]}\\\\right)\"},acosh:{1:\"\\\\cosh^{-1}\\\\left(${args[0]}\\\\right)\"},acot:{1:\"\\\\cot^{-1}\\\\left(${args[0]}\\\\right)\"},\nacoth:{1:\"\\\\coth^{-1}\\\\left(${args[0]}\\\\right)\"},acsc:{1:\"\\\\csc^{-1}\\\\left(${args[0]}\\\\right)\"},acsch:{1:\"\\\\mathrm{csch}^{-1}\\\\left(${args[0]}\\\\right)\"},asec:{1:\"\\\\sec^{-1}\\\\left(${args[0]}\\\\right)\"},asech:{1:\"\\\\mathrm{sech}^{-1}\\\\left(${args[0]}\\\\right)\"},asin:{1:\"\\\\sin^{-1}\\\\left(${args[0]}\\\\right)\"},asinh:{1:\"\\\\sinh^{-1}\\\\left(${args[0]}\\\\right)\"},atan:{1:\"\\\\tan^{-1}\\\\left(${args[0]}\\\\right)\"},atan2:{2:\"\\\\mathrm{atan2}\\\\left(${args}\\\\right)\"},atanh:{1:\"\\\\tanh^{-1}\\\\left(${args[0]}\\\\right)\"},cos:{1:\"\\\\cos\\\\left(${args[0]}\\\\right)\"},\ncosh:{1:\"\\\\cosh\\\\left(${args[0]}\\\\right)\"},cot:{1:\"\\\\cot\\\\left(${args[0]}\\\\right)\"},coth:{1:\"\\\\coth\\\\left(${args[0]}\\\\right)\"},csc:{1:\"\\\\csc\\\\left(${args[0]}\\\\right)\"},csch:{1:\"\\\\mathrm{csch}\\\\left(${args[0]}\\\\right)\"},sec:{1:\"\\\\sec\\\\left(${args[0]}\\\\right)\"},sech:{1:\"\\\\mathrm{sech}\\\\left(${args[0]}\\\\right)\"},sin:{1:\"\\\\sin\\\\left(${args[0]}\\\\right)\"},sinh:{1:\"\\\\sinh\\\\left(${args[0]}\\\\right)\"},tan:{1:\"\\\\tan\\\\left(${args[0]}\\\\right)\"},tanh:{1:\"\\\\tanh\\\\left(${args[0]}\\\\right)\"},to:{2:\"\\\\left(${args[0]}\".concat(c.to,\n\"${args[1]}\\\\right)\")},numeric:function(p,g){return p.args[0].toTex()},number:{0:\"0\",1:\"\\\\left(${args[0]}\\\\right)\",2:\"\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)\"},string:{0:'\\\\mathtt{\"\"}',1:\"\\\\mathrm{string}\\\\left(${args[0]}\\\\right)\"},bignumber:{0:\"0\",1:\"\\\\left(${args[0]}\\\\right)\"},complex:{0:\"0\",1:\"\\\\left(${args[0]}\\\\right)\",2:\"\\\\left(\\\\left(${args[0]}\\\\right)+\".concat(k.i,\"\\\\cdot\\\\left(${args[1]}\\\\right)\\\\right)\")},matrix:{0:\"\\\\begin{bmatrix}\\\\end{bmatrix}\",1:\"\\\\left(${args[0]}\\\\right)\",\n2:\"\\\\left(${args[0]}\\\\right)\"},sparse:{0:\"\\\\begin{bsparse}\\\\end{bsparse}\",1:\"\\\\left(${args[0]}\\\\right)\"},unit:{1:\"\\\\left(${args[0]}\\\\right)\",2:\"\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)\"}};a.latexFunctions=c;a.defaultTemplate=\"\\\\mathrm{${name}}\\\\left(${args}\\\\right)\";var t={deg:\"^\\\\circ\"}}","~:source","shadow$provide[260] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.escapeLatex = escapeLatex;\nexports.toSymbol = toSymbol;\nexports.defaultTemplate = exports.latexFunctions = exports.latexOperators = exports.latexSymbols = void 0;\n\nvar _escapeLatex = _interopRequireDefault(require(\"escape-latex\"));\n\nvar _object = require(\"./object.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/* eslint no-template-curly-in-string: \"off\" */\nvar latexSymbols = {\n  // GREEK LETTERS\n  Alpha: 'A',\n  alpha: '\\\\alpha',\n  Beta: 'B',\n  beta: '\\\\beta',\n  Gamma: '\\\\Gamma',\n  gamma: '\\\\gamma',\n  Delta: '\\\\Delta',\n  delta: '\\\\delta',\n  Epsilon: 'E',\n  epsilon: '\\\\epsilon',\n  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',\n  zeta: '\\\\zeta',\n  Eta: 'H',\n  eta: '\\\\eta',\n  Theta: '\\\\Theta',\n  theta: '\\\\theta',\n  vartheta: '\\\\vartheta',\n  Iota: 'I',\n  iota: '\\\\iota',\n  Kappa: 'K',\n  kappa: '\\\\kappa',\n  varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',\n  lambda: '\\\\lambda',\n  Mu: 'M',\n  mu: '\\\\mu',\n  Nu: 'N',\n  nu: '\\\\nu',\n  Xi: '\\\\Xi',\n  xi: '\\\\xi',\n  Omicron: 'O',\n  omicron: 'o',\n  Pi: '\\\\Pi',\n  pi: '\\\\pi',\n  varpi: '\\\\varpi',\n  Rho: 'P',\n  rho: '\\\\rho',\n  varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',\n  sigma: '\\\\sigma',\n  varsigma: '\\\\varsigma',\n  Tau: 'T',\n  tau: '\\\\tau',\n  Upsilon: \"\\\\Upsilon\",\n  upsilon: \"\\\\upsilon\",\n  Phi: '\\\\Phi',\n  phi: '\\\\phi',\n  varphi: '\\\\varphi',\n  Chi: 'X',\n  chi: '\\\\chi',\n  Psi: '\\\\Psi',\n  psi: '\\\\psi',\n  Omega: '\\\\Omega',\n  omega: '\\\\omega',\n  // logic\n  \"true\": '\\\\mathrm{True}',\n  \"false\": '\\\\mathrm{False}',\n  // other\n  i: 'i',\n  // TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  undefined: '\\\\mathbf{?}'\n};\nexports.latexSymbols = latexSymbols;\nvar latexOperators = {\n  transpose: '^\\\\top',\n  ctranspose: '^H',\n  factorial: '!',\n  pow: '^',\n  dotPow: '.^\\\\wedge',\n  // TODO find ideal solution\n  unaryPlus: '+',\n  unaryMinus: '-',\n  bitNot: '\\\\~',\n  // TODO find ideal solution\n  not: '\\\\neg',\n  multiply: '\\\\cdot',\n  divide: '\\\\frac',\n  // TODO how to handle that properly?\n  dotMultiply: '.\\\\cdot',\n  // TODO find ideal solution\n  dotDivide: '.:',\n  // TODO find ideal solution\n  mod: '\\\\mod',\n  add: '+',\n  subtract: '-',\n  to: '\\\\rightarrow',\n  leftShift: '<<',\n  rightArithShift: '>>',\n  rightLogShift: '>>>',\n  equal: '=',\n  unequal: '\\\\neq',\n  smaller: '<',\n  larger: '>',\n  smallerEq: '\\\\leq',\n  largerEq: '\\\\geq',\n  bitAnd: '\\\\&',\n  bitXor: \"\\\\underline{|}\",\n  bitOr: '|',\n  and: '\\\\wedge',\n  xor: '\\\\veebar',\n  or: '\\\\vee'\n};\nexports.latexOperators = latexOperators;\nvar latexFunctions = {\n  // arithmetic\n  abs: {\n    1: '\\\\left|${args[0]}\\\\right|'\n  },\n  add: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.add, \"${args[1]}\\\\right)\")\n  },\n  cbrt: {\n    1: '\\\\sqrt[3]{${args[0]}}'\n  },\n  ceil: {\n    1: '\\\\left\\\\lceil${args[0]}\\\\right\\\\rceil'\n  },\n  cube: {\n    1: '\\\\left(${args[0]}\\\\right)^3'\n  },\n  divide: {\n    2: '\\\\frac{${args[0]}}{${args[1]}}'\n  },\n  dotDivide: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotDivide, \"${args[1]}\\\\right)\")\n  },\n  dotMultiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotMultiply, \"${args[1]}\\\\right)\")\n  },\n  dotPow: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.dotPow, \"${args[1]}\\\\right)\")\n  },\n  exp: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  expm1: \"\\\\left(e\".concat(latexOperators.pow, \"{${args[0]}}-1\\\\right)\"),\n  fix: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  floor: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rfloor'\n  },\n  gcd: '\\\\gcd\\\\left(${args}\\\\right)',\n  hypot: '\\\\hypot\\\\left(${args}\\\\right)',\n  log: {\n    1: '\\\\ln\\\\left(${args[0]}\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}\\\\right)'\n  },\n  log10: {\n    1: '\\\\log_{10}\\\\left(${args[0]}\\\\right)'\n  },\n  log1p: {\n    1: '\\\\ln\\\\left(${args[0]}+1\\\\right)',\n    2: '\\\\log_{${args[1]}}\\\\left(${args[0]}+1\\\\right)'\n  },\n  log2: '\\\\log_{2}\\\\left(${args[0]}\\\\right)',\n  mod: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.mod, \"${args[1]}\\\\right)\")\n  },\n  multiply: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.multiply, \"${args[1]}\\\\right)\")\n  },\n  norm: {\n    1: '\\\\left\\\\|${args[0]}\\\\right\\\\|',\n    2: undefined // use default template\n\n  },\n  nthRoot: {\n    2: '\\\\sqrt[${args[1]}]{${args[0]}}'\n  },\n  nthRoots: {\n    2: '\\\\{y : $y^{args[1]} = {${args[0]}}\\\\}'\n  },\n  pow: {\n    2: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.pow, \"{${args[1]}}\")\n  },\n  round: {\n    1: '\\\\left\\\\lfloor${args[0]}\\\\right\\\\rceil',\n    2: undefined // use default template\n\n  },\n  sign: {\n    1: '\\\\mathrm{${name}}\\\\left(${args[0]}\\\\right)'\n  },\n  sqrt: {\n    1: '\\\\sqrt{${args[0]}}'\n  },\n  square: {\n    1: '\\\\left(${args[0]}\\\\right)^2'\n  },\n  subtract: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.subtract, \"${args[1]}\\\\right)\")\n  },\n  unaryMinus: {\n    1: \"\".concat(latexOperators.unaryMinus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  unaryPlus: {\n    1: \"\".concat(latexOperators.unaryPlus, \"\\\\left(${args[0]}\\\\right)\")\n  },\n  // bitwise\n  bitAnd: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitAnd, \"${args[1]}\\\\right)\")\n  },\n  bitNot: {\n    1: latexOperators.bitNot + '\\\\left(${args[0]}\\\\right)'\n  },\n  bitOr: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitOr, \"${args[1]}\\\\right)\")\n  },\n  bitXor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.bitXor, \"${args[1]}\\\\right)\")\n  },\n  leftShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.leftShift, \"${args[1]}\\\\right)\")\n  },\n  rightArithShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightArithShift, \"${args[1]}\\\\right)\")\n  },\n  rightLogShift: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.rightLogShift, \"${args[1]}\\\\right)\")\n  },\n  // combinatorics\n  bellNumbers: {\n    1: '\\\\mathrm{B}_{${args[0]}}'\n  },\n  catalan: {\n    1: '\\\\mathrm{C}_{${args[0]}}'\n  },\n  stirlingS2: {\n    2: '\\\\mathrm{S}\\\\left(${args}\\\\right)'\n  },\n  // complex\n  arg: {\n    1: '\\\\arg\\\\left(${args[0]}\\\\right)'\n  },\n  conj: {\n    1: '\\\\left(${args[0]}\\\\right)^*'\n  },\n  im: {\n    1: '\\\\Im\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  re: {\n    1: '\\\\Re\\\\left\\\\lbrace${args[0]}\\\\right\\\\rbrace'\n  },\n  // logical\n  and: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.and, \"${args[1]}\\\\right)\")\n  },\n  not: {\n    1: latexOperators.not + '\\\\left(${args[0]}\\\\right)'\n  },\n  or: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.or, \"${args[1]}\\\\right)\")\n  },\n  xor: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.xor, \"${args[1]}\\\\right)\")\n  },\n  // matrix\n  cross: {\n    2: '\\\\left(${args[0]}\\\\right)\\\\times\\\\left(${args[1]}\\\\right)'\n  },\n  ctranspose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.ctranspose)\n  },\n  det: {\n    1: '\\\\det\\\\left(${args[0]}\\\\right)'\n  },\n  dot: {\n    2: '\\\\left(${args[0]}\\\\cdot${args[1]}\\\\right)'\n  },\n  expm: {\n    1: '\\\\exp\\\\left(${args[0]}\\\\right)'\n  },\n  inv: {\n    1: '\\\\left(${args[0]}\\\\right)^{-1}'\n  },\n  sqrtm: {\n    1: \"{${args[0]}}\".concat(latexOperators.pow, \"{\\\\frac{1}{2}}\")\n  },\n  trace: {\n    1: '\\\\mathrm{tr}\\\\left(${args[0]}\\\\right)'\n  },\n  transpose: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.transpose)\n  },\n  // probability\n  combinations: {\n    2: '\\\\binom{${args[0]}}{${args[1]}}'\n  },\n  combinationsWithRep: {\n    2: '\\\\left(\\\\!\\\\!{\\\\binom{${args[0]}}{${args[1]}}}\\\\!\\\\!\\\\right)'\n  },\n  factorial: {\n    1: \"\\\\left(${args[0]}\\\\right)\".concat(latexOperators.factorial)\n  },\n  gamma: {\n    1: '\\\\Gamma\\\\left(${args[0]}\\\\right)'\n  },\n  // relational\n  equal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.equal, \"${args[1]}\\\\right)\")\n  },\n  larger: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.larger, \"${args[1]}\\\\right)\")\n  },\n  largerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.largerEq, \"${args[1]}\\\\right)\")\n  },\n  smaller: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smaller, \"${args[1]}\\\\right)\")\n  },\n  smallerEq: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.smallerEq, \"${args[1]}\\\\right)\")\n  },\n  unequal: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.unequal, \"${args[1]}\\\\right)\")\n  },\n  // special\n  erf: {\n    1: 'erf\\\\left(${args[0]}\\\\right)'\n  },\n  // statistics\n  max: '\\\\max\\\\left(${args}\\\\right)',\n  min: '\\\\min\\\\left(${args}\\\\right)',\n  variance: '\\\\mathrm{Var}\\\\left(${args}\\\\right)',\n  // trigonometry\n  acos: {\n    1: '\\\\cos^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acosh: {\n    1: '\\\\cosh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acot: {\n    1: '\\\\cot^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acoth: {\n    1: '\\\\coth^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsc: {\n    1: '\\\\csc^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  acsch: {\n    1: '\\\\mathrm{csch}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asec: {\n    1: '\\\\sec^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asech: {\n    1: '\\\\mathrm{sech}^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asin: {\n    1: '\\\\sin^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  asinh: {\n    1: '\\\\sinh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan: {\n    1: '\\\\tan^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  atan2: {\n    2: '\\\\mathrm{atan2}\\\\left(${args}\\\\right)'\n  },\n  atanh: {\n    1: '\\\\tanh^{-1}\\\\left(${args[0]}\\\\right)'\n  },\n  cos: {\n    1: '\\\\cos\\\\left(${args[0]}\\\\right)'\n  },\n  cosh: {\n    1: '\\\\cosh\\\\left(${args[0]}\\\\right)'\n  },\n  cot: {\n    1: '\\\\cot\\\\left(${args[0]}\\\\right)'\n  },\n  coth: {\n    1: '\\\\coth\\\\left(${args[0]}\\\\right)'\n  },\n  csc: {\n    1: '\\\\csc\\\\left(${args[0]}\\\\right)'\n  },\n  csch: {\n    1: '\\\\mathrm{csch}\\\\left(${args[0]}\\\\right)'\n  },\n  sec: {\n    1: '\\\\sec\\\\left(${args[0]}\\\\right)'\n  },\n  sech: {\n    1: '\\\\mathrm{sech}\\\\left(${args[0]}\\\\right)'\n  },\n  sin: {\n    1: '\\\\sin\\\\left(${args[0]}\\\\right)'\n  },\n  sinh: {\n    1: '\\\\sinh\\\\left(${args[0]}\\\\right)'\n  },\n  tan: {\n    1: '\\\\tan\\\\left(${args[0]}\\\\right)'\n  },\n  tanh: {\n    1: '\\\\tanh\\\\left(${args[0]}\\\\right)'\n  },\n  // unit\n  to: {\n    2: \"\\\\left(${args[0]}\".concat(latexOperators.to, \"${args[1]}\\\\right)\")\n  },\n  // utils\n  numeric: function numeric(node, options) {\n    // Not sure if this is strictly right but should work correctly for the vast majority of use cases.\n    return node.args[0].toTex();\n  },\n  // type\n  number: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  },\n  string: {\n    0: '\\\\mathtt{\"\"}',\n    1: '\\\\mathrm{string}\\\\left(${args[0]}\\\\right)'\n  },\n  bignumber: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  complex: {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: \"\\\\left(\\\\left(${args[0]}\\\\right)+\".concat(latexSymbols.i, \"\\\\cdot\\\\left(${args[1]}\\\\right)\\\\right)\")\n  },\n  matrix: {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(${args[0]}\\\\right)'\n  },\n  sparse: {\n    0: '\\\\begin{bsparse}\\\\end{bsparse}',\n    1: '\\\\left(${args[0]}\\\\right)'\n  },\n  unit: {\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  }\n};\nexports.latexFunctions = latexFunctions;\nvar defaultTemplate = '\\\\mathrm{${name}}\\\\left(${args}\\\\right)';\nexports.defaultTemplate = defaultTemplate;\nvar latexUnits = {\n  deg: '^\\\\circ'\n};\n\nfunction escapeLatex(string) {\n  return (0, _escapeLatex[\"default\"])(string, {\n    preserveFormatting: true\n  });\n} // @param {string} name\n// @param {boolean} isUnit\n\n\nfunction toSymbol(name, isUnit) {\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n\n  if (isUnit) {\n    if ((0, _object.hasOwnProperty)(latexUnits, name)) {\n      return latexUnits[name];\n    }\n\n    return '\\\\mathrm{' + escapeLatex(name) + '}';\n  }\n\n  if ((0, _object.hasOwnProperty)(latexSymbols, name)) {\n    return latexSymbols[name];\n  }\n\n  return escapeLatex(name);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$escape_latex$dist$index","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$object"]],"~:properties",["^5",["catalan","floor","log1p","ceil","varpi","im","asech","gamma","cosh","unaryPlus","sqrtm","min","combinations","Epsilon","numeric","eta","Mu","asec","acsc","dotDivide","Phi","string","latexOperators","Iota","fix","inf","arg","acot","smaller","multiply","csc","not","omicron","Omicron","Eta","atan2","cot","larger","dotMultiply","nu","Omega","norm","oo","dot","trace","cbrt","delta","cross","matrix","upsilon","sigma","stirlingS2","iota","__esModule","max","largerEq","rightLogShift","rightArithShift","pow","acoth","infinity","Delta","rho","csch","expm","Zeta","combinationsWithRep","varepsilon","det","atan","omega","varrho","log","acosh","varsigma","psi","Alpha","unequal","cube","Infinity","Pi","sin","pi","vartheta","gcd","hypot","value","Rho","defaultTemplate","bitAnd","Xi","bitNot","kappa","varphi","exp","subtract","chi","lim","inv","zeta","or","leftShift","Psi","log10","number","tau","erf","Chi","Nu","bignumber","factorial","sqrt","Gamma","toSymbol","bitXor","nthRoot","tan","cos","Lambda","and","sparse","mod","Theta","square","i","Upsilon","abs","mu","conj","dotPow","undefined","expm1","acsch","theta","divide","alpha","unit","nthRoots","unaryMinus","add","deg","coth","variance","beta","sech","re","Sigma","atanh","Inf","bellNumbers","varkappa","ctranspose","xi","sinh","preserveFormatting","equal","latexSymbols","asinh","to","latexFunctions","sec","lambda","Tau","round","complex","asin","sign","smallerEq","xor","phi","transpose","tanh","Kappa","log2","Beta","epsilon","acos","bitOr","escapeLatex"]],"~:compiled-at",1619135723962,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$utils$latex.js\",\n\"lineCount\":16,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/utils/latex.js\"],\n\"sourcesContent\":[\"shadow$provide[260] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.escapeLatex = escapeLatex;\\nexports.toSymbol = toSymbol;\\nexports.defaultTemplate = exports.latexFunctions = exports.latexOperators = exports.latexSymbols = void 0;\\n\\nvar _escapeLatex = _interopRequireDefault(require(\\\"escape-latex\\\"));\\n\\nvar _object = require(\\\"./object.js\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\n\\n/* eslint no-template-curly-in-string: \\\"off\\\" */\\nvar latexSymbols = {\\n  // GREEK LETTERS\\n  Alpha: 'A',\\n  alpha: '\\\\\\\\alpha',\\n  Beta: 'B',\\n  beta: '\\\\\\\\beta',\\n  Gamma: '\\\\\\\\Gamma',\\n  gamma: '\\\\\\\\gamma',\\n  Delta: '\\\\\\\\Delta',\\n  delta: '\\\\\\\\delta',\\n  Epsilon: 'E',\\n  epsilon: '\\\\\\\\epsilon',\\n  varepsilon: '\\\\\\\\varepsilon',\\n  Zeta: 'Z',\\n  zeta: '\\\\\\\\zeta',\\n  Eta: 'H',\\n  eta: '\\\\\\\\eta',\\n  Theta: '\\\\\\\\Theta',\\n  theta: '\\\\\\\\theta',\\n  vartheta: '\\\\\\\\vartheta',\\n  Iota: 'I',\\n  iota: '\\\\\\\\iota',\\n  Kappa: 'K',\\n  kappa: '\\\\\\\\kappa',\\n  varkappa: '\\\\\\\\varkappa',\\n  Lambda: '\\\\\\\\Lambda',\\n  lambda: '\\\\\\\\lambda',\\n  Mu: 'M',\\n  mu: '\\\\\\\\mu',\\n  Nu: 'N',\\n  nu: '\\\\\\\\nu',\\n  Xi: '\\\\\\\\Xi',\\n  xi: '\\\\\\\\xi',\\n  Omicron: 'O',\\n  omicron: 'o',\\n  Pi: '\\\\\\\\Pi',\\n  pi: '\\\\\\\\pi',\\n  varpi: '\\\\\\\\varpi',\\n  Rho: 'P',\\n  rho: '\\\\\\\\rho',\\n  varrho: '\\\\\\\\varrho',\\n  Sigma: '\\\\\\\\Sigma',\\n  sigma: '\\\\\\\\sigma',\\n  varsigma: '\\\\\\\\varsigma',\\n  Tau: 'T',\\n  tau: '\\\\\\\\tau',\\n  Upsilon: \\\"\\\\\\\\Upsilon\\\",\\n  upsilon: \\\"\\\\\\\\upsilon\\\",\\n  Phi: '\\\\\\\\Phi',\\n  phi: '\\\\\\\\phi',\\n  varphi: '\\\\\\\\varphi',\\n  Chi: 'X',\\n  chi: '\\\\\\\\chi',\\n  Psi: '\\\\\\\\Psi',\\n  psi: '\\\\\\\\psi',\\n  Omega: '\\\\\\\\Omega',\\n  omega: '\\\\\\\\omega',\\n  // logic\\n  \\\"true\\\": '\\\\\\\\mathrm{True}',\\n  \\\"false\\\": '\\\\\\\\mathrm{False}',\\n  // other\\n  i: 'i',\\n  // TODO use \\\\i ??\\n  inf: '\\\\\\\\infty',\\n  Inf: '\\\\\\\\infty',\\n  infinity: '\\\\\\\\infty',\\n  Infinity: '\\\\\\\\infty',\\n  oo: '\\\\\\\\infty',\\n  lim: '\\\\\\\\lim',\\n  undefined: '\\\\\\\\mathbf{?}'\\n};\\nexports.latexSymbols = latexSymbols;\\nvar latexOperators = {\\n  transpose: '^\\\\\\\\top',\\n  ctranspose: '^H',\\n  factorial: '!',\\n  pow: '^',\\n  dotPow: '.^\\\\\\\\wedge',\\n  // TODO find ideal solution\\n  unaryPlus: '+',\\n  unaryMinus: '-',\\n  bitNot: '\\\\\\\\~',\\n  // TODO find ideal solution\\n  not: '\\\\\\\\neg',\\n  multiply: '\\\\\\\\cdot',\\n  divide: '\\\\\\\\frac',\\n  // TODO how to handle that properly?\\n  dotMultiply: '.\\\\\\\\cdot',\\n  // TODO find ideal solution\\n  dotDivide: '.:',\\n  // TODO find ideal solution\\n  mod: '\\\\\\\\mod',\\n  add: '+',\\n  subtract: '-',\\n  to: '\\\\\\\\rightarrow',\\n  leftShift: '<<',\\n  rightArithShift: '>>',\\n  rightLogShift: '>>>',\\n  equal: '=',\\n  unequal: '\\\\\\\\neq',\\n  smaller: '<',\\n  larger: '>',\\n  smallerEq: '\\\\\\\\leq',\\n  largerEq: '\\\\\\\\geq',\\n  bitAnd: '\\\\\\\\&',\\n  bitXor: \\\"\\\\\\\\underline{|}\\\",\\n  bitOr: '|',\\n  and: '\\\\\\\\wedge',\\n  xor: '\\\\\\\\veebar',\\n  or: '\\\\\\\\vee'\\n};\\nexports.latexOperators = latexOperators;\\nvar latexFunctions = {\\n  // arithmetic\\n  abs: {\\n    1: '\\\\\\\\left|${args[0]}\\\\\\\\right|'\\n  },\\n  add: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.add, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  cbrt: {\\n    1: '\\\\\\\\sqrt[3]{${args[0]}}'\\n  },\\n  ceil: {\\n    1: '\\\\\\\\left\\\\\\\\lceil${args[0]}\\\\\\\\right\\\\\\\\rceil'\\n  },\\n  cube: {\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)^3'\\n  },\\n  divide: {\\n    2: '\\\\\\\\frac{${args[0]}}{${args[1]}}'\\n  },\\n  dotDivide: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.dotDivide, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  dotMultiply: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.dotMultiply, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  dotPow: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.dotPow, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  exp: {\\n    1: '\\\\\\\\exp\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  expm1: \\\"\\\\\\\\left(e\\\".concat(latexOperators.pow, \\\"{${args[0]}}-1\\\\\\\\right)\\\"),\\n  fix: {\\n    1: '\\\\\\\\mathrm{${name}}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  floor: {\\n    1: '\\\\\\\\left\\\\\\\\lfloor${args[0]}\\\\\\\\right\\\\\\\\rfloor'\\n  },\\n  gcd: '\\\\\\\\gcd\\\\\\\\left(${args}\\\\\\\\right)',\\n  hypot: '\\\\\\\\hypot\\\\\\\\left(${args}\\\\\\\\right)',\\n  log: {\\n    1: '\\\\\\\\ln\\\\\\\\left(${args[0]}\\\\\\\\right)',\\n    2: '\\\\\\\\log_{${args[1]}}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  log10: {\\n    1: '\\\\\\\\log_{10}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  log1p: {\\n    1: '\\\\\\\\ln\\\\\\\\left(${args[0]}+1\\\\\\\\right)',\\n    2: '\\\\\\\\log_{${args[1]}}\\\\\\\\left(${args[0]}+1\\\\\\\\right)'\\n  },\\n  log2: '\\\\\\\\log_{2}\\\\\\\\left(${args[0]}\\\\\\\\right)',\\n  mod: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.mod, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  multiply: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.multiply, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  norm: {\\n    1: '\\\\\\\\left\\\\\\\\|${args[0]}\\\\\\\\right\\\\\\\\|',\\n    2: undefined // use default template\\n\\n  },\\n  nthRoot: {\\n    2: '\\\\\\\\sqrt[${args[1]}]{${args[0]}}'\\n  },\\n  nthRoots: {\\n    2: '\\\\\\\\{y : $y^{args[1]} = {${args[0]}}\\\\\\\\}'\\n  },\\n  pow: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\\\\\\right)\\\".concat(latexOperators.pow, \\\"{${args[1]}}\\\")\\n  },\\n  round: {\\n    1: '\\\\\\\\left\\\\\\\\lfloor${args[0]}\\\\\\\\right\\\\\\\\rceil',\\n    2: undefined // use default template\\n\\n  },\\n  sign: {\\n    1: '\\\\\\\\mathrm{${name}}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  sqrt: {\\n    1: '\\\\\\\\sqrt{${args[0]}}'\\n  },\\n  square: {\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)^2'\\n  },\\n  subtract: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.subtract, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  unaryMinus: {\\n    1: \\\"\\\".concat(latexOperators.unaryMinus, \\\"\\\\\\\\left(${args[0]}\\\\\\\\right)\\\")\\n  },\\n  unaryPlus: {\\n    1: \\\"\\\".concat(latexOperators.unaryPlus, \\\"\\\\\\\\left(${args[0]}\\\\\\\\right)\\\")\\n  },\\n  // bitwise\\n  bitAnd: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.bitAnd, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  bitNot: {\\n    1: latexOperators.bitNot + '\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  bitOr: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.bitOr, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  bitXor: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.bitXor, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  leftShift: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.leftShift, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  rightArithShift: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.rightArithShift, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  rightLogShift: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.rightLogShift, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  // combinatorics\\n  bellNumbers: {\\n    1: '\\\\\\\\mathrm{B}_{${args[0]}}'\\n  },\\n  catalan: {\\n    1: '\\\\\\\\mathrm{C}_{${args[0]}}'\\n  },\\n  stirlingS2: {\\n    2: '\\\\\\\\mathrm{S}\\\\\\\\left(${args}\\\\\\\\right)'\\n  },\\n  // complex\\n  arg: {\\n    1: '\\\\\\\\arg\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  conj: {\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)^*'\\n  },\\n  im: {\\n    1: '\\\\\\\\Im\\\\\\\\left\\\\\\\\lbrace${args[0]}\\\\\\\\right\\\\\\\\rbrace'\\n  },\\n  re: {\\n    1: '\\\\\\\\Re\\\\\\\\left\\\\\\\\lbrace${args[0]}\\\\\\\\right\\\\\\\\rbrace'\\n  },\\n  // logical\\n  and: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.and, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  not: {\\n    1: latexOperators.not + '\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  or: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.or, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  xor: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.xor, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  // matrix\\n  cross: {\\n    2: '\\\\\\\\left(${args[0]}\\\\\\\\right)\\\\\\\\times\\\\\\\\left(${args[1]}\\\\\\\\right)'\\n  },\\n  ctranspose: {\\n    1: \\\"\\\\\\\\left(${args[0]}\\\\\\\\right)\\\".concat(latexOperators.ctranspose)\\n  },\\n  det: {\\n    1: '\\\\\\\\det\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  dot: {\\n    2: '\\\\\\\\left(${args[0]}\\\\\\\\cdot${args[1]}\\\\\\\\right)'\\n  },\\n  expm: {\\n    1: '\\\\\\\\exp\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  inv: {\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)^{-1}'\\n  },\\n  sqrtm: {\\n    1: \\\"{${args[0]}}\\\".concat(latexOperators.pow, \\\"{\\\\\\\\frac{1}{2}}\\\")\\n  },\\n  trace: {\\n    1: '\\\\\\\\mathrm{tr}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  transpose: {\\n    1: \\\"\\\\\\\\left(${args[0]}\\\\\\\\right)\\\".concat(latexOperators.transpose)\\n  },\\n  // probability\\n  combinations: {\\n    2: '\\\\\\\\binom{${args[0]}}{${args[1]}}'\\n  },\\n  combinationsWithRep: {\\n    2: '\\\\\\\\left(\\\\\\\\!\\\\\\\\!{\\\\\\\\binom{${args[0]}}{${args[1]}}}\\\\\\\\!\\\\\\\\!\\\\\\\\right)'\\n  },\\n  factorial: {\\n    1: \\\"\\\\\\\\left(${args[0]}\\\\\\\\right)\\\".concat(latexOperators.factorial)\\n  },\\n  gamma: {\\n    1: '\\\\\\\\Gamma\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  // relational\\n  equal: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.equal, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  larger: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.larger, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  largerEq: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.largerEq, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  smaller: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.smaller, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  smallerEq: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.smallerEq, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  unequal: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.unequal, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  // special\\n  erf: {\\n    1: 'erf\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  // statistics\\n  max: '\\\\\\\\max\\\\\\\\left(${args}\\\\\\\\right)',\\n  min: '\\\\\\\\min\\\\\\\\left(${args}\\\\\\\\right)',\\n  variance: '\\\\\\\\mathrm{Var}\\\\\\\\left(${args}\\\\\\\\right)',\\n  // trigonometry\\n  acos: {\\n    1: '\\\\\\\\cos^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  acosh: {\\n    1: '\\\\\\\\cosh^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  acot: {\\n    1: '\\\\\\\\cot^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  acoth: {\\n    1: '\\\\\\\\coth^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  acsc: {\\n    1: '\\\\\\\\csc^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  acsch: {\\n    1: '\\\\\\\\mathrm{csch}^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  asec: {\\n    1: '\\\\\\\\sec^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  asech: {\\n    1: '\\\\\\\\mathrm{sech}^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  asin: {\\n    1: '\\\\\\\\sin^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  asinh: {\\n    1: '\\\\\\\\sinh^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  atan: {\\n    1: '\\\\\\\\tan^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  atan2: {\\n    2: '\\\\\\\\mathrm{atan2}\\\\\\\\left(${args}\\\\\\\\right)'\\n  },\\n  atanh: {\\n    1: '\\\\\\\\tanh^{-1}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  cos: {\\n    1: '\\\\\\\\cos\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  cosh: {\\n    1: '\\\\\\\\cosh\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  cot: {\\n    1: '\\\\\\\\cot\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  coth: {\\n    1: '\\\\\\\\coth\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  csc: {\\n    1: '\\\\\\\\csc\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  csch: {\\n    1: '\\\\\\\\mathrm{csch}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  sec: {\\n    1: '\\\\\\\\sec\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  sech: {\\n    1: '\\\\\\\\mathrm{sech}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  sin: {\\n    1: '\\\\\\\\sin\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  sinh: {\\n    1: '\\\\\\\\sinh\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  tan: {\\n    1: '\\\\\\\\tan\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  tanh: {\\n    1: '\\\\\\\\tanh\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  // unit\\n  to: {\\n    2: \\\"\\\\\\\\left(${args[0]}\\\".concat(latexOperators.to, \\\"${args[1]}\\\\\\\\right)\\\")\\n  },\\n  // utils\\n  numeric: function numeric(node, options) {\\n    // Not sure if this is strictly right but should work correctly for the vast majority of use cases.\\n    return node.args[0].toTex();\\n  },\\n  // type\\n  number: {\\n    0: '0',\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)',\\n    2: '\\\\\\\\left(\\\\\\\\left(${args[0]}\\\\\\\\right)${args[1]}\\\\\\\\right)'\\n  },\\n  string: {\\n    0: '\\\\\\\\mathtt{\\\"\\\"}',\\n    1: '\\\\\\\\mathrm{string}\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  bignumber: {\\n    0: '0',\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  complex: {\\n    0: '0',\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)',\\n    2: \\\"\\\\\\\\left(\\\\\\\\left(${args[0]}\\\\\\\\right)+\\\".concat(latexSymbols.i, \\\"\\\\\\\\cdot\\\\\\\\left(${args[1]}\\\\\\\\right)\\\\\\\\right)\\\")\\n  },\\n  matrix: {\\n    0: '\\\\\\\\begin{bmatrix}\\\\\\\\end{bmatrix}',\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)',\\n    2: '\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  sparse: {\\n    0: '\\\\\\\\begin{bsparse}\\\\\\\\end{bsparse}',\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)'\\n  },\\n  unit: {\\n    1: '\\\\\\\\left(${args[0]}\\\\\\\\right)',\\n    2: '\\\\\\\\left(\\\\\\\\left(${args[0]}\\\\\\\\right)${args[1]}\\\\\\\\right)'\\n  }\\n};\\nexports.latexFunctions = latexFunctions;\\nvar defaultTemplate = '\\\\\\\\mathrm{${name}}\\\\\\\\left(${args}\\\\\\\\right)';\\nexports.defaultTemplate = defaultTemplate;\\nvar latexUnits = {\\n  deg: '^\\\\\\\\circ'\\n};\\n\\nfunction escapeLatex(string) {\\n  return (0, _escapeLatex[\\\"default\\\"])(string, {\\n    preserveFormatting: true\\n  });\\n} // @param {string} name\\n// @param {boolean} isUnit\\n\\n\\nfunction toSymbol(name, isUnit) {\\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\\n\\n  if (isUnit) {\\n    if ((0, _object.hasOwnProperty)(latexUnits, name)) {\\n      return latexUnits[name];\\n    }\\n\\n    return '\\\\\\\\mathrm{' + escapeLatex(name) + '}';\\n  }\\n\\n  if ((0, _object.hasOwnProperty)(latexSymbols, name)) {\\n    return latexSymbols[name];\\n  }\\n\\n  return escapeLatex(name);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"escapeLatex\",\"string\",\"_escapeLatex\",\"preserveFormatting\",\"Object\",\"defineProperty\",\"value\",\"toSymbol\",\"name\",\"isUnit\",\"_object\",\"hasOwnProperty\",\"latexUnits\",\"latexSymbols\",\"defaultTemplate\",\"latexFunctions\",\"latexOperators\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Alpha\",\"alpha\",\"Beta\",\"beta\",\"Gamma\",\"gamma\",\"Delta\",\"delta\",\"Epsilon\",\"epsilon\",\"varepsilon\",\"Zeta\",\"zeta\",\"Eta\",\"eta\",\"Theta\",\"theta\",\"vartheta\",\"Iota\",\"iota\",\"Kappa\",\"kappa\",\"varkappa\",\"Lambda\",\"lambda\",\"Mu\",\"mu\",\"Nu\",\"nu\",\"Xi\",\"xi\",\"Omicron\",\"omicron\",\"Pi\",\"pi\",\"varpi\",\"Rho\",\"rho\",\"varrho\",\"Sigma\",\"sigma\",\"varsigma\",\"Tau\",\"tau\",\"Upsilon\",\"upsilon\",\"Phi\",\"phi\",\"varphi\",\"Chi\",\"chi\",\"Psi\",\"psi\",\"Omega\",\"omega\",\"i\",\"inf\",\"Inf\",\"infinity\",\"Infinity\",\"oo\",\"lim\",\"undefined\",\"transpose\",\"ctranspose\",\"factorial\",\"pow\",\"dotPow\",\"unaryPlus\",\"unaryMinus\",\"bitNot\",\"not\",\"multiply\",\"divide\",\"dotMultiply\",\"dotDivide\",\"mod\",\"add\",\"subtract\",\"to\",\"leftShift\",\"rightArithShift\",\"rightLogShift\",\"equal\",\"unequal\",\"smaller\",\"larger\",\"smallerEq\",\"largerEq\",\"bitAnd\",\"bitXor\",\"bitOr\",\"and\",\"xor\",\"or\",\"abs\",\"concat\",\"cbrt\",\"ceil\",\"cube\",\"exp\",\"expm1\",\"fix\",\"floor\",\"gcd\",\"hypot\",\"log\",\"log10\",\"log1p\",\"log2\",\"norm\",\"nthRoot\",\"nthRoots\",\"round\",\"sign\",\"sqrt\",\"square\",\"bellNumbers\",\"catalan\",\"stirlingS2\",\"arg\",\"conj\",\"im\",\"re\",\"cross\",\"det\",\"dot\",\"expm\",\"inv\",\"sqrtm\",\"trace\",\"combinations\",\"combinationsWithRep\",\"erf\",\"max\",\"min\",\"variance\",\"acos\",\"acosh\",\"acot\",\"acoth\",\"acsc\",\"acsch\",\"asec\",\"asech\",\"asin\",\"asinh\",\"atan\",\"atan2\",\"atanh\",\"cos\",\"cosh\",\"cot\",\"coth\",\"csc\",\"csch\",\"sec\",\"sech\",\"sin\",\"sinh\",\"tan\",\"tanh\",\"numeric\",\"node\",\"options\",\"args\",\"toTex\",\"number\",\"bignumber\",\"complex\",\"matrix\",\"sparse\",\"unit\",\"deg\"]\n}\n"]