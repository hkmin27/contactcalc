["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/utils/complex.js"],"~:js","shadow$provide[59]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.complexEquals=function(f,u,k){return(0,q.nearlyEqual)(f.re,u.re,k)&&(0,q.nearlyEqual)(f.im,u.im,k)};var q=b(19)}","~:source","shadow$provide[59] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.complexEquals = complexEquals;\n\nvar _number = require(\"./number.js\");\n\n/**\n * Test whether two complex values are equal provided a given epsilon.\n * Does not use or change the global Complex.EPSILON setting\n * @param {Complex} x\n * @param {Complex} y\n * @param {number} epsilon\n * @returns {boolean}\n */\nfunction complexEquals(x, y, epsilon) {\n  return (0, _number.nearlyEqual)(x.re, y.re, epsilon) && (0, _number.nearlyEqual)(x.im, y.im, epsilon);\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$number"]],"~:properties",["^5",["complexEquals","__esModule","value"]],"~:compiled-at",1619135723757,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$utils$complex.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG7DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,aAAR,CAYAA,QAAsB,CAACC,CAAD,CAAIC,CAAJ,CAAOC,CAAP,CAAgB,CACpC,MAAO,CAAC,CAAA,CAAGC,CAAQC,CAAAA,WAAZ,EAAyBJ,CAAEK,CAAAA,EAA3B,CAA+BJ,CAAEI,CAAAA,EAAjC,CAAqCH,CAArC,CAAP,EAAwD,CAAC,CAAA,CAAGC,CAAQC,CAAAA,WAAZ,EAAyBJ,CAAEM,CAAAA,EAA3B,CAA+BL,CAAEK,CAAAA,EAAjC,CAAqCJ,CAArC,CADpB,CAVtC,KAAIC,EAAUV,CAAA,CAAQ,EAAR,CAR+C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/utils/complex.js\"],\n\"sourcesContent\":[\"shadow$provide[59] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.complexEquals = complexEquals;\\n\\nvar _number = require(\\\"./number.js\\\");\\n\\n/**\\n * Test whether two complex values are equal provided a given epsilon.\\n * Does not use or change the global Complex.EPSILON setting\\n * @param {Complex} x\\n * @param {Complex} y\\n * @param {number} epsilon\\n * @returns {boolean}\\n */\\nfunction complexEquals(x, y, epsilon) {\\n  return (0, _number.nearlyEqual)(x.re, y.re, epsilon) && (0, _number.nearlyEqual)(x.im, y.im, epsilon);\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"complexEquals\",\"x\",\"y\",\"epsilon\",\"_number\",\"nearlyEqual\",\"re\",\"im\"]\n}\n"]