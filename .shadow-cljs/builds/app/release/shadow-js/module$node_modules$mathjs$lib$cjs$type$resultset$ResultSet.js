["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/resultset/ResultSet.js"],"~:js","shadow$provide[27]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createResultSet=void 0;c=b(25);c=(0,c.factory)(\"ResultSet\",[],function(){function q(f){if(!(this instanceof q))throw new SyntaxError(\"Constructor must be called with the new operator\");this.entries=f||[]}q.prototype.type=\"ResultSet\";q.prototype.isResultSet=!0;q.prototype.valueOf=function(){return this.entries};q.prototype.toString=function(){return\"[\"+this.entries.join(\", \")+\"]\"};q.prototype.toJSON=function(){return{mathjs:\"ResultSet\",\nentries:this.entries}};q.fromJSON=function(f){return new q(f.entries)};return q},{isClass:!0});a.createResultSet=c}","~:source","shadow$provide[27] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createResultSet = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'ResultSet';\nvar dependencies = [];\nvar createResultSet = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function () {\n  /**\n   * A ResultSet contains a list or results\n   * @class ResultSet\n   * @param {Array} entries\n   * @constructor ResultSet\n   */\n  function ResultSet(entries) {\n    if (!(this instanceof ResultSet)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this.entries = entries || [];\n  }\n  /**\n   * Attach type information\n   */\n\n\n  ResultSet.prototype.type = 'ResultSet';\n  ResultSet.prototype.isResultSet = true;\n  /**\n   * Returns the array with results hold by this ResultSet\n   * @memberof ResultSet\n   * @returns {Array} entries\n   */\n\n  ResultSet.prototype.valueOf = function () {\n    return this.entries;\n  };\n  /**\n   * Returns the stringified results of the ResultSet\n   * @memberof ResultSet\n   * @returns {string} string\n   */\n\n\n  ResultSet.prototype.toString = function () {\n    return '[' + this.entries.join(', ') + ']';\n  };\n  /**\n   * Get a JSON representation of the ResultSet\n   * @memberof ResultSet\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   */\n\n\n  ResultSet.prototype.toJSON = function () {\n    return {\n      mathjs: 'ResultSet',\n      entries: this.entries\n    };\n  };\n  /**\n   * Instantiate a ResultSet from a JSON object\n   * @memberof ResultSet\n   * @param {Object} json  A JSON object structured as:\n   *                       `{\"mathjs\": \"ResultSet\", \"entries\": [...]}`\n   * @return {ResultSet}\n   */\n\n\n  ResultSet.fromJSON = function (json) {\n    return new ResultSet(json.entries);\n  };\n\n  return ResultSet;\n}, {\n  isClass: true\n});\nexports.createResultSet = createResultSet;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["valueOf","fromJSON","isClass","__esModule","toString","value","createResultSet","isResultSet","mathjs","entries","type","toJSON"]],"~:compiled-at",1619135723717,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$resultset$ResultSet.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,EAAf,CAAA,CAAqB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG7DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,eAAR,CAA0B,IAAK,EAE3BC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAIXM,EAAAA,CAAiC,CAAC,CAAA,CAAGC,CAASC,CAAAA,OAAb,EAF1BC,WAE0B,CADlBC,EACkB,CAA0C,QAAS,EAAG,CAOzFC,QAASA,EAAS,CAACC,CAAD,CAAU,CAC1B,GAAI,EAAE,IAAF,WAAkBD,EAAlB,CAAJ,CACE,KAAM,KAAIE,WAAJ,CAAgB,kDAAhB,CAAN,CAGF,IAAKD,CAAAA,OAAL,CAAeA,CAAf,EAA0B,EALA,CAY5BD,CAAUG,CAAAA,SAAUC,CAAAA,IAApB,CAA2B,WAC3BJ,EAAUG,CAAAA,SAAUE,CAAAA,WAApB,CAAkC,CAAA,CAOlCL,EAAUG,CAAAA,SAAUG,CAAAA,OAApB,CAA8BC,QAAS,EAAG,CACxC,MAAO,KAAKN,CAAAA,OAD4B,CAU1CD,EAAUG,CAAAA,SAAUK,CAAAA,QAApB,CAA+BC,QAAS,EAAG,CACzC,MAAO,GAAP,CAAa,IAAKR,CAAAA,OAAQS,CAAAA,IAAb,CAAkB,IAAlB,CAAb,CAAuC,GADE,CAW3CV,EAAUG,CAAAA,SAAUQ,CAAAA,MAApB,CAA6BC,QAAS,EAAG,CACvC,MAAO,CACLC,OAAQ,WADH;AAELZ,QAAS,IAAKA,CAAAA,OAFT,CADgC,CAezCD,EAAUc,CAAAA,QAAV,CAAqBC,QAAS,CAACC,CAAD,CAAO,CACnC,MAAO,KAAIhB,CAAJ,CAAcgB,CAAKf,CAAAA,OAAnB,CAD4B,CAIrC,OAAOD,EAnEkF,CAAtD,CAoElC,CACDiB,QAAS,CAAA,CADR,CApEkC,CAuErC1B,EAAQI,CAAAA,eAAR,CAA0BA,CAnFmC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/resultset/ResultSet.js\"],\n\"sourcesContent\":[\"shadow$provide[27] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createResultSet = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar name = 'ResultSet';\\nvar dependencies = [];\\nvar createResultSet = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function () {\\n  /**\\n   * A ResultSet contains a list or results\\n   * @class ResultSet\\n   * @param {Array} entries\\n   * @constructor ResultSet\\n   */\\n  function ResultSet(entries) {\\n    if (!(this instanceof ResultSet)) {\\n      throw new SyntaxError('Constructor must be called with the new operator');\\n    }\\n\\n    this.entries = entries || [];\\n  }\\n  /**\\n   * Attach type information\\n   */\\n\\n\\n  ResultSet.prototype.type = 'ResultSet';\\n  ResultSet.prototype.isResultSet = true;\\n  /**\\n   * Returns the array with results hold by this ResultSet\\n   * @memberof ResultSet\\n   * @returns {Array} entries\\n   */\\n\\n  ResultSet.prototype.valueOf = function () {\\n    return this.entries;\\n  };\\n  /**\\n   * Returns the stringified results of the ResultSet\\n   * @memberof ResultSet\\n   * @returns {string} string\\n   */\\n\\n\\n  ResultSet.prototype.toString = function () {\\n    return '[' + this.entries.join(', ') + ']';\\n  };\\n  /**\\n   * Get a JSON representation of the ResultSet\\n   * @memberof ResultSet\\n   * @returns {Object} Returns a JSON object structured as:\\n   *                   `{\\\"mathjs\\\": \\\"ResultSet\\\", \\\"entries\\\": [...]}`\\n   */\\n\\n\\n  ResultSet.prototype.toJSON = function () {\\n    return {\\n      mathjs: 'ResultSet',\\n      entries: this.entries\\n    };\\n  };\\n  /**\\n   * Instantiate a ResultSet from a JSON object\\n   * @memberof ResultSet\\n   * @param {Object} json  A JSON object structured as:\\n   *                       `{\\\"mathjs\\\": \\\"ResultSet\\\", \\\"entries\\\": [...]}`\\n   * @return {ResultSet}\\n   */\\n\\n\\n  ResultSet.fromJSON = function (json) {\\n    return new ResultSet(json.entries);\\n  };\\n\\n  return ResultSet;\\n}, {\\n  isClass: true\\n});\\nexports.createResultSet = createResultSet;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createResultSet\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"ResultSet\",\"entries\",\"SyntaxError\",\"prototype\",\"type\",\"isResultSet\",\"valueOf\",\"ResultSet.prototype.valueOf\",\"toString\",\"ResultSet.prototype.toString\",\"join\",\"toJSON\",\"ResultSet.prototype.toJSON\",\"mathjs\",\"fromJSON\",\"ResultSet.fromJSON\",\"json\",\"isClass\"]\n}\n"]