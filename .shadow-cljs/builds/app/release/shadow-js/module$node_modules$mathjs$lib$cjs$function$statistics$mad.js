["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/statistics/mad.js"],"~:js","shadow$provide[533]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createMad=void 0;var q=b(24);c=b(25);var f=b(154);b=(0,c.factory)(\"mad\",[\"typed\",\"abs\",\"map\",\"median\",\"subtract\"],function(u){function k(h){h=(0,q.flatten)(h.valueOf());if(0===h.length)throw Error(\"Cannot calculate median absolute deviation (mad) of an empty array\");try{var n=d(h);return d(g(h,function(r){return p(l(r,n))}))}catch(r){if(r instanceof TypeError&&-1!==r.message.indexOf(\"median\"))throw new TypeError(r.message.replace(\"median\",\n\"mad\"));throw(0,f.improveErrorMessage)(r,\"mad\");}}var t=u.typed,p=u.abs,g=u.map,d=u.median,l=u.subtract;return t(\"mad\",{\"Array | Matrix\":k,\"...\":function(h){return k(h)}})});a.createMad=b}","~:source","shadow$provide[533] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMad = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _improveErrorMessage = require(\"./utils/improveErrorMessage.js\");\n\nvar name = 'mad';\nvar dependencies = ['typed', 'abs', 'map', 'median', 'subtract'];\nvar createMad = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      abs = _ref.abs,\n      map = _ref.map,\n      median = _ref.median,\n      subtract = _ref.subtract;\n\n  /**\n   * Compute the median absolute deviation of a matrix or a list with values.\n   * The median absolute deviation is defined as the median of the absolute\n   * deviations from the median.\n   *\n   * Syntax:\n   *\n   *     math.mad(a, b, c, ...)\n   *     math.mad(A)\n   *\n   * Examples:\n   *\n   *     math.mad(10, 20, 30)             // returns 10\n   *     math.mad([1, 2, 3])              // returns 1\n   *     math.mad([[1, 2, 3], [4, 5, 6]]) // returns 1.5\n   *\n   * See also:\n   *\n   *     median, mean, std, abs\n   *\n   * @param {Array | Matrix} array\n   *                        A single matrix or multiple scalar values.\n   * @return {*} The median absolute deviation.\n   */\n  return typed(name, {\n    // mad([a, b, c, d, ...])\n    'Array | Matrix': _mad,\n    // mad(a, b, c, d, ...)\n    '...': function _(args) {\n      return _mad(args);\n    }\n  });\n\n  function _mad(array) {\n    array = (0, _array.flatten)(array.valueOf());\n\n    if (array.length === 0) {\n      throw new Error('Cannot calculate median absolute deviation (mad) of an empty array');\n    }\n\n    try {\n      var med = median(array);\n      return median(map(array, function (value) {\n        return abs(subtract(value, med));\n      }));\n    } catch (err) {\n      if (err instanceof TypeError && err.message.indexOf('median') !== -1) {\n        throw new TypeError(err.message.replace('median', 'mad'));\n      } else {\n        throw (0, _improveErrorMessage.improveErrorMessage)(err, 'mad');\n      }\n    }\n  }\n});\nexports.createMad = createMad;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$array","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$function$statistics$utils$improveErrorMessage"]],"~:properties",["^5",["__esModule","value","createMad"]],"~:compiled-at",1619135724023,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$statistics$mad.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,SAAR,CAAoB,IAAK,EAEzB,KAAIC,EAASP,CAAA,CAAQ,EAAR,CAETQ,EAAAA,CAAWR,CAAA,CAAQ,EAAR,CAEf,KAAIS,EAAuBT,CAAA,CAAQ,GAAR,CAIvBM,EAAAA,CAA2B,CAAC,CAAA,CAAGE,CAASE,CAAAA,OAAb,EAFpBC,KAEoB,CADZC,CAAC,OAADA,CAAU,KAAVA,CAAiB,KAAjBA,CAAwB,QAAxBA,CAAkC,UAAlCA,CACY,CAA0C,QAAS,CAACC,CAAD,CAAO,CAwCvFC,QAASA,EAAI,CAACC,CAAD,CAAQ,CACnBA,CAAA,CAAQ,CAAC,CAAA,CAAGR,CAAOS,CAAAA,OAAX,EAAoBD,CAAME,CAAAA,OAAN,EAApB,CAER,IAAqB,CAArB,GAAIF,CAAMG,CAAAA,MAAV,CACE,KAAUC,MAAJ,CAAU,oEAAV,CAAN,CAGF,GAAI,CACF,IAAIC,EAAMC,CAAA,CAAON,CAAP,CACV,OAAOM,EAAA,CAAOC,CAAA,CAAIP,CAAJ,CAAW,QAAS,CAACV,CAAD,CAAQ,CACxC,MAAOkB,EAAA,CAAIC,CAAA,CAASnB,CAAT,CAAgBe,CAAhB,CAAJ,CADiC,CAA5B,CAAP,CAFL,CAKF,MAAOK,CAAP,CAAY,CACZ,GAAIA,CAAJ,WAAmBC,UAAnB,EAAkE,EAAlE,GAAgCD,CAAIE,CAAAA,OAAQC,CAAAA,OAAZ,CAAoB,QAApB,CAAhC,CACE,KAAM,KAAIF,SAAJ,CAAcD,CAAIE,CAAAA,OAAQE,CAAAA,OAAZ,CAAoB,QAApB;AAA8B,KAA9B,CAAd,CAAN,CAEA,KAAM,CAAC,CAAA,CAAGpB,CAAqBqB,CAAAA,mBAAzB,EAA8CL,CAA9C,CAAmD,KAAnD,CAAN,CAJU,CAZK,CAxCkE,IACnFM,EAAQlB,CAAKkB,CAAAA,KADsE,CAEnFR,EAAMV,CAAKU,CAAAA,GAFwE,CAGnFD,EAAMT,CAAKS,CAAAA,GAHwE,CAInFD,EAASR,CAAKQ,CAAAA,MAJqE,CAKnFG,EAAWX,CAAKW,CAAAA,QA0BpB,OAAOO,EAAA,CAjCEpB,KAiCF,CAAY,CAEjB,iBAAkBG,CAFD,CAIjB,MAAOkB,QAAU,CAACC,CAAD,CAAO,CACtB,MAAOnB,EAAA,CAAKmB,CAAL,CADe,CAJP,CAAZ,CA/BgF,CAA1D,CA6D/B/B,EAAQI,CAAAA,SAAR,CAAoBA,CA7E0C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/statistics/mad.js\"],\n\"sourcesContent\":[\"shadow$provide[533] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createMad = void 0;\\n\\nvar _array = require(\\\"../../utils/array.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _improveErrorMessage = require(\\\"./utils/improveErrorMessage.js\\\");\\n\\nvar name = 'mad';\\nvar dependencies = ['typed', 'abs', 'map', 'median', 'subtract'];\\nvar createMad = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      abs = _ref.abs,\\n      map = _ref.map,\\n      median = _ref.median,\\n      subtract = _ref.subtract;\\n\\n  /**\\n   * Compute the median absolute deviation of a matrix or a list with values.\\n   * The median absolute deviation is defined as the median of the absolute\\n   * deviations from the median.\\n   *\\n   * Syntax:\\n   *\\n   *     math.mad(a, b, c, ...)\\n   *     math.mad(A)\\n   *\\n   * Examples:\\n   *\\n   *     math.mad(10, 20, 30)             // returns 10\\n   *     math.mad([1, 2, 3])              // returns 1\\n   *     math.mad([[1, 2, 3], [4, 5, 6]]) // returns 1.5\\n   *\\n   * See also:\\n   *\\n   *     median, mean, std, abs\\n   *\\n   * @param {Array | Matrix} array\\n   *                        A single matrix or multiple scalar values.\\n   * @return {*} The median absolute deviation.\\n   */\\n  return typed(name, {\\n    // mad([a, b, c, d, ...])\\n    'Array | Matrix': _mad,\\n    // mad(a, b, c, d, ...)\\n    '...': function _(args) {\\n      return _mad(args);\\n    }\\n  });\\n\\n  function _mad(array) {\\n    array = (0, _array.flatten)(array.valueOf());\\n\\n    if (array.length === 0) {\\n      throw new Error('Cannot calculate median absolute deviation (mad) of an empty array');\\n    }\\n\\n    try {\\n      var med = median(array);\\n      return median(map(array, function (value) {\\n        return abs(subtract(value, med));\\n      }));\\n    } catch (err) {\\n      if (err instanceof TypeError && err.message.indexOf('median') !== -1) {\\n        throw new TypeError(err.message.replace('median', 'mad'));\\n      } else {\\n        throw (0, _improveErrorMessage.improveErrorMessage)(err, 'mad');\\n      }\\n    }\\n  }\\n});\\nexports.createMad = createMad;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createMad\",\"_array\",\"_factory\",\"_improveErrorMessage\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_mad\",\"array\",\"flatten\",\"valueOf\",\"length\",\"Error\",\"med\",\"median\",\"map\",\"abs\",\"subtract\",\"err\",\"TypeError\",\"message\",\"indexOf\",\"replace\",\"improveErrorMessage\",\"typed\",\"_\",\"args\"]\n}\n"]