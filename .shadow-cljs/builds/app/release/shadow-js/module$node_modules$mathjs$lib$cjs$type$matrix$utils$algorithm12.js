["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm12.js"],"~:js","shadow$provide[96]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createAlgorithm12=void 0;c=b(25);c=(0,c.factory)(\"algorithm12\",[\"typed\",\"DenseMatrix\"],function(q){var f=q.typed,u=q.DenseMatrix;return function(k,t,p,g){var d=k._values,l=k._index,h=k._ptr,n=k._size,r=k._datatype;if(!d)throw Error(\"Cannot perform operation on Pattern Sparse Matrix and Scalar value\");k=n[0];n=n[1];var v=p;if(\"string\"===typeof r){var C=r;t=f.convert(t,C);v=f.find(p,[C,C])}p=[];r=[];for(var z=[],\nw=0;w<n;w++){for(var B=w+1,x=h[w+1],D=h[w];D<x;D++){var F=l[D];r[F]=d[D];z[F]=B}for(x=0;x<k;x++)0===w&&(p[x]=[]),p[x][w]=z[x]===B?g?v(t,r[x]):v(r[x],t):g?v(t,0):v(0,t)}return new u({data:p,size:[k,n],datatype:C})}});a.createAlgorithm12=c}","~:source","shadow$provide[96] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm12 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar name = 'algorithm12';\nvar dependencies = ['typed', 'DenseMatrix'];\nvar createAlgorithm12 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      DenseMatrix = _ref.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\n   * Callback function invoked MxN times.\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(0, b)    ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  return function algorithm12(s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\n\n    if (!avalues) {\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt; // convert b to the same datatype\n\n      b = typed.convert(b, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result arrays\n\n\n    var cdata = []; // workspaces\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns\n\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1; // values in j\n\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k]; // update workspace\n\n        x[r] = avalues[k];\n        w[r] = mark;\n      } // loop rows\n\n\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        } // check sparse matrix has a value @ i,j\n\n\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        } else {\n          // dense matrix value @ i, j\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);\n        }\n      }\n    } // return dense matrix\n\n\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm12 = createAlgorithm12;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["__esModule","value","createAlgorithm12","datatype","size","data"]],"~:compiled-at",1619135723781,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12.js\",\n\"lineCount\":2,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm12.js\"],\n\"sourcesContent\":[\"shadow$provide[96] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAlgorithm12 = void 0;\\n\\nvar _factory = require(\\\"../../../utils/factory.js\\\");\\n\\nvar name = 'algorithm12';\\nvar dependencies = ['typed', 'DenseMatrix'];\\nvar createAlgorithm12 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      DenseMatrix = _ref.DenseMatrix;\\n\\n  /**\\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b).\\n   * Callback function invoked MxN times.\\n   *\\n   *\\n   *          \\u250c  f(Sij, b)  ; S(i,j) !== 0\\n   * C(i,j) = \\u2524\\n   *          \\u2514  f(0, b)    ; otherwise\\n   *\\n   *\\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\\n   * @param {Scalar}   b                 The Scalar value\\n   * @param {Function} callback          The f(Aij,b) operation to invoke\\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\\n   *\\n   * @return {Matrix}                    DenseMatrix (C)\\n   *\\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\\n   */\\n  return function algorithm12(s, b, callback, inverse) {\\n    // sparse matrix arrays\\n    var avalues = s._values;\\n    var aindex = s._index;\\n    var aptr = s._ptr;\\n    var asize = s._size;\\n    var adt = s._datatype; // sparse matrix cannot be a Pattern matrix\\n\\n    if (!avalues) {\\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\\n    } // rows & columns\\n\\n\\n    var rows = asize[0];\\n    var columns = asize[1]; // datatype\\n\\n    var dt; // callback signature to use\\n\\n    var cf = callback; // process data types\\n\\n    if (typeof adt === 'string') {\\n      // datatype\\n      dt = adt; // convert b to the same datatype\\n\\n      b = typed.convert(b, dt); // callback\\n\\n      cf = typed.find(callback, [dt, dt]);\\n    } // result arrays\\n\\n\\n    var cdata = []; // workspaces\\n\\n    var x = []; // marks indicating we have a value in x for a given column\\n\\n    var w = []; // loop columns\\n\\n    for (var j = 0; j < columns; j++) {\\n      // columns mark\\n      var mark = j + 1; // values in j\\n\\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\\n        // row\\n        var r = aindex[k]; // update workspace\\n\\n        x[r] = avalues[k];\\n        w[r] = mark;\\n      } // loop rows\\n\\n\\n      for (var i = 0; i < rows; i++) {\\n        // initialize C on first column\\n        if (j === 0) {\\n          // create row array\\n          cdata[i] = [];\\n        } // check sparse matrix has a value @ i,j\\n\\n\\n        if (w[i] === mark) {\\n          // invoke callback, update C\\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\\n        } else {\\n          // dense matrix value @ i, j\\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);\\n        }\\n      }\\n    } // return dense matrix\\n\\n\\n    return new DenseMatrix({\\n      data: cdata,\\n      size: [rows, columns],\\n      datatype: dt\\n    });\\n  };\\n});\\nexports.createAlgorithm12 = createAlgorithm12;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAlgorithm12\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"DenseMatrix\",\"algorithm12\",\"s\",\"b\",\"callback\",\"inverse\",\"avalues\",\"_values\",\"aindex\",\"_index\",\"aptr\",\"_ptr\",\"asize\",\"_size\",\"adt\",\"_datatype\",\"Error\",\"rows\",\"columns\",\"cf\",\"dt\",\"convert\",\"find\",\"cdata\",\"x\",\"w\",\"j\",\"mark\",\"k1\",\"k\",\"k0\",\"r\",\"i\",\"data\",\"size\",\"datatype\"]\n}\n"]