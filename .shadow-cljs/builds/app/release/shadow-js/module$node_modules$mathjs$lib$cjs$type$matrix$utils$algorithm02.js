["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm02.js"],"~:js","shadow$provide[89]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createAlgorithm02=void 0;c=b(25);var q=b(22);b=(0,c.factory)(\"algorithm02\",[\"typed\",\"equalScalar\"],function(f){var u=f.typed,k=f.equalScalar;return function(t,p,g,d){var l=t._data,h=t._size,n=t._datatype;t=p._values;var r=p._index,v=p._ptr,C=p._size,z=p._datatype;if(h.length!==C.length)throw new q.DimensionError(h.length,C.length);if(h[0]!==C[0]||h[1]!==C[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+\nh+\") must match Matrix B (\"+C+\")\");if(!t)throw Error(\"Cannot perform operation on Dense Matrix and Pattern Sparse Matrix\");C=h[0];h=h[1];var w=k,B=0,x=g;if(\"string\"===typeof n&&n===z){var D=n;w=u.find(k,[D,D]);B=u.convert(0,D);x=u.find(g,[D,D])}g=[];n=[];z=[];for(var F=0;F<h;F++){z[F]=n.length;for(var E=v[F+1],G=v[F];G<E;G++){var I=r[G],L=d?x(t[G],l[I][F]):x(l[I][F],t[G]);w(L,B)||(n.push(I),g.push(L))}}z[h]=n.length;return p.createSparseMatrix({values:g,index:n,ptr:z,size:[C,h],datatype:D})}});a.createAlgorithm02=\nb}","~:source","shadow$provide[89] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm02 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm02';\nvar dependencies = ['typed', 'equalScalar'];\nvar createAlgorithm02 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  0            ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // datatype\n\n    var dt; // equal signature to use\n\n    var eq = equalScalar; // zero value\n\n    var zero = 0; // callback signature to use\n\n    var cf = callback; // process data types\n\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt; // find signature that matches (dt, dt)\n\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\n\n      zero = typed.convert(0, dt); // callback\n\n      cf = typed.find(callback, [dt, dt]);\n    } // result (SparseMatrix)\n\n\n    var cvalues = [];\n    var cindex = [];\n    var cptr = []; // loop columns in b\n\n    for (var j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k]; // update C(i,j)\n\n        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero\n\n        if (!eq(cij, zero)) {\n          // push i & v\n          cindex.push(i);\n          cvalues.push(cij);\n        }\n      }\n    } // update cptr\n\n\n    cptr[columns] = cindex.length; // return sparse matrix\n\n    return sparseMatrix.createSparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm02 = createAlgorithm02;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$error$DimensionError","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["values","createAlgorithm02","index","__esModule","value","datatype","size","ptr"]],"~:compiled-at",1619135723775,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm02.js\"],\n\"sourcesContent\":[\"shadow$provide[89] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAlgorithm02 = void 0;\\n\\nvar _factory = require(\\\"../../../utils/factory.js\\\");\\n\\nvar _DimensionError = require(\\\"../../../error/DimensionError.js\\\");\\n\\nvar name = 'algorithm02';\\nvar dependencies = ['typed', 'equalScalar'];\\nvar createAlgorithm02 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      equalScalar = _ref.equalScalar;\\n\\n  /**\\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\\n   *\\n   *\\n   *          \\u250c  f(Dij, Sij)  ; S(i,j) !== 0\\n   * C(i,j) = \\u2524\\n   *          \\u2514  0            ; otherwise\\n   *\\n   *\\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\\n   *\\n   * @return {Matrix}                    SparseMatrix (C)\\n   *\\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\\n   */\\n  return function algorithm02(denseMatrix, sparseMatrix, callback, inverse) {\\n    // dense matrix arrays\\n    var adata = denseMatrix._data;\\n    var asize = denseMatrix._size;\\n    var adt = denseMatrix._datatype; // sparse matrix arrays\\n\\n    var bvalues = sparseMatrix._values;\\n    var bindex = sparseMatrix._index;\\n    var bptr = sparseMatrix._ptr;\\n    var bsize = sparseMatrix._size;\\n    var bdt = sparseMatrix._datatype; // validate dimensions\\n\\n    if (asize.length !== bsize.length) {\\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\\n    } // check rows & columns\\n\\n\\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\\n    } // sparse matrix cannot be a Pattern matrix\\n\\n\\n    if (!bvalues) {\\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\\n    } // rows & columns\\n\\n\\n    var rows = asize[0];\\n    var columns = asize[1]; // datatype\\n\\n    var dt; // equal signature to use\\n\\n    var eq = equalScalar; // zero value\\n\\n    var zero = 0; // callback signature to use\\n\\n    var cf = callback; // process data types\\n\\n    if (typeof adt === 'string' && adt === bdt) {\\n      // datatype\\n      dt = adt; // find signature that matches (dt, dt)\\n\\n      eq = typed.find(equalScalar, [dt, dt]); // convert 0 to the same datatype\\n\\n      zero = typed.convert(0, dt); // callback\\n\\n      cf = typed.find(callback, [dt, dt]);\\n    } // result (SparseMatrix)\\n\\n\\n    var cvalues = [];\\n    var cindex = [];\\n    var cptr = []; // loop columns in b\\n\\n    for (var j = 0; j < columns; j++) {\\n      // update cptr\\n      cptr[j] = cindex.length; // values in column j\\n\\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\\n        // row\\n        var i = bindex[k]; // update C(i,j)\\n\\n        var cij = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // check for nonzero\\n\\n        if (!eq(cij, zero)) {\\n          // push i & v\\n          cindex.push(i);\\n          cvalues.push(cij);\\n        }\\n      }\\n    } // update cptr\\n\\n\\n    cptr[columns] = cindex.length; // return sparse matrix\\n\\n    return sparseMatrix.createSparseMatrix({\\n      values: cvalues,\\n      index: cindex,\\n      ptr: cptr,\\n      size: [rows, columns],\\n      datatype: dt\\n    });\\n  };\\n});\\nexports.createAlgorithm02 = createAlgorithm02;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAlgorithm02\",\"_factory\",\"_DimensionError\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"equalScalar\",\"algorithm02\",\"denseMatrix\",\"sparseMatrix\",\"callback\",\"inverse\",\"adata\",\"_data\",\"asize\",\"_size\",\"adt\",\"_datatype\",\"bvalues\",\"_values\",\"bindex\",\"_index\",\"bptr\",\"_ptr\",\"bsize\",\"bdt\",\"length\",\"DimensionError\",\"RangeError\",\"Error\",\"rows\",\"columns\",\"eq\",\"zero\",\"cf\",\"dt\",\"find\",\"convert\",\"cvalues\",\"cindex\",\"cptr\",\"j\",\"k1\",\"k\",\"k0\",\"i\",\"cij\",\"push\",\"createSparseMatrix\",\"values\",\"index\",\"ptr\",\"size\",\"datatype\"]\n}\n"]