["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/utils/customs.js"],"~:js","shadow$provide[147]=function(c,b,y,a){function q(d){\"@babel/helpers - typeof\";q=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(l){return typeof l}:function(l){return l&&\"function\"===typeof Symbol&&l.constructor===Symbol&&l!==Symbol.prototype?\"symbol\":typeof l};return q(d)}function f(d,l){return d&&\"object\"===q(d)?(0,t.hasOwnProperty)(p,l)?!0:l in Object.prototype||l in Function.prototype?!1:!0:!1}function u(d,l){return null===d||void 0===d||\"function\"!==typeof d[l]||(0,t.hasOwnProperty)(d,\nl)&&Object.getPrototypeOf&&l in Object.getPrototypeOf(d)?!1:(0,t.hasOwnProperty)(g,l)?!0:l in Object.prototype||l in Function.prototype?!1:!0}function k(d){return\"object\"===q(d)&&d&&d.constructor===Object}Object.defineProperty(a,\"__esModule\",{value:!0});a.getSafeProperty=function(d,l){if(k(d)&&f(d,l))return d[l];if(\"function\"===typeof d[l]&&u(d,l))throw Error('Cannot access method \"'+l+'\" as a property');throw Error('No access to property \"'+l+'\"');};a.setSafeProperty=function(d,l,h){if(k(d)&&f(d,\nl))return d[l]=h;throw Error('No access to property \"'+l+'\"');};a.isSafeProperty=f;a.validateSafeMethod=function(d,l){if(!u(d,l))throw Error('No access to method \"'+l+'\"');};a.isSafeMethod=u;a.isPlainObject=k;var t=b(15),p={length:!0,name:!0},g={toString:!0,valueOf:!0,toLocaleString:!0}}","~:source","shadow$provide[147] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSafeProperty = getSafeProperty;\nexports.setSafeProperty = setSafeProperty;\nexports.isSafeProperty = isSafeProperty;\nexports.validateSafeMethod = validateSafeMethod;\nexports.isSafeMethod = isSafeMethod;\nexports.isPlainObject = isPlainObject;\n\nvar _object = require(\"./object.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\nfunction getSafeProperty(object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\n\n\nfunction setSafeProperty(object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    object[prop] = value;\n    return value;\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\n\n\nfunction isSafeProperty(object, prop) {\n  if (!object || _typeof(object) !== 'object') {\n    return false;\n  } // SAFE: whitelisted\n  // e.g length\n\n\n  if ((0, _object.hasOwnProperty)(safeNativeProperties, prop)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\n\n\nfunction validateSafeMethod(object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\n\n\nfunction isSafeMethod(object, method) {\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\n    return false;\n  } // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n\n\n  if ((0, _object.hasOwnProperty)(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\n    return false;\n  } // SAFE: whitelisted\n  // e.g toString\n\n\n  if ((0, _object.hasOwnProperty)(safeNativeMethods, method)) {\n    return true;\n  } // UNSAFE: inherited from Object prototype\n  // e.g constructor\n\n\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  } // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n\n\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n\n  return true;\n}\n\nfunction isPlainObject(object) {\n  return _typeof(object) === 'object' && object && object.constructor === Object;\n}\n\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$object"]],"~:properties",["^5",["valueOf","toLocaleString","isSafeProperty","__esModule","toString","setSafeProperty","name","value","length","getSafeProperty","validateSafeMethod","isPlainObject","isSafeMethod"]],"~:compiled-at",1619135723888,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$utils$customs.js\",\n\"lineCount\":3,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/utils/customs.js\"],\n\"sourcesContent\":[\"shadow$provide[147] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getSafeProperty = getSafeProperty;\\nexports.setSafeProperty = setSafeProperty;\\nexports.isSafeProperty = isSafeProperty;\\nexports.validateSafeMethod = validateSafeMethod;\\nexports.isSafeMethod = isSafeMethod;\\nexports.isPlainObject = isPlainObject;\\n\\nvar _object = require(\\\"./object.js\\\");\\n\\nfunction _typeof(obj) { \\\"@babel/helpers - typeof\\\"; if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\n/**\\n * Get a property of a plain object\\n * Throws an error in case the object is not a plain object or the\\n * property is not defined on the object itself\\n * @param {Object} object\\n * @param {string} prop\\n * @return {*} Returns the property value when safe\\n */\\nfunction getSafeProperty(object, prop) {\\n  // only allow getting safe properties of a plain object\\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\\n    return object[prop];\\n  }\\n\\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\\n    throw new Error('Cannot access method \\\"' + prop + '\\\" as a property');\\n  }\\n\\n  throw new Error('No access to property \\\"' + prop + '\\\"');\\n}\\n/**\\n * Set a property on a plain object.\\n * Throws an error in case the object is not a plain object or the\\n * property would override an inherited property like .constructor or .toString\\n * @param {Object} object\\n * @param {string} prop\\n * @param {*} value\\n * @return {*} Returns the value\\n */\\n// TODO: merge this function into access.js?\\n\\n\\nfunction setSafeProperty(object, prop, value) {\\n  // only allow setting safe properties of a plain object\\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\\n    object[prop] = value;\\n    return value;\\n  }\\n\\n  throw new Error('No access to property \\\"' + prop + '\\\"');\\n}\\n/**\\n * Test whether a property is safe to use for an object.\\n * For example .toString and .constructor are not safe\\n * @param {string} prop\\n * @return {boolean} Returns true when safe\\n */\\n\\n\\nfunction isSafeProperty(object, prop) {\\n  if (!object || _typeof(object) !== 'object') {\\n    return false;\\n  } // SAFE: whitelisted\\n  // e.g length\\n\\n\\n  if ((0, _object.hasOwnProperty)(safeNativeProperties, prop)) {\\n    return true;\\n  } // UNSAFE: inherited from Object prototype\\n  // e.g constructor\\n\\n\\n  if (prop in Object.prototype) {\\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\\n    // which is inconsistent on root prototypes. It is safe\\n    // here because Object.prototype is a root object\\n    return false;\\n  } // UNSAFE: inherited from Function prototype\\n  // e.g call, apply\\n\\n\\n  if (prop in Function.prototype) {\\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\\n    // which is inconsistent on root prototypes. It is safe\\n    // here because Function.prototype is a root object\\n    return false;\\n  }\\n\\n  return true;\\n}\\n/**\\n * Validate whether a method is safe.\\n * Throws an error when that's not the case.\\n * @param {Object} object\\n * @param {string} method\\n */\\n// TODO: merge this function into assign.js?\\n\\n\\nfunction validateSafeMethod(object, method) {\\n  if (!isSafeMethod(object, method)) {\\n    throw new Error('No access to method \\\"' + method + '\\\"');\\n  }\\n}\\n/**\\n * Check whether a method is safe.\\n * Throws an error when that's not the case (for example for `constructor`).\\n * @param {Object} object\\n * @param {string} method\\n * @return {boolean} Returns true when safe, false otherwise\\n */\\n\\n\\nfunction isSafeMethod(object, method) {\\n  if (object === null || object === undefined || typeof object[method] !== 'function') {\\n    return false;\\n  } // UNSAFE: ghosted\\n  // e.g overridden toString\\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\\n\\n\\n  if ((0, _object.hasOwnProperty)(object, method) && Object.getPrototypeOf && method in Object.getPrototypeOf(object)) {\\n    return false;\\n  } // SAFE: whitelisted\\n  // e.g toString\\n\\n\\n  if ((0, _object.hasOwnProperty)(safeNativeMethods, method)) {\\n    return true;\\n  } // UNSAFE: inherited from Object prototype\\n  // e.g constructor\\n\\n\\n  if (method in Object.prototype) {\\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\\n    // which is inconsistent on root prototypes. It is safe\\n    // here because Object.prototype is a root object\\n    return false;\\n  } // UNSAFE: inherited from Function prototype\\n  // e.g call, apply\\n\\n\\n  if (method in Function.prototype) {\\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\\n    // which is inconsistent on root prototypes. It is safe\\n    // here because Function.prototype is a root object\\n    return false;\\n  }\\n\\n  return true;\\n}\\n\\nfunction isPlainObject(object) {\\n  return _typeof(object) === 'object' && object && object.constructor === Object;\\n}\\n\\nvar safeNativeProperties = {\\n  length: true,\\n  name: true\\n};\\nvar safeNativeMethods = {\\n  toString: true,\\n  valueOf: true,\\n  toLocaleString: true\\n};\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"isSafeProperty\",\"object\",\"prop\",\"_object\",\"hasOwnProperty\",\"safeNativeProperties\",\"Object\",\"Function\",\"isSafeMethod\",\"method\",\"undefined\",\"getPrototypeOf\",\"safeNativeMethods\",\"isPlainObject\",\"defineProperty\",\"value\",\"getSafeProperty\",\"Error\",\"setSafeProperty\",\"validateSafeMethod\",\"length\",\"name\",\"toString\",\"valueOf\",\"toLocaleString\"]\n}\n"]