["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/transform/subset.transform.js"],"~:js","shadow$provide[587]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createSubsetTransform=void 0;c=b(25);var q=b(250),f=b(148);b=(0,c.factory)(\"subset\",[\"typed\",\"matrix\"],function(u){var k=u.typed;u=u.matrix;var t=(0,f.createSubset)({typed:k,matrix:u});return k(\"subset\",{\"...any\":function(p){try{return t.apply(null,p)}catch(g){throw(0,q.errorTransform)(g);}}})},{isTransformFunction:!0});a.createSubsetTransform=b}","~:source","shadow$provide[587] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSubsetTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _subset = require(\"../../function/matrix/subset.js\");\n\nvar name = 'subset';\nvar dependencies = ['typed', 'matrix'];\nvar createSubsetTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n  var subset = (0, _subset.createSubset)({\n    typed: typed,\n    matrix: matrix\n  });\n  /**\n   * Attach a transform function to math.subset\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed('subset', {\n    '...any': function any(args) {\n      try {\n        return subset.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createSubsetTransform = createSubsetTransform;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$function$matrix$subset","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$errorTransform","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["typed","matrix","__esModule","isTransformFunction","value","createSubsetTransform"]],"~:compiled-at",1619135724043,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$transform$subset_transform.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,qBAAR,CAAgC,IAAK,EAEjCC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAEf,KAAIQ,EAAkBR,CAAA,CAAQ,GAAR,CAAtB,CAEIS,EAAUT,CAAA,CAAQ,GAAR,CAIVM,EAAAA,CAAuC,CAAC,CAAA,CAAGC,CAASG,CAAAA,OAAb,EAFhCC,QAEgC,CADxBC,CAAC,OAADA,CAAU,QAAVA,CACwB,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IAC/FC,EAAQD,CAAKC,CAAAA,KACbC,EAAAA,CAASF,CAAKE,CAAAA,MAClB,KAAIC,EAAS,CAAC,CAAA,CAAGP,CAAQQ,CAAAA,YAAZ,EAA0B,CACrCH,MAAOA,CAD8B,CAErCC,OAAQA,CAF6B,CAA1B,CAWb,OAAOD,EAAA,CAAM,QAAN,CAAgB,CACrB,SAAUI,QAAY,CAACC,CAAD,CAAO,CAC3B,GAAI,CACF,MAAOH,EAAOI,CAAAA,KAAP,CAAa,IAAb,CAAmBD,CAAnB,CADL,CAEF,MAAOE,CAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGb,CAAgBc,CAAAA,cAApB,EAAoCD,CAApC,CAAN,CADY,CAHa,CADR,CAAhB,CAd4F,CAA1D,CAuBxC,CACDE,oBAAqB,CAAA,CADpB,CAvBwC,CA0B3CrB,EAAQI,CAAAA,qBAAR,CAAgCA,CA1C8B;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/transform/subset.transform.js\"],\n\"sourcesContent\":[\"shadow$provide[587] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createSubsetTransform = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _errorTransform = require(\\\"./utils/errorTransform.js\\\");\\n\\nvar _subset = require(\\\"../../function/matrix/subset.js\\\");\\n\\nvar name = 'subset';\\nvar dependencies = ['typed', 'matrix'];\\nvar createSubsetTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix;\\n  var subset = (0, _subset.createSubset)({\\n    typed: typed,\\n    matrix: matrix\\n  });\\n  /**\\n   * Attach a transform function to math.subset\\n   * Adds a property transform containing the transform function.\\n   *\\n   * This transform creates a range which includes the end value\\n   */\\n\\n  return typed('subset', {\\n    '...any': function any(args) {\\n      try {\\n        return subset.apply(null, args);\\n      } catch (err) {\\n        throw (0, _errorTransform.errorTransform)(err);\\n      }\\n    }\\n  });\\n}, {\\n  isTransformFunction: true\\n});\\nexports.createSubsetTransform = createSubsetTransform;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createSubsetTransform\",\"_factory\",\"_errorTransform\",\"_subset\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"subset\",\"createSubset\",\"any\",\"args\",\"apply\",\"err\",\"errorTransform\",\"isTransformFunction\"]\n}\n"]