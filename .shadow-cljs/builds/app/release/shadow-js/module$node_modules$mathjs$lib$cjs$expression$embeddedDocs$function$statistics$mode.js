["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/statistics/mode.js"],"~:js","shadow$provide[344]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.modeDocs={name:\"mode\",category:\"Statistics\",syntax:[\"mode(a, b, c, ...)\",\"mode(A)\",\"mode(A, a, b, B, c, ...)\"],description:\"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.\",examples:[\"mode(2, 1, 4, 3, 1)\",\"mode([1, 2.7, 3.2, 4, 2.7])\",\"mode(1, 4, 6, 1, 6)\"],seealso:\"max mean min median prod std sum variance\".split(\" \")}}","~:source","shadow$provide[344] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.modeDocs = void 0;\nvar modeDocs = {\n  name: 'mode',\n  category: 'Statistics',\n  syntax: ['mode(a, b, c, ...)', 'mode(A)', 'mode(A, a, b, B, c, ...)'],\n  description: 'Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.',\n  examples: ['mode(2, 1, 4, 3, 1)', 'mode([1, 2.7, 3.2, 4, 2.7])', 'mode(1, 4, 6, 1, 6)'],\n  seealso: ['max', 'mean', 'min', 'median', 'prod', 'std', 'sum', 'variance']\n};\nexports.modeDocs = modeDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","__esModule","name","value","syntax","modeDocs","category","examples","description"]],"~:compiled-at",1619135723988,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$statistics$mode.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,EAAQI,CAAAA,QAAR,CAReA,CACbC,KAAM,MADOD,CAEbE,SAAU,YAFGF,CAGbG,OAAQ,CAAC,oBAAD,CAAuB,SAAvB,CAAkC,0BAAlC,CAHKH,CAIbI,YAAa,0HAJAJ,CAKbK,SAAU,CAAC,qBAAD,CAAwB,6BAAxB,CAAuD,qBAAvD,CALGL,CAMbM,QAAS,2CAAA,CAAA,KAAA,CAAA,GAAA,CANIN,CAP+C;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/statistics/mode.js\"],\n\"sourcesContent\":[\"shadow$provide[344] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.modeDocs = void 0;\\nvar modeDocs = {\\n  name: 'mode',\\n  category: 'Statistics',\\n  syntax: ['mode(a, b, c, ...)', 'mode(A)', 'mode(A, a, b, B, c, ...)'],\\n  description: 'Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.',\\n  examples: ['mode(2, 1, 4, 3, 1)', 'mode([1, 2.7, 3.2, 4, 2.7])', 'mode(1, 4, 6, 1, 6)'],\\n  seealso: ['max', 'mean', 'min', 'median', 'prod', 'std', 'sum', 'variance']\\n};\\nexports.modeDocs = modeDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"modeDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]