["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/algebra/sparse/csEtree.js"],"~:js","shadow$provide[281]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.csEtree=function(q,f){if(!q)return null;var u=q._index,k=q._ptr;q=q._size;var t=q[0];q=q[1];var p=[],g=[],d;if(f)for(d=0;d<t;d++)g[q+d]=-1;for(var l=0;l<q;l++){p[l]=-1;g[0+l]=-1;for(var h=k[l+1],n=k[l];n<h;n++){var r=u[n];for(d=f?g[q+r]:r;-1!==d&&d<l;d=t)t=g[0+d],g[0+d]=l,-1===t&&(p[d]=l);f&&(g[q+r]=l)}}return p}}","~:source","shadow$provide[281] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.csEtree = csEtree;\n\n/**\n * Computes the elimination tree of Matrix A (using triu(A)) or the\n * elimination tree of A'A without forming A'A.\n *\n * @param {Matrix}  a               The A Matrix\n * @param {boolean} ata             A value of true the function computes the etree of A'A\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csEtree(a, ata) {\n  // check inputs\n  if (!a) {\n    return null;\n  } // a arrays\n\n\n  var aindex = a._index;\n  var aptr = a._ptr;\n  var asize = a._size; // rows & columns\n\n  var m = asize[0];\n  var n = asize[1]; // allocate result\n\n  var parent = []; // (n)\n  // allocate workspace\n\n  var w = []; // (n + (ata ? m : 0))\n\n  var ancestor = 0; // first n entries in w\n\n  var prev = n; // last m entries (ata = true)\n\n  var i, inext; // check we are calculating A'A\n\n  if (ata) {\n    // initialize workspace\n    for (i = 0; i < m; i++) {\n      w[prev + i] = -1;\n    }\n  } // loop columns\n\n\n  for (var k = 0; k < n; k++) {\n    // node k has no parent yet\n    parent[k] = -1; // nor does k have an ancestor\n\n    w[ancestor + k] = -1; // values in column k\n\n    for (var p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {\n      // row\n      var r = aindex[p]; // node\n\n      i = ata ? w[prev + r] : r; // traverse from i to k\n\n      for (; i !== -1 && i < k; i = inext) {\n        // inext = ancestor of i\n        inext = w[ancestor + i]; // path compression\n\n        w[ancestor + i] = k; // check no anc., parent is k\n\n        if (inext === -1) {\n          parent[i] = k;\n        }\n      }\n\n      if (ata) {\n        w[prev + r] = k;\n      }\n    }\n  }\n\n  return parent;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["csEtree","__esModule","value"]],"~:compiled-at",1619135723976,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csEtree.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,OAAR,CAWAA,QAAgB,CAACC,CAAD,CAAIC,CAAJ,CAAS,CAEvB,GAAI,CAACD,CAAL,CACE,MAAO,KAIT,KAAIE,EAASF,CAAEG,CAAAA,MAAf,CACIC,EAAOJ,CAAEK,CAAAA,IACTC,EAAAA,CAAQN,CAAEO,CAAAA,KAEd,KAAIC,EAAIF,CAAA,CAAM,CAAN,CACJG,EAAAA,CAAIH,CAAA,CAAM,CAAN,CAER,KAAII,EAAS,EAAb,CAGIC,EAAI,EAHR,CASIC,CAEJ,IAAIX,CAAJ,CAEE,IAAKW,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBJ,CAAhB,CAAmBI,CAAA,EAAnB,CACED,CAAA,CAPOF,CAOP,CAASG,CAAT,CAAA,CAAc,EAKlB,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,CAApB,CAAuBI,CAAA,EAAvB,CAA4B,CAE1BH,CAAA,CAAOG,CAAP,CAAA,CAAY,EAEZF,EAAA,CAlBaG,CAkBb,CAAaD,CAAb,CAAA,CAAkB,EAElB,KAN0B,IAMHE,EAAKX,CAAA,CAAKS,CAAL,CAAS,CAAT,CANF,CAMeG,EAA3BZ,CAAAa,CAAKJ,CAALI,CAAd,CAAiDD,CAAjD,CAAqDD,CAArD,CAAyDC,CAAA,EAAzD,CAA8D,CAE5D,IAAIE,EAAIhB,CAAA,CAAOc,CAAP,CAIR,KAFAJ,CAEA,CAFIX,CAAA,CAAMU,CAAA,CAtBHF,CAsBG,CAASS,CAAT,CAAN,CAAoBA,CAExB,CAAa,EAAb,GAAON,CAAP,EAAmBA,CAAnB,CAAuBC,CAAvB,CAA0BD,CAA1B,CAA8BO,CAA9B,CAEEA,CAIA,CAJQR,CAAA,CA5BCG,CA4BD,CAAaF,CAAb,CAIR,CAFAD,CAAA,CA9BSG,CA8BT,CAAaF,CAAb,CAEA,CAFkBC,CAElB,CAAc,EAAd,GAAIM,CAAJ,GACET,CAAA,CAAOE,CAAP,CADF,CACcC,CADd,CAKEZ,EAAJ,GACEU,CAAA,CApCKF,CAoCL,CAASS,CAAT,CADF,CACgBL,CADhB,CAjB4D,CANpC,CA6B5B,MAAOH,EA9DgB,CAjBqC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/algebra/sparse/csEtree.js\"],\n\"sourcesContent\":[\"shadow$provide[281] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.csEtree = csEtree;\\n\\n/**\\n * Computes the elimination tree of Matrix A (using triu(A)) or the\\n * elimination tree of A'A without forming A'A.\\n *\\n * @param {Matrix}  a               The A Matrix\\n * @param {boolean} ata             A value of true the function computes the etree of A'A\\n *\\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\\n */\\nfunction csEtree(a, ata) {\\n  // check inputs\\n  if (!a) {\\n    return null;\\n  } // a arrays\\n\\n\\n  var aindex = a._index;\\n  var aptr = a._ptr;\\n  var asize = a._size; // rows & columns\\n\\n  var m = asize[0];\\n  var n = asize[1]; // allocate result\\n\\n  var parent = []; // (n)\\n  // allocate workspace\\n\\n  var w = []; // (n + (ata ? m : 0))\\n\\n  var ancestor = 0; // first n entries in w\\n\\n  var prev = n; // last m entries (ata = true)\\n\\n  var i, inext; // check we are calculating A'A\\n\\n  if (ata) {\\n    // initialize workspace\\n    for (i = 0; i < m; i++) {\\n      w[prev + i] = -1;\\n    }\\n  } // loop columns\\n\\n\\n  for (var k = 0; k < n; k++) {\\n    // node k has no parent yet\\n    parent[k] = -1; // nor does k have an ancestor\\n\\n    w[ancestor + k] = -1; // values in column k\\n\\n    for (var p0 = aptr[k], p1 = aptr[k + 1], p = p0; p < p1; p++) {\\n      // row\\n      var r = aindex[p]; // node\\n\\n      i = ata ? w[prev + r] : r; // traverse from i to k\\n\\n      for (; i !== -1 && i < k; i = inext) {\\n        // inext = ancestor of i\\n        inext = w[ancestor + i]; // path compression\\n\\n        w[ancestor + i] = k; // check no anc., parent is k\\n\\n        if (inext === -1) {\\n          parent[i] = k;\\n        }\\n      }\\n\\n      if (ata) {\\n        w[prev + r] = k;\\n      }\\n    }\\n  }\\n\\n  return parent;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"csEtree\",\"a\",\"ata\",\"aindex\",\"_index\",\"aptr\",\"_ptr\",\"asize\",\"_size\",\"m\",\"n\",\"parent\",\"w\",\"i\",\"k\",\"ancestor\",\"p1\",\"p\",\"p0\",\"r\",\"inext\"]\n}\n"]