["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/algebra/sparse/csUnflip.js"],"~:js","shadow$provide[290]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.csUnflip=function(f){return 0>f?(0,q.csFlip)(f):f};var q=b(283)}","~:source","shadow$provide[290] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.csUnflip = csUnflip;\n\nvar _csFlip = require(\"./csFlip.js\");\n\n/**\n * Flips the value if it is negative of returns the same value otherwise.\n *\n * @param {Number}  i               The value to flip\n *\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\n */\nfunction csUnflip(i) {\n  // flip the value if it is negative\n  return i < 0 ? (0, _csFlip.csFlip)(i) : i;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csFlip"]],"~:properties",["^5",["__esModule","csUnflip","value"]],"~:compiled-at",1619135723979,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$algebra$sparse$csUnflip.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,QAAR,CAWAA,QAAiB,CAACC,CAAD,CAAI,CAEnB,MAAW,EAAJ,CAAAA,CAAA,CAAQ,CAAC,CAAA,CAAGC,CAAQC,CAAAA,MAAZ,EAAoBF,CAApB,CAAR,CAAiCA,CAFrB,CATrB,KAAIC,EAAUR,CAAA,CAAQ,GAAR,CARgD;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/algebra/sparse/csUnflip.js\"],\n\"sourcesContent\":[\"shadow$provide[290] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.csUnflip = csUnflip;\\n\\nvar _csFlip = require(\\\"./csFlip.js\\\");\\n\\n/**\\n * Flips the value if it is negative of returns the same value otherwise.\\n *\\n * @param {Number}  i               The value to flip\\n *\\n * Reference: http://faculty.cse.tamu.edu/davis/publications.html\\n */\\nfunction csUnflip(i) {\\n  // flip the value if it is negative\\n  return i < 0 ? (0, _csFlip.csFlip)(i) : i;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"csUnflip\",\"i\",\"_csFlip\",\"csFlip\"]\n}\n"]