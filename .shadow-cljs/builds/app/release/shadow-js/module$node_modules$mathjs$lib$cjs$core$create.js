["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/core/create.js"],"~:js","shadow$provide[933]=function(c,b,y,a){function q(z){\"@babel/helpers - typeof\";q=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(w){return typeof w}:function(w){return w&&\"function\"===typeof Symbol&&w.constructor===Symbol&&w!==Symbol.prototype?\"symbol\":typeof w};return q(z)}function f(){if(\"function\"!==typeof WeakMap)return null;var z=new WeakMap;f=function(){return z};return z}function u(){u=Object.assign||function(z){for(var w=1;w<arguments.length;w++){var B=arguments[w],x;\nfor(x in B)Object.prototype.hasOwnProperty.call(B,x)&&(z[x]=B[x])}return z};return u.apply(this,arguments)}function k(z,w){function B(L){if((0,l.isFactory)(L))return L(D);var M=L[Object.keys(L)[0]];if((0,l.isFactory)(M))return M(D);if(!(0,t.isLegacyFactory)(L))throw console.warn(\"Factory object with properties `type`, `name`, and `factory` expected\",L),Error(\"Factory object with properties `type`, `name`, and `factory` expected\");M=F.indexOf(L);-1===M?(M=!0===L.math?L.factory(D.type,x,B,D.typed,D):\nL.factory(D.type,x,B,D.typed),F.push(L),E.push(M)):M=E[M];return M}var x=u({},C.DEFAULT_CONFIG,w);if(\"function\"!==typeof Object.create)throw Error(\"ES5 not supported by this JavaScript engine. Please load the es5-shim and es5-sham library for compatibility.\");var D=p.mixin({isNumber:h.isNumber,isComplex:h.isComplex,isBigNumber:h.isBigNumber,isFraction:h.isFraction,isUnit:h.isUnit,isString:h.isString,isArray:h.isArray,isMatrix:h.isMatrix,isCollection:h.isCollection,isDenseMatrix:h.isDenseMatrix,isSparseMatrix:h.isSparseMatrix,\nisRange:h.isRange,isIndex:h.isIndex,isBoolean:h.isBoolean,isResultSet:h.isResultSet,isHelp:h.isHelp,isFunction:h.isFunction,isDate:h.isDate,isRegExp:h.isRegExp,isObject:h.isObject,isNull:h.isNull,isUndefined:h.isUndefined,isAccessorNode:h.isAccessorNode,isArrayNode:h.isArrayNode,isAssignmentNode:h.isAssignmentNode,isBlockNode:h.isBlockNode,isConditionalNode:h.isConditionalNode,isConstantNode:h.isConstantNode,isFunctionAssignmentNode:h.isFunctionAssignmentNode,isFunctionNode:h.isFunctionNode,isIndexNode:h.isIndexNode,\nisNode:h.isNode,isObjectNode:h.isObjectNode,isOperatorNode:h.isOperatorNode,isParenthesisNode:h.isParenthesisNode,isRangeNode:h.isRangeNode,isSymbolNode:h.isSymbolNode,isChain:h.isChain});D.config=(0,d.configFactory)(x,D.emit);D.expression={transform:{},mathWithTransform:{config:D.config}};var F=[],E=[],G={},I=(0,g.importFactory)(function(){for(var L=arguments.length,M=Array(L),S=0;S<L;S++)M[S]=arguments[S];return D.typed.apply(D.typed,M)},B,D,G);D[\"import\"]=I;D.on(\"config\",function(){(0,t.values)(G).forEach(function(L){L&&\nL.meta&&L.meta.recreateOnConfigChange&&I(L,{override:!0})})});D.create=k.bind(null,z);D.factory=l.factory;D[\"import\"]((0,t.values)((0,t.deepFlatten)(z)));D.ArgumentsError=n.ArgumentsError;D.DimensionError=r.DimensionError;D.IndexError=v.IndexError;return D}Object.defineProperty(a,\"__esModule\",{value:!0});a.create=k;b(929);var t=b(15),p=function(z){if(z&&z.__esModule)return z;if(null===z||\"object\"!==q(z)&&\"function\"!==typeof z)return{\"default\":z};var w=f();if(w&&w.has(z))return w.get(z);var B={},x=\nObject.defineProperty&&Object.getOwnPropertyDescriptor,D;for(D in z)if(Object.prototype.hasOwnProperty.call(z,D)){var F=x?Object.getOwnPropertyDescriptor(z,D):null;F&&(F.get||F.set)?Object.defineProperty(B,D,F):B[D]=z[D]}B[\"default\"]=z;w&&w.set(z,B);return B}(b(931)),g=b(932),d=b(16),l=b(25),h=b(14),n=b(140),r=b(22),v=b(23),C=b(13)}","~:source","shadow$provide[933] = function(global,require,module,exports) {\n\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.create = create;\n\nrequire(\"./../utils/polyfills.js\");\n\nvar _object = require(\"../utils/object.js\");\n\nvar emitter = _interopRequireWildcard(require(\"./../utils/emitter.js\"));\n\nvar _import = require(\"./function/import.js\");\n\nvar _config = require(\"./function/config.js\");\n\nvar _factory = require(\"../utils/factory.js\");\n\nvar _is = require(\"../utils/is.js\");\n\nvar _ArgumentsError = require(\"../error/ArgumentsError.js\");\n\nvar _DimensionError = require(\"../error/DimensionError.js\");\n\nvar _IndexError = require(\"../error/IndexError.js\");\n\nvar _config2 = require(\"./config.js\");\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n/**\n * Create a mathjs instance from given factory functions and optionally config\n *\n * Usage:\n *\n *     const mathjs1 = create({ createAdd, createMultiply, ...})\n *     const config = { number: 'BigNumber' }\n *     const mathjs2 = create(all, config)\n *\n * @param {Object} [factories] An object with factory functions\n *                             The object can contain nested objects,\n *                             all nested objects will be flattened.\n * @param {Object} [config]    Available options:\n *                            {number} epsilon\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\nfunction create(factories, config) {\n  var configInternal = _extends({}, _config2.DEFAULT_CONFIG, config); // simple test for ES5 support\n\n\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\n  } // create the mathjs instance\n\n\n  var math = emitter.mixin({\n    // only here for backward compatibility for legacy factory functions\n    isNumber: _is.isNumber,\n    isComplex: _is.isComplex,\n    isBigNumber: _is.isBigNumber,\n    isFraction: _is.isFraction,\n    isUnit: _is.isUnit,\n    isString: _is.isString,\n    isArray: _is.isArray,\n    isMatrix: _is.isMatrix,\n    isCollection: _is.isCollection,\n    isDenseMatrix: _is.isDenseMatrix,\n    isSparseMatrix: _is.isSparseMatrix,\n    isRange: _is.isRange,\n    isIndex: _is.isIndex,\n    isBoolean: _is.isBoolean,\n    isResultSet: _is.isResultSet,\n    isHelp: _is.isHelp,\n    isFunction: _is.isFunction,\n    isDate: _is.isDate,\n    isRegExp: _is.isRegExp,\n    isObject: _is.isObject,\n    isNull: _is.isNull,\n    isUndefined: _is.isUndefined,\n    isAccessorNode: _is.isAccessorNode,\n    isArrayNode: _is.isArrayNode,\n    isAssignmentNode: _is.isAssignmentNode,\n    isBlockNode: _is.isBlockNode,\n    isConditionalNode: _is.isConditionalNode,\n    isConstantNode: _is.isConstantNode,\n    isFunctionAssignmentNode: _is.isFunctionAssignmentNode,\n    isFunctionNode: _is.isFunctionNode,\n    isIndexNode: _is.isIndexNode,\n    isNode: _is.isNode,\n    isObjectNode: _is.isObjectNode,\n    isOperatorNode: _is.isOperatorNode,\n    isParenthesisNode: _is.isParenthesisNode,\n    isRangeNode: _is.isRangeNode,\n    isSymbolNode: _is.isSymbolNode,\n    isChain: _is.isChain\n  }); // load config function and apply provided config\n\n  math.config = (0, _config.configFactory)(configInternal, math.emit);\n  math.expression = {\n    transform: {},\n    mathWithTransform: {\n      config: math.config\n    }\n  }; // cached factories and instances used by function load\n\n  var legacyFactories = [];\n  var legacyInstances = [];\n  /**\n   * Load a function or data type from a factory.\n   * If the function or data type already exists, the existing instance is\n   * returned.\n   * @param {Function} factory\n   * @returns {*}\n   */\n\n  function load(factory) {\n    if ((0, _factory.isFactory)(factory)) {\n      return factory(math);\n    }\n\n    var firstProperty = factory[Object.keys(factory)[0]];\n\n    if ((0, _factory.isFactory)(firstProperty)) {\n      return firstProperty(math);\n    }\n\n    if (!(0, _object.isLegacyFactory)(factory)) {\n      console.warn('Factory object with properties `type`, `name`, and `factory` expected', factory);\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n\n    var index = legacyFactories.indexOf(factory);\n    var instance;\n\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, configInternal, load, math.typed, math);\n      } else {\n        instance = factory.factory(math.type, configInternal, load, math.typed);\n      } // append to the cache\n\n\n      legacyFactories.push(factory);\n      legacyInstances.push(instance);\n    } else {\n      // already existing function, return the cached instance\n      instance = legacyInstances[index];\n    }\n\n    return instance;\n  }\n\n  var importedFactories = {}; // load the import function\n\n  function lazyTyped() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return math.typed.apply(math.typed, args);\n  }\n\n  var internalImport = (0, _import.importFactory)(lazyTyped, load, math, importedFactories);\n  math[\"import\"] = internalImport; // listen for changes in config, import all functions again when changed\n  // TODO: move this listener into the import function?\n\n  math.on('config', function () {\n    (0, _object.values)(importedFactories).forEach(function (factory) {\n      if (factory && factory.meta && factory.meta.recreateOnConfigChange) {\n        // FIXME: only re-create when the current instance is the same as was initially created\n        // FIXME: delete the functions/constants before importing them again?\n        internalImport(factory, {\n          override: true\n        });\n      }\n    });\n  }); // the create function exposed on the mathjs instance is bound to\n  // the factory functions passed before\n\n  math.create = create.bind(null, factories); // export factory function\n\n  math.factory = _factory.factory; // import the factory functions like createAdd as an array instead of object,\n  // else they will get a different naming (`createAdd` instead of `add`).\n\n  math[\"import\"]((0, _object.values)((0, _object.deepFlatten)(factories)));\n  math.ArgumentsError = _ArgumentsError.ArgumentsError;\n  math.DimensionError = _DimensionError.DimensionError;\n  math.IndexError = _IndexError.IndexError;\n  return math;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$core$config","~$module$node_modules$mathjs$lib$cjs$core$function$import","~$module$node_modules$mathjs$lib$cjs$error$DimensionError","~$module$node_modules$mathjs$lib$cjs$utils$emitter","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$core$function$config","~$module$node_modules$mathjs$lib$cjs$error$IndexError","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$error$ArgumentsError","~$module$node_modules$mathjs$lib$cjs$utils$object","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$utils$polyfills"]],"~:properties",["^5",["isIndex","isAssignmentNode","isFraction","override","isFunction","isNumber","isIndexNode","isSparseMatrix","isCollection","factory","isUndefined","isRangeNode","config","isNull","isFunctionAssignmentNode","isArray","isDenseMatrix","IndexError","isNode","ArgumentsError","isParenthesisNode","__esModule","isObjectNode","isSymbolNode","transform","isBlockNode","expression","isConstantNode","DimensionError","isArrayNode","isChain","isObject","value","isRange","isOperatorNode","isAccessorNode","mathWithTransform","isFunctionNode","isResultSet","isMatrix","isComplex","create","isConditionalNode","isRegExp","isUnit","isDate","isHelp","isBoolean","isString","isBigNumber"]],"~:compiled-at",1619135724114,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$core$create.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/core/create.js\"],\n\"sourcesContent\":[\"shadow$provide[933] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nfunction _typeof(obj) { \\\"@babel/helpers - typeof\\\"; if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof(obj); }\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.create = create;\\n\\nrequire(\\\"./../utils/polyfills.js\\\");\\n\\nvar _object = require(\\\"../utils/object.js\\\");\\n\\nvar emitter = _interopRequireWildcard(require(\\\"./../utils/emitter.js\\\"));\\n\\nvar _import = require(\\\"./function/import.js\\\");\\n\\nvar _config = require(\\\"./function/config.js\\\");\\n\\nvar _factory = require(\\\"../utils/factory.js\\\");\\n\\nvar _is = require(\\\"../utils/is.js\\\");\\n\\nvar _ArgumentsError = require(\\\"../error/ArgumentsError.js\\\");\\n\\nvar _DimensionError = require(\\\"../error/DimensionError.js\\\");\\n\\nvar _IndexError = require(\\\"../error/IndexError.js\\\");\\n\\nvar _config2 = require(\\\"./config.js\\\");\\n\\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \\\"function\\\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\\n\\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \\\"object\\\" && typeof obj !== \\\"function\\\") { return { \\\"default\\\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\\\"default\\\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\n/**\\n * Create a mathjs instance from given factory functions and optionally config\\n *\\n * Usage:\\n *\\n *     const mathjs1 = create({ createAdd, createMultiply, ...})\\n *     const config = { number: 'BigNumber' }\\n *     const mathjs2 = create(all, config)\\n *\\n * @param {Object} [factories] An object with factory functions\\n *                             The object can contain nested objects,\\n *                             all nested objects will be flattened.\\n * @param {Object} [config]    Available options:\\n *                            {number} epsilon\\n *                              Minimum relative difference between two\\n *                              compared values, used by all comparison functions.\\n *                            {string} matrix\\n *                              A string 'Matrix' (default) or 'Array'.\\n *                            {string} number\\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\\n *                            {number} precision\\n *                              The number of significant digits for BigNumbers.\\n *                              Not applicable for Numbers.\\n *                            {boolean} predictable\\n *                              Predictable output type of functions. When true,\\n *                              output type depends only on the input types. When\\n *                              false (default), output type can vary depending\\n *                              on input values. For example `math.sqrt(-4)`\\n *                              returns `complex('2i')` when predictable is false, and\\n *                              returns `NaN` when true.\\n *                            {string} randomSeed\\n *                              Random seed for seeded pseudo random number generator.\\n *                              Set to null to randomly seed.\\n * @returns {Object} Returns a bare-bone math.js instance containing\\n *                   functions:\\n *                   - `import` to add new functions\\n *                   - `config` to change configuration\\n *                   - `on`, `off`, `once`, `emit` for events\\n */\\nfunction create(factories, config) {\\n  var configInternal = _extends({}, _config2.DEFAULT_CONFIG, config); // simple test for ES5 support\\n\\n\\n  if (typeof Object.create !== 'function') {\\n    throw new Error('ES5 not supported by this JavaScript engine. ' + 'Please load the es5-shim and es5-sham library for compatibility.');\\n  } // create the mathjs instance\\n\\n\\n  var math = emitter.mixin({\\n    // only here for backward compatibility for legacy factory functions\\n    isNumber: _is.isNumber,\\n    isComplex: _is.isComplex,\\n    isBigNumber: _is.isBigNumber,\\n    isFraction: _is.isFraction,\\n    isUnit: _is.isUnit,\\n    isString: _is.isString,\\n    isArray: _is.isArray,\\n    isMatrix: _is.isMatrix,\\n    isCollection: _is.isCollection,\\n    isDenseMatrix: _is.isDenseMatrix,\\n    isSparseMatrix: _is.isSparseMatrix,\\n    isRange: _is.isRange,\\n    isIndex: _is.isIndex,\\n    isBoolean: _is.isBoolean,\\n    isResultSet: _is.isResultSet,\\n    isHelp: _is.isHelp,\\n    isFunction: _is.isFunction,\\n    isDate: _is.isDate,\\n    isRegExp: _is.isRegExp,\\n    isObject: _is.isObject,\\n    isNull: _is.isNull,\\n    isUndefined: _is.isUndefined,\\n    isAccessorNode: _is.isAccessorNode,\\n    isArrayNode: _is.isArrayNode,\\n    isAssignmentNode: _is.isAssignmentNode,\\n    isBlockNode: _is.isBlockNode,\\n    isConditionalNode: _is.isConditionalNode,\\n    isConstantNode: _is.isConstantNode,\\n    isFunctionAssignmentNode: _is.isFunctionAssignmentNode,\\n    isFunctionNode: _is.isFunctionNode,\\n    isIndexNode: _is.isIndexNode,\\n    isNode: _is.isNode,\\n    isObjectNode: _is.isObjectNode,\\n    isOperatorNode: _is.isOperatorNode,\\n    isParenthesisNode: _is.isParenthesisNode,\\n    isRangeNode: _is.isRangeNode,\\n    isSymbolNode: _is.isSymbolNode,\\n    isChain: _is.isChain\\n  }); // load config function and apply provided config\\n\\n  math.config = (0, _config.configFactory)(configInternal, math.emit);\\n  math.expression = {\\n    transform: {},\\n    mathWithTransform: {\\n      config: math.config\\n    }\\n  }; // cached factories and instances used by function load\\n\\n  var legacyFactories = [];\\n  var legacyInstances = [];\\n  /**\\n   * Load a function or data type from a factory.\\n   * If the function or data type already exists, the existing instance is\\n   * returned.\\n   * @param {Function} factory\\n   * @returns {*}\\n   */\\n\\n  function load(factory) {\\n    if ((0, _factory.isFactory)(factory)) {\\n      return factory(math);\\n    }\\n\\n    var firstProperty = factory[Object.keys(factory)[0]];\\n\\n    if ((0, _factory.isFactory)(firstProperty)) {\\n      return firstProperty(math);\\n    }\\n\\n    if (!(0, _object.isLegacyFactory)(factory)) {\\n      console.warn('Factory object with properties `type`, `name`, and `factory` expected', factory);\\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\\n    }\\n\\n    var index = legacyFactories.indexOf(factory);\\n    var instance;\\n\\n    if (index === -1) {\\n      // doesn't yet exist\\n      if (factory.math === true) {\\n        // pass with math namespace\\n        instance = factory.factory(math.type, configInternal, load, math.typed, math);\\n      } else {\\n        instance = factory.factory(math.type, configInternal, load, math.typed);\\n      } // append to the cache\\n\\n\\n      legacyFactories.push(factory);\\n      legacyInstances.push(instance);\\n    } else {\\n      // already existing function, return the cached instance\\n      instance = legacyInstances[index];\\n    }\\n\\n    return instance;\\n  }\\n\\n  var importedFactories = {}; // load the import function\\n\\n  function lazyTyped() {\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    return math.typed.apply(math.typed, args);\\n  }\\n\\n  var internalImport = (0, _import.importFactory)(lazyTyped, load, math, importedFactories);\\n  math[\\\"import\\\"] = internalImport; // listen for changes in config, import all functions again when changed\\n  // TODO: move this listener into the import function?\\n\\n  math.on('config', function () {\\n    (0, _object.values)(importedFactories).forEach(function (factory) {\\n      if (factory && factory.meta && factory.meta.recreateOnConfigChange) {\\n        // FIXME: only re-create when the current instance is the same as was initially created\\n        // FIXME: delete the functions/constants before importing them again?\\n        internalImport(factory, {\\n          override: true\\n        });\\n      }\\n    });\\n  }); // the create function exposed on the mathjs instance is bound to\\n  // the factory functions passed before\\n\\n  math.create = create.bind(null, factories); // export factory function\\n\\n  math.factory = _factory.factory; // import the factory functions like createAdd as an array instead of object,\\n  // else they will get a different naming (`createAdd` instead of `add`).\\n\\n  math[\\\"import\\\"]((0, _object.values)((0, _object.deepFlatten)(factories)));\\n  math.ArgumentsError = _ArgumentsError.ArgumentsError;\\n  math.DimensionError = _DimensionError.DimensionError;\\n  math.IndexError = _IndexError.IndexError;\\n  return math;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_typeof\",\"obj\",\"Symbol\",\"iterator\",\"constructor\",\"prototype\",\"_getRequireWildcardCache\",\"WeakMap\",\"cache\",\"_extends\",\"Object\",\"assign\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"hasOwnProperty\",\"call\",\"apply\",\"create\",\"factories\",\"config\",\"load\",\"factory\",\"_factory\",\"isFactory\",\"math\",\"firstProperty\",\"keys\",\"_object\",\"isLegacyFactory\",\"console\",\"warn\",\"Error\",\"index\",\"legacyFactories\",\"indexOf\",\"instance\",\"type\",\"configInternal\",\"typed\",\"push\",\"legacyInstances\",\"_config2\",\"DEFAULT_CONFIG\",\"emitter\",\"mixin\",\"isNumber\",\"_is\",\"isComplex\",\"isBigNumber\",\"isFraction\",\"isUnit\",\"isString\",\"isArray\",\"isMatrix\",\"isCollection\",\"isDenseMatrix\",\"isSparseMatrix\",\"isRange\",\"isIndex\",\"isBoolean\",\"isResultSet\",\"isHelp\",\"isFunction\",\"isDate\",\"isRegExp\",\"isObject\",\"isNull\",\"isUndefined\",\"isAccessorNode\",\"isArrayNode\",\"isAssignmentNode\",\"isBlockNode\",\"isConditionalNode\",\"isConstantNode\",\"isFunctionAssignmentNode\",\"isFunctionNode\",\"isIndexNode\",\"isNode\",\"isObjectNode\",\"isOperatorNode\",\"isParenthesisNode\",\"isRangeNode\",\"isSymbolNode\",\"isChain\",\"_config\",\"configFactory\",\"emit\",\"expression\",\"transform\",\"mathWithTransform\",\"importedFactories\",\"internalImport\",\"_import\",\"importFactory\",\"lazyTyped\",\"_len\",\"args\",\"Array\",\"_key\",\"on\",\"values\",\"forEach\",\"meta\",\"recreateOnConfigChange\",\"override\",\"bind\",\"deepFlatten\",\"ArgumentsError\",\"_ArgumentsError\",\"DimensionError\",\"_DimensionError\",\"IndexError\",\"_IndexError\",\"defineProperty\",\"value\",\"_interopRequireWildcard\",\"__esModule\",\"has\",\"get\",\"newObj\",\"hasPropertyDescriptor\",\"getOwnPropertyDescriptor\",\"desc\",\"set\"]\n}\n"]