["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/transform/diff.transform.js"],"~:js","shadow$provide[589]=function(c,b,y,a){Object.defineProperty(a,\"__esModule\",{value:!0});a.createDiffTransform=void 0;c=b(25);var q=b(250),f=b(135),u=b(581);b=(0,c.factory)(\"diff\",[\"typed\",\"matrix\",\"subtract\",\"number\",\"bignumber\"],function(k){var t=k.typed,p=k.matrix,g=k.subtract,d=k.number;k=k.bignumber;var l=(0,f.createDiff)({typed:t,matrix:p,subtract:g,number:d,bignumber:k});return t(\"diff\",{\"...any\":function(h){h=(0,u.lastDimToZeroBase)(h);try{return l.apply(null,h)}catch(n){throw(0,q.errorTransform)(n);\n}}})},{isTransformFunction:!0});a.createDiffTransform=b}","~:source","shadow$provide[589] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createDiffTransform = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _errorTransform = require(\"./utils/errorTransform.js\");\n\nvar _diff = require(\"../../function/matrix/diff.js\");\n\nvar _lastDimToZeroBase = require(\"./utils/lastDimToZeroBase.js\");\n\nvar name = 'diff';\nvar dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];\nvar createDiffTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      subtract = _ref.subtract,\n      number = _ref.number,\n      bignumber = _ref.bignumber;\n  var diff = (0, _diff.createDiff)({\n    typed: typed,\n    matrix: matrix,\n    subtract: subtract,\n    number: number,\n    bignumber: bignumber\n  });\n  /**\n   * Attach a transform function to math.diff\n   * Adds a property transform containing the transform function.\n   *\n   * This transform creates a range which includes the end value\n   */\n\n  return typed(name, {\n    '...any': function any(args) {\n      args = (0, _lastDimToZeroBase.lastDimToZeroBase)(args);\n\n      try {\n        return diff.apply(null, args);\n      } catch (err) {\n        throw (0, _errorTransform.errorTransform)(err);\n      }\n    }\n  });\n}, {\n  isTransformFunction: true\n});\nexports.createDiffTransform = createDiffTransform;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$function$matrix$diff","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$lastDimToZeroBase","~$module$node_modules$mathjs$lib$cjs$expression$transform$utils$errorTransform","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["createDiffTransform","typed","matrix","__esModule","isTransformFunction","value","subtract","number","bignumber"]],"~:compiled-at",1619135724044,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$transform$diff_transform.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAe,GAAf,CAAA,CAAsB,QAAQ,CAACC,CAAD,CAAQC,CAAR,CAAgBC,CAAhB,CAAuBC,CAAvB,CAAgC,CAG9DC,MAAOC,CAAAA,cAAP,CAAsBF,CAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,EAAQI,CAAAA,mBAAR,CAA8B,IAAK,EAE/BC,EAAAA,CAAWP,CAAA,CAAQ,EAAR,CAEf,KAAIQ,EAAkBR,CAAA,CAAQ,GAAR,CAAtB,CAEIS,EAAQT,CAAA,CAAQ,GAAR,CAFZ,CAIIU,EAAqBV,CAAA,CAAQ,GAAR,CAIrBM,EAAAA,CAAqC,CAAC,CAAA,CAAGC,CAASI,CAAAA,OAAb,EAF9BC,MAE8B,CADtBC,CAAC,OAADA,CAAU,QAAVA,CAAoB,UAApBA,CAAgC,QAAhCA,CAA0C,WAA1CA,CACsB,CAA0C,QAAS,CAACC,CAAD,CAAO,CAAA,IAC7FC,EAAQD,CAAKC,CAAAA,KADgF,CAE7FC,EAASF,CAAKE,CAAAA,MAF+E,CAG7FC,EAAWH,CAAKG,CAAAA,QAH6E,CAI7FC,EAASJ,CAAKI,CAAAA,MACdC,EAAAA,CAAYL,CAAKK,CAAAA,SACrB,KAAIC,EAAO,CAAC,CAAA,CAAGX,CAAMY,CAAAA,UAAV,EAAsB,CAC/BN,MAAOA,CADwB,CAE/BC,OAAQA,CAFuB,CAG/BC,SAAUA,CAHqB,CAI/BC,OAAQA,CAJuB,CAK/BC,UAAWA,CALoB,CAAtB,CAcX,OAAOJ,EAAA,CAtBEH,MAsBF,CAAY,CACjB,SAAUU,QAAY,CAACC,CAAD,CAAO,CAC3BA,CAAA,CAAO,CAAC,CAAA,CAAGb,CAAmBc,CAAAA,iBAAvB,EAA0CD,CAA1C,CAEP,IAAI,CACF,MAAOH,EAAKK,CAAAA,KAAL,CAAW,IAAX,CAAiBF,CAAjB,CADL,CAEF,MAAOG,CAAP,CAAY,CACZ,KAAM,CAAC,CAAA,CAAGlB,CAAgBmB,CAAAA,cAApB,EAAoCD,CAApC,CAAN;AADY,CALa,CADZ,CAAZ,CApB0F,CAA1D,CA+BtC,CACDE,oBAAqB,CAAA,CADpB,CA/BsC,CAkCzC1B,EAAQI,CAAAA,mBAAR,CAA8BA,CApDgC;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/transform/diff.transform.js\"],\n\"sourcesContent\":[\"shadow$provide[589] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createDiffTransform = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _errorTransform = require(\\\"./utils/errorTransform.js\\\");\\n\\nvar _diff = require(\\\"../../function/matrix/diff.js\\\");\\n\\nvar _lastDimToZeroBase = require(\\\"./utils/lastDimToZeroBase.js\\\");\\n\\nvar name = 'diff';\\nvar dependencies = ['typed', 'matrix', 'subtract', 'number', 'bignumber'];\\nvar createDiffTransform = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      subtract = _ref.subtract,\\n      number = _ref.number,\\n      bignumber = _ref.bignumber;\\n  var diff = (0, _diff.createDiff)({\\n    typed: typed,\\n    matrix: matrix,\\n    subtract: subtract,\\n    number: number,\\n    bignumber: bignumber\\n  });\\n  /**\\n   * Attach a transform function to math.diff\\n   * Adds a property transform containing the transform function.\\n   *\\n   * This transform creates a range which includes the end value\\n   */\\n\\n  return typed(name, {\\n    '...any': function any(args) {\\n      args = (0, _lastDimToZeroBase.lastDimToZeroBase)(args);\\n\\n      try {\\n        return diff.apply(null, args);\\n      } catch (err) {\\n        throw (0, _errorTransform.errorTransform)(err);\\n      }\\n    }\\n  });\\n}, {\\n  isTransformFunction: true\\n});\\nexports.createDiffTransform = createDiffTransform;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createDiffTransform\",\"_factory\",\"_errorTransform\",\"_diff\",\"_lastDimToZeroBase\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"subtract\",\"number\",\"bignumber\",\"diff\",\"createDiff\",\"any\",\"args\",\"lastDimToZeroBase\",\"apply\",\"err\",\"errorTransform\",\"isTransformFunction\"]\n}\n"]