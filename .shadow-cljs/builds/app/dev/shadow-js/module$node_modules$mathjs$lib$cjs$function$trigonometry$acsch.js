["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/trigonometry/acsch.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$function$trigonometry$acsch=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createAcsch=void 0;global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");var _collection=require(\"module$node_modules$mathjs$lib$cjs$utils$collection\"),_index=require(\"module$node_modules$mathjs$lib$cjs$plain$number$index\");require=(0,global.factory)(\"acsch\",[\"typed\",\"BigNumber\"],function(_ref){var typed=_ref.typed,\n_BigNumber=_ref.BigNumber;return typed(\"acsch\",{number:_index.acschNumber,Complex:function(x){return x.acsch()},BigNumber:function(x){return(new _BigNumber(1)).div(x).asinh()},\"Array | Matrix\":function(x){return(0,_collection.deepMap)(x,this)}})});exports.createAcsch=require}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$trigonometry$acsch\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAcsch = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'acsch';\nvar dependencies = ['typed', 'BigNumber'];\nvar createAcsch = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      _BigNumber = _ref.BigNumber;\n\n  /**\n   * Calculate the hyperbolic arccosecant of a value,\n   * defined as `acsch(x) = asinh(1/x) = ln(1/x + sqrt(1/x^2 + 1))`.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acsch(x)\n   *\n   * Examples:\n   *\n   *    math.acsch(0.5)       // returns 1.4436354751788103\n   *\n   * See also:\n   *\n   *    asech, acoth\n   *\n   * @param {number | Complex | Array | Matrix} x  Function input\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosecant of x\n   */\n  return typed(name, {\n    number: _index.acschNumber,\n    Complex: function Complex(x) {\n      return x.acsch();\n    },\n    BigNumber: function BigNumber(x) {\n      return new _BigNumber(1).div(x).asinh();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    }\n  });\n});\nexports.createAcsch = createAcsch;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$plain$number$index","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["Complex","__esModule","value","createAcsch","number","BigNumber"]],"~:compiled-at",1619135262315,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$trigonometry$acsch.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,8DAAA,CAAmF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,WAAR,CAAsB,IAAK,EAEvBC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,YAAcR,OAAA,CAAQ,qDAAR,CAAlB,CAEIS,OAAST,OAAA,CAAQ,uDAAR,CAITM,QAAAA,CAA6B,CAAC,CAAA,CAAGC,MAASG,CAAAA,OAAb,EAFtBC,OAEsB,CADdC,CAAC,OAADA,CAAU,WAAVA,CACc,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IACrFC,MAAQD,IAAKC,CAAAA,KADwE;AAErFC,WAAaF,IAAKG,CAAAA,SAuBtB,OAAOF,MAAA,CA3BEH,OA2BF,CAAY,CACjBM,OAAQR,MAAOS,CAAAA,WADE,CAEjBC,QAASA,QAAgB,CAACC,CAAD,CAAI,CAC3B,MAAOA,EAAEC,CAAAA,KAAF,EADoB,CAFZ,CAKjBL,UAAWA,QAAkB,CAACI,CAAD,CAAI,CAC/B,MAAyBE,CAAlB,IAAIP,UAAJ,CAAe,CAAf,CAAkBO,EAAAA,GAAlB,CAAsBF,CAAtB,CAAyBG,CAAAA,KAAzB,EADwB,CALhB,CAQjB,iBAAkBC,QAAoB,CAACJ,CAAD,CAAI,CACxC,MAAO,CAAC,CAAA,CAAGZ,WAAYiB,CAAAA,OAAhB,EAAyBL,CAAzB,CAA4B,IAA5B,CADiC,CARzB,CAAZ,CAzBkF,CAA1D,CAsCjClB,QAAQI,CAAAA,WAAR,CAAsBA,OAtDqG;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/trigonometry/acsch.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$function$trigonometry$acsch\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAcsch = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../../utils/collection.js\\\");\\n\\nvar _index = require(\\\"../../plain/number/index.js\\\");\\n\\nvar name = 'acsch';\\nvar dependencies = ['typed', 'BigNumber'];\\nvar createAcsch = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      _BigNumber = _ref.BigNumber;\\n\\n  /**\\n   * Calculate the hyperbolic arccosecant of a value,\\n   * defined as `acsch(x) = asinh(1/x) = ln(1/x + sqrt(1/x^2 + 1))`.\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.acsch(x)\\n   *\\n   * Examples:\\n   *\\n   *    math.acsch(0.5)       // returns 1.4436354751788103\\n   *\\n   * See also:\\n   *\\n   *    asech, acoth\\n   *\\n   * @param {number | Complex | Array | Matrix} x  Function input\\n   * @return {number | Complex | Array | Matrix} Hyperbolic arccosecant of x\\n   */\\n  return typed(name, {\\n    number: _index.acschNumber,\\n    Complex: function Complex(x) {\\n      return x.acsch();\\n    },\\n    BigNumber: function BigNumber(x) {\\n      return new _BigNumber(1).div(x).asinh();\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      return (0, _collection.deepMap)(x, this);\\n    }\\n  });\\n});\\nexports.createAcsch = createAcsch;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAcsch\",\"_factory\",\"_collection\",\"_index\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"_BigNumber\",\"BigNumber\",\"number\",\"acschNumber\",\"Complex\",\"x\",\"acsch\",\"div\",\"asinh\",\"ArrayMatrix\",\"deepMap\"]\n}\n"]