["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/arithmetic/mod.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$function$arithmetic$mod=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createMod=void 0;global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");var _algorithm=require(\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02\"),_algorithm2=require(\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03\"),_algorithm3=require(\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm05\"),\n_algorithm4=require(\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11\"),_algorithm5=require(\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12\"),_algorithm6=require(\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13\"),_algorithm7=require(\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14\"),_index=require(\"module$node_modules$mathjs$lib$cjs$plain$number$index\");require=(0,global.factory)(\"mod\",[\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\"],\nfunction(_ref){var typed=_ref.typed,matrix=_ref.matrix,equalScalar=_ref.equalScalar;_ref=_ref.DenseMatrix;var algorithm02=(0,_algorithm.createAlgorithm02)({typed:typed,equalScalar:equalScalar}),algorithm03=(0,_algorithm2.createAlgorithm03)({typed:typed}),algorithm05=(0,_algorithm3.createAlgorithm05)({typed:typed,equalScalar:equalScalar}),algorithm11=(0,_algorithm4.createAlgorithm11)({typed:typed,equalScalar:equalScalar}),algorithm12=(0,_algorithm5.createAlgorithm12)({typed:typed,DenseMatrix:_ref}),\nalgorithm13=(0,_algorithm6.createAlgorithm13)({typed:typed}),algorithm14=(0,_algorithm7.createAlgorithm14)({typed:typed});return typed(\"mod\",{\"number, number\":_index.modNumber,\"BigNumber, BigNumber\":function(x,y){if(y.isNeg())throw Error(\"Cannot calculate mod for a negative divisor\");return y.isZero()?x:x.mod(y)},\"Fraction, Fraction\":function(x,y){if(0>y.compare(0))throw Error(\"Cannot calculate mod for a negative divisor\");return 0<=x.compare(0)?x.mod(y):x.mod(y).add(y).mod(y)},\"SparseMatrix, SparseMatrix\":function(x,\ny){return algorithm05(x,y,this,!1)},\"SparseMatrix, DenseMatrix\":function(x,y){return algorithm02(y,x,this,!0)},\"DenseMatrix, SparseMatrix\":function(x,y){return algorithm03(x,y,this,!1)},\"DenseMatrix, DenseMatrix\":function(x,y){return algorithm13(x,y,this)},\"Array, Array\":function(x,y){return this(matrix(x),matrix(y)).valueOf()},\"Array, Matrix\":function(x,y){return this(matrix(x),y)},\"Matrix, Array\":function(x,y){return this(x,matrix(y))},\"SparseMatrix, any\":function(x,y){return algorithm11(x,y,this,\n!1)},\"DenseMatrix, any\":function(x,y){return algorithm14(x,y,this,!1)},\"any, SparseMatrix\":function(x,y){return algorithm12(y,x,this,!0)},\"any, DenseMatrix\":function(x,y){return algorithm14(y,x,this,!0)},\"Array, any\":function(x,y){return algorithm14(matrix(x),y,this,!1).valueOf()},\"any, Array\":function(x,y){return algorithm14(matrix(y),x,this,!0).valueOf()}})});exports.createMod=require}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$arithmetic$mod\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMod = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _algorithm = require(\"../../type/matrix/utils/algorithm02.js\");\n\nvar _algorithm2 = require(\"../../type/matrix/utils/algorithm03.js\");\n\nvar _algorithm3 = require(\"../../type/matrix/utils/algorithm05.js\");\n\nvar _algorithm4 = require(\"../../type/matrix/utils/algorithm11.js\");\n\nvar _algorithm5 = require(\"../../type/matrix/utils/algorithm12.js\");\n\nvar _algorithm6 = require(\"../../type/matrix/utils/algorithm13.js\");\n\nvar _algorithm7 = require(\"../../type/matrix/utils/algorithm14.js\");\n\nvar _index = require(\"../../plain/number/index.js\");\n\nvar name = 'mod';\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\nvar createMod = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix,\n      equalScalar = _ref.equalScalar,\n      DenseMatrix = _ref.DenseMatrix;\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\n    typed: typed\n  });\n  var algorithm05 = (0, _algorithm3.createAlgorithm05)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\n    typed: typed,\n    equalScalar: equalScalar\n  });\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\n    typed: typed,\n    DenseMatrix: DenseMatrix\n  });\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\n    typed: typed\n  });\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\n    typed: typed\n  });\n  /**\n   * Calculates the modulus, the remainder of an integer division.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * The modulus is defined as:\n   *\n   *     x - y * floor(x / y)\n   *\n   * See https://en.wikipedia.org/wiki/Modulo_operation.\n   *\n   * Syntax:\n   *\n   *    math.mod(x, y)\n   *\n   * Examples:\n   *\n   *    math.mod(8, 3)                // returns 2\n   *    math.mod(11, 2)               // returns 1\n   *\n   *    function isOdd(x) {\n   *      return math.mod(x, 2) != 0\n   *    }\n   *\n   *    isOdd(2)                      // returns false\n   *    isOdd(3)                      // returns true\n   *\n   * See also:\n   *\n   *    divide\n   *\n   * @param  {number | BigNumber | Fraction | Array | Matrix} x Dividend\n   * @param  {number | BigNumber | Fraction | Array | Matrix} y Divisor\n   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the remainder of `x` divided by `y`.\n   */\n\n  return typed(name, {\n    'number, number': _index.modNumber,\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\n      if (y.isNeg()) {\n        throw new Error('Cannot calculate mod for a negative divisor');\n      }\n\n      return y.isZero() ? x : x.mod(y);\n    },\n    'Fraction, Fraction': function FractionFraction(x, y) {\n      if (y.compare(0) < 0) {\n        throw new Error('Cannot calculate mod for a negative divisor');\n      } // Workaround suggested in Fraction.js library to calculate correct modulo for negative dividend\n\n\n      return x.compare(0) >= 0 ? x.mod(y) : x.mod(y).add(y).mod(y);\n    },\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\n      return algorithm05(x, y, this, false);\n    },\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\n      return algorithm02(y, x, this, true);\n    },\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\n      return algorithm03(x, y, this, false);\n    },\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\n      return algorithm13(x, y, this);\n    },\n    'Array, Array': function ArrayArray(x, y) {\n      // use matrix implementation\n      return this(matrix(x), matrix(y)).valueOf();\n    },\n    'Array, Matrix': function ArrayMatrix(x, y) {\n      // use matrix implementation\n      return this(matrix(x), y);\n    },\n    'Matrix, Array': function MatrixArray(x, y) {\n      // use matrix implementation\n      return this(x, matrix(y));\n    },\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\n      return algorithm11(x, y, this, false);\n    },\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\n      return algorithm14(x, y, this, false);\n    },\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\n      return algorithm12(y, x, this, true);\n    },\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\n      return algorithm14(y, x, this, true);\n    },\n    'Array, any': function ArrayAny(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, this, false).valueOf();\n    },\n    'any, Array': function anyArray(x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, this, true).valueOf();\n    }\n  });\n});\nexports.createMod = createMod;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm14","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm12","~$module$node_modules$mathjs$lib$cjs$plain$number$index","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm02","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm05","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm11","~$module$node_modules$mathjs$lib$cjs$utils$factory","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm13","~$module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm03"]],"~:properties",["^5",["typed","DenseMatrix","__esModule","createMod","value","equalScalar"]],"~:compiled-at",1619135262185,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$arithmetic$mod.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/arithmetic/mod.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$function$arithmetic$mod\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createMod = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _algorithm = require(\\\"../../type/matrix/utils/algorithm02.js\\\");\\n\\nvar _algorithm2 = require(\\\"../../type/matrix/utils/algorithm03.js\\\");\\n\\nvar _algorithm3 = require(\\\"../../type/matrix/utils/algorithm05.js\\\");\\n\\nvar _algorithm4 = require(\\\"../../type/matrix/utils/algorithm11.js\\\");\\n\\nvar _algorithm5 = require(\\\"../../type/matrix/utils/algorithm12.js\\\");\\n\\nvar _algorithm6 = require(\\\"../../type/matrix/utils/algorithm13.js\\\");\\n\\nvar _algorithm7 = require(\\\"../../type/matrix/utils/algorithm14.js\\\");\\n\\nvar _index = require(\\\"../../plain/number/index.js\\\");\\n\\nvar name = 'mod';\\nvar dependencies = ['typed', 'matrix', 'equalScalar', 'DenseMatrix'];\\nvar createMod = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix,\\n      equalScalar = _ref.equalScalar,\\n      DenseMatrix = _ref.DenseMatrix;\\n  var algorithm02 = (0, _algorithm.createAlgorithm02)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm03 = (0, _algorithm2.createAlgorithm03)({\\n    typed: typed\\n  });\\n  var algorithm05 = (0, _algorithm3.createAlgorithm05)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm11 = (0, _algorithm4.createAlgorithm11)({\\n    typed: typed,\\n    equalScalar: equalScalar\\n  });\\n  var algorithm12 = (0, _algorithm5.createAlgorithm12)({\\n    typed: typed,\\n    DenseMatrix: DenseMatrix\\n  });\\n  var algorithm13 = (0, _algorithm6.createAlgorithm13)({\\n    typed: typed\\n  });\\n  var algorithm14 = (0, _algorithm7.createAlgorithm14)({\\n    typed: typed\\n  });\\n  /**\\n   * Calculates the modulus, the remainder of an integer division.\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * The modulus is defined as:\\n   *\\n   *     x - y * floor(x / y)\\n   *\\n   * See https://en.wikipedia.org/wiki/Modulo_operation.\\n   *\\n   * Syntax:\\n   *\\n   *    math.mod(x, y)\\n   *\\n   * Examples:\\n   *\\n   *    math.mod(8, 3)                // returns 2\\n   *    math.mod(11, 2)               // returns 1\\n   *\\n   *    function isOdd(x) {\\n   *      return math.mod(x, 2) != 0\\n   *    }\\n   *\\n   *    isOdd(2)                      // returns false\\n   *    isOdd(3)                      // returns true\\n   *\\n   * See also:\\n   *\\n   *    divide\\n   *\\n   * @param  {number | BigNumber | Fraction | Array | Matrix} x Dividend\\n   * @param  {number | BigNumber | Fraction | Array | Matrix} y Divisor\\n   * @return {number | BigNumber | Fraction | Array | Matrix} Returns the remainder of `x` divided by `y`.\\n   */\\n\\n  return typed(name, {\\n    'number, number': _index.modNumber,\\n    'BigNumber, BigNumber': function BigNumberBigNumber(x, y) {\\n      if (y.isNeg()) {\\n        throw new Error('Cannot calculate mod for a negative divisor');\\n      }\\n\\n      return y.isZero() ? x : x.mod(y);\\n    },\\n    'Fraction, Fraction': function FractionFraction(x, y) {\\n      if (y.compare(0) < 0) {\\n        throw new Error('Cannot calculate mod for a negative divisor');\\n      } // Workaround suggested in Fraction.js library to calculate correct modulo for negative dividend\\n\\n\\n      return x.compare(0) >= 0 ? x.mod(y) : x.mod(y).add(y).mod(y);\\n    },\\n    'SparseMatrix, SparseMatrix': function SparseMatrixSparseMatrix(x, y) {\\n      return algorithm05(x, y, this, false);\\n    },\\n    'SparseMatrix, DenseMatrix': function SparseMatrixDenseMatrix(x, y) {\\n      return algorithm02(y, x, this, true);\\n    },\\n    'DenseMatrix, SparseMatrix': function DenseMatrixSparseMatrix(x, y) {\\n      return algorithm03(x, y, this, false);\\n    },\\n    'DenseMatrix, DenseMatrix': function DenseMatrixDenseMatrix(x, y) {\\n      return algorithm13(x, y, this);\\n    },\\n    'Array, Array': function ArrayArray(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), matrix(y)).valueOf();\\n    },\\n    'Array, Matrix': function ArrayMatrix(x, y) {\\n      // use matrix implementation\\n      return this(matrix(x), y);\\n    },\\n    'Matrix, Array': function MatrixArray(x, y) {\\n      // use matrix implementation\\n      return this(x, matrix(y));\\n    },\\n    'SparseMatrix, any': function SparseMatrixAny(x, y) {\\n      return algorithm11(x, y, this, false);\\n    },\\n    'DenseMatrix, any': function DenseMatrixAny(x, y) {\\n      return algorithm14(x, y, this, false);\\n    },\\n    'any, SparseMatrix': function anySparseMatrix(x, y) {\\n      return algorithm12(y, x, this, true);\\n    },\\n    'any, DenseMatrix': function anyDenseMatrix(x, y) {\\n      return algorithm14(y, x, this, true);\\n    },\\n    'Array, any': function ArrayAny(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(x), y, this, false).valueOf();\\n    },\\n    'any, Array': function anyArray(x, y) {\\n      // use matrix implementation\\n      return algorithm14(matrix(y), x, this, true).valueOf();\\n    }\\n  });\\n});\\nexports.createMod = createMod;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createMod\",\"_factory\",\"_algorithm\",\"_algorithm2\",\"_algorithm3\",\"_algorithm4\",\"_algorithm5\",\"_algorithm6\",\"_algorithm7\",\"_index\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"equalScalar\",\"DenseMatrix\",\"algorithm02\",\"createAlgorithm02\",\"algorithm03\",\"createAlgorithm03\",\"algorithm05\",\"createAlgorithm05\",\"algorithm11\",\"createAlgorithm11\",\"algorithm12\",\"createAlgorithm12\",\"algorithm13\",\"createAlgorithm13\",\"algorithm14\",\"createAlgorithm14\",\"modNumber\",\"BigNumberBigNumber\",\"x\",\"y\",\"isNeg\",\"Error\",\"isZero\",\"mod\",\"FractionFraction\",\"compare\",\"add\",\"SparseMatrixSparseMatrix\",\"SparseMatrixDenseMatrix\",\"DenseMatrixSparseMatrix\",\"DenseMatrixDenseMatrix\",\"ArrayArray\",\"valueOf\",\"ArrayMatrix\",\"MatrixArray\",\"SparseMatrixAny\",\"DenseMatrixAny\",\"anySparseMatrix\",\"anyDenseMatrix\",\"ArrayAny\",\"anyArray\"]\n}\n"]