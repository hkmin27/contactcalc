["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/trigonometry/acos.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$function$trigonometry$acos=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createAcos=void 0;global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");var _collection=require(\"module$node_modules$mathjs$lib$cjs$utils$collection\");require=(0,global.factory)(\"acos\",[\"typed\",\"config\",\"Complex\"],function(_ref){var typed=_ref.typed,config=_ref.config,Complex=_ref.Complex;return typed(\"acos\",\n{number:function(x){return-1<=x&&1>=x||config.predictable?Math.acos(x):(new Complex(x,0)).acos()},Complex:function(x){return x.acos()},BigNumber:function(x){return x.acos()},\"Array | Matrix\":function(x){return(0,_collection.deepMap)(x,this)}})});exports.createAcos=require}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$trigonometry$acos\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAcos = void 0;\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _collection = require(\"../../utils/collection.js\");\n\nvar name = 'acos';\nvar dependencies = ['typed', 'config', 'Complex'];\nvar createAcos = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      Complex = _ref.Complex;\n\n  /**\n   * Calculate the inverse cosine of a value.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.acos(x)\n   *\n   * Examples:\n   *\n   *    math.acos(0.5)           // returns number 1.0471975511965979\n   *    math.acos(math.cos(1.5)) // returns number 1.5\n   *\n   *    math.acos(2)             // returns Complex 0 + 1.3169578969248166 i\n   *\n   * See also:\n   *\n   *    cos, atan, asin\n   *\n   * @param {number | BigNumber | Complex | Array | Matrix} x  Function input\n   * @return {number | BigNumber | Complex | Array | Matrix} The arc cosine of x\n   */\n  return typed(name, {\n    number: function number(x) {\n      if (x >= -1 && x <= 1 || config.predictable) {\n        return Math.acos(x);\n      } else {\n        return new Complex(x, 0).acos();\n      }\n    },\n    Complex: function Complex(x) {\n      return x.acos();\n    },\n    BigNumber: function BigNumber(x) {\n      return x.acos();\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    }\n  });\n});\nexports.createAcos = createAcos;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["Complex","__esModule","createAcos","value","number","BigNumber"]],"~:compiled-at",1619135262313,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$trigonometry$acos.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,6DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAEtBC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,YAAcR,OAAA,CAAQ,qDAAR,CAIdM,QAAAA,CAA4B,CAAC,CAAA,CAAGC,MAASE,CAAAA,OAAb,EAFrBC,MAEqB,CADbC,CAAC,OAADA,CAAU,QAAVA,CAAoB,SAApBA,CACa,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IACpFC,MAAQD,IAAKC,CAAAA,KADuE,CAEpFC,OAASF,IAAKE,CAAAA,MAFsE,CAGpFC,QAAUH,IAAKG,CAAAA,OAyBnB,OAAOF,MAAA,CA9BEH,MA8BF;AAAY,CACjBM,OAAQA,QAAe,CAACC,CAAD,CAAI,CACzB,MAAS,EAAT,EAAIA,CAAJ,EAAoB,CAApB,EAAeA,CAAf,EAAyBH,MAAOI,CAAAA,WAAhC,CACSC,IAAKC,CAAAA,IAAL,CAAUH,CAAV,CADT,CAG2BG,CAAlB,IAAIL,OAAJ,CAAYE,CAAZ,CAAe,CAAf,CAAkBG,EAAAA,IAAlB,EAJgB,CADV,CAQjBL,QAASA,QAAgB,CAACE,CAAD,CAAI,CAC3B,MAAOA,EAAEG,CAAAA,IAAF,EADoB,CARZ,CAWjBC,UAAWA,QAAkB,CAACJ,CAAD,CAAI,CAC/B,MAAOA,EAAEG,CAAAA,IAAF,EADwB,CAXhB,CAcjB,iBAAkBE,QAAoB,CAACL,CAAD,CAAI,CACxC,MAAO,CAAC,CAAA,CAAGT,WAAYe,CAAAA,OAAhB,EAAyBN,CAAzB,CAA4B,IAA5B,CADiC,CAdzB,CAAZ,CA5BiF,CAA1D,CA+ChCf,QAAQI,CAAAA,UAAR,CAAqBA,OA7DqG;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/trigonometry/acos.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$function$trigonometry$acos\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAcos = void 0;\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../../utils/collection.js\\\");\\n\\nvar name = 'acos';\\nvar dependencies = ['typed', 'config', 'Complex'];\\nvar createAcos = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      config = _ref.config,\\n      Complex = _ref.Complex;\\n\\n  /**\\n   * Calculate the inverse cosine of a value.\\n   *\\n   * For matrices, the function is evaluated element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.acos(x)\\n   *\\n   * Examples:\\n   *\\n   *    math.acos(0.5)           // returns number 1.0471975511965979\\n   *    math.acos(math.cos(1.5)) // returns number 1.5\\n   *\\n   *    math.acos(2)             // returns Complex 0 + 1.3169578969248166 i\\n   *\\n   * See also:\\n   *\\n   *    cos, atan, asin\\n   *\\n   * @param {number | BigNumber | Complex | Array | Matrix} x  Function input\\n   * @return {number | BigNumber | Complex | Array | Matrix} The arc cosine of x\\n   */\\n  return typed(name, {\\n    number: function number(x) {\\n      if (x >= -1 && x <= 1 || config.predictable) {\\n        return Math.acos(x);\\n      } else {\\n        return new Complex(x, 0).acos();\\n      }\\n    },\\n    Complex: function Complex(x) {\\n      return x.acos();\\n    },\\n    BigNumber: function BigNumber(x) {\\n      return x.acos();\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      return (0, _collection.deepMap)(x, this);\\n    }\\n  });\\n});\\nexports.createAcos = createAcos;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAcos\",\"_factory\",\"_collection\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"config\",\"Complex\",\"number\",\"x\",\"predictable\",\"Math\",\"acos\",\"BigNumber\",\"ArrayMatrix\",\"deepMap\"]\n}\n"]