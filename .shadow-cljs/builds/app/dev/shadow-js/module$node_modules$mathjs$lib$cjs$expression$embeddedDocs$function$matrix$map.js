["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/map.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$map=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.mapDocs={name:\"map\",category:\"Matrix\",syntax:[\"map(x, callback)\"],description:\"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.\",examples:[\"map([1, 2, 3], square)\"],seealso:[\"filter\",\"forEach\"]}}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$map\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapDocs = void 0;\nvar mapDocs = {\n  name: 'map',\n  category: 'Matrix',\n  syntax: ['map(x, callback)'],\n  description: 'Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.',\n  examples: ['map([1, 2, 3], square)'],\n  seealso: ['filter', 'forEach']\n};\nexports.mapDocs = mapDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["seealso","__esModule","name","value","mapDocs","syntax","category","examples","description"]],"~:compiled-at",1619135262436,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$map.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,8EAAA,CAAmG,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3IC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,OAAR,CARcA,CACZC,KAAM,KADMD,CAEZE,SAAU,QAFEF,CAGZG,OAAQ,CAAC,kBAAD,CAHIH,CAIZI,YAAa,oHAJDJ,CAKZK,SAAU,CAAC,wBAAD,CALEL,CAMZM,QAAS,CAAC,QAAD,CAAW,SAAX,CANGN,CAP6H;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/matrix/map.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$matrix$map\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.mapDocs = void 0;\\nvar mapDocs = {\\n  name: 'map',\\n  category: 'Matrix',\\n  syntax: ['map(x, callback)'],\\n  description: 'Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.',\\n  examples: ['map([1, 2, 3], square)'],\\n  seealso: ['filter', 'forEach']\\n};\\nexports.mapDocs = mapDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"mapDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]