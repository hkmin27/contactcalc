["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm01.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createAlgorithm01=void 0;global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");var _DimensionError=require(\"module$node_modules$mathjs$lib$cjs$error$DimensionError\");require=(0,global.factory)(\"algorithm01\",[\"typed\"],function(_ref){var typed=_ref.typed;return function(denseMatrix,sparseMatrix,callback,inverse){var adata=\ndenseMatrix._data,asize=denseMatrix._size,adt=denseMatrix._datatype,bvalues=sparseMatrix._values,bindex=sparseMatrix._index,bptr=sparseMatrix._ptr,bsize=sparseMatrix._size;sparseMatrix=sparseMatrix._datatype;if(asize.length!==bsize.length)throw new _DimensionError.DimensionError(asize.length,bsize.length);if(asize[0]!==bsize[0]||asize[1]!==bsize[1])throw new RangeError(\"Dimension mismatch. Matrix A (\"+asize+\") must match Matrix B (\"+bsize+\")\");if(!bvalues)throw Error(\"Cannot perform operation on Dense Matrix and Pattern Sparse Matrix\");\nbsize=asize[0];asize=asize[1];callback=(adt=\"string\"===typeof adt&&adt===sparseMatrix?adt:void 0)?typed.find(callback,[adt,adt]):callback;var j,cdata=[];for(sparseMatrix=0;sparseMatrix<bsize;sparseMatrix++)cdata[sparseMatrix]=[];var x=[],w=[];for(j=0;j<asize;j++){for(var mark=j+1,k1=bptr[j+1],k=bptr[j];k<k1;k++)sparseMatrix=bindex[k],x[sparseMatrix]=inverse?callback(bvalues[k],adata[sparseMatrix][j]):callback(adata[sparseMatrix][j],bvalues[k]),w[sparseMatrix]=mark;for(sparseMatrix=0;sparseMatrix<\nbsize;sparseMatrix++)cdata[sparseMatrix][j]=w[sparseMatrix]===mark?x[sparseMatrix]:adata[sparseMatrix][j]}return denseMatrix.createDenseMatrix({data:cdata,size:[bsize,asize],datatype:adt})}});exports.createAlgorithm01=require}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAlgorithm01 = void 0;\n\nvar _factory = require(\"../../../utils/factory.js\");\n\nvar _DimensionError = require(\"../../../error/DimensionError.js\");\n\nvar name = 'algorithm01';\nvar dependencies = ['typed'];\nvar createAlgorithm01 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype; // sparse matrix arrays\n\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype; // validate dimensions\n\n    if (asize.length !== bsize.length) {\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\n    } // check rows & columns\n\n\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n    } // sparse matrix cannot be a Pattern matrix\n\n\n    if (!bvalues) {\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n    } // rows & columns\n\n\n    var rows = asize[0];\n    var columns = asize[1]; // process data types\n\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function\n\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars\n\n    var i, j; // result (DenseMatrix)\n\n    var cdata = []; // initialize c\n\n    for (i = 0; i < rows; i++) {\n      cdata[i] = [];\n    } // workspace\n\n\n    var x = []; // marks indicating we have a value in x for a given column\n\n    var w = []; // loop columns in b\n\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1; // values in column j\n\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k]; // update workspace\n\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated\n\n        w[i] = mark;\n      } // loop rows\n\n\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        } else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    } // return dense matrix\n\n\n    return denseMatrix.createDenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n});\nexports.createAlgorithm01 = createAlgorithm01;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$error$DimensionError","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["createAlgorithm01","__esModule","value","datatype","size","data"]],"~:compiled-at",1619135262177,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/matrix/utils/algorithm01.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$type$matrix$utils$algorithm01\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createAlgorithm01 = void 0;\\n\\nvar _factory = require(\\\"../../../utils/factory.js\\\");\\n\\nvar _DimensionError = require(\\\"../../../error/DimensionError.js\\\");\\n\\nvar name = 'algorithm01';\\nvar dependencies = ['typed'];\\nvar createAlgorithm01 = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed;\\n\\n  /**\\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij).\\n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\\n   *\\n   *\\n   *          \\u250c  f(Dij, Sij)  ; S(i,j) !== 0\\n   * C(i,j) = \\u2524\\n   *          \\u2514  Dij          ; otherwise\\n   *\\n   *\\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\\n   *\\n   * @return {Matrix}                    DenseMatrix (C)\\n   *\\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\\n   */\\n  return function algorithm1(denseMatrix, sparseMatrix, callback, inverse) {\\n    // dense matrix arrays\\n    var adata = denseMatrix._data;\\n    var asize = denseMatrix._size;\\n    var adt = denseMatrix._datatype; // sparse matrix arrays\\n\\n    var bvalues = sparseMatrix._values;\\n    var bindex = sparseMatrix._index;\\n    var bptr = sparseMatrix._ptr;\\n    var bsize = sparseMatrix._size;\\n    var bdt = sparseMatrix._datatype; // validate dimensions\\n\\n    if (asize.length !== bsize.length) {\\n      throw new _DimensionError.DimensionError(asize.length, bsize.length);\\n    } // check rows & columns\\n\\n\\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1]) {\\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\\n    } // sparse matrix cannot be a Pattern matrix\\n\\n\\n    if (!bvalues) {\\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\\n    } // rows & columns\\n\\n\\n    var rows = asize[0];\\n    var columns = asize[1]; // process data types\\n\\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined; // callback function\\n\\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback; // vars\\n\\n    var i, j; // result (DenseMatrix)\\n\\n    var cdata = []; // initialize c\\n\\n    for (i = 0; i < rows; i++) {\\n      cdata[i] = [];\\n    } // workspace\\n\\n\\n    var x = []; // marks indicating we have a value in x for a given column\\n\\n    var w = []; // loop columns in b\\n\\n    for (j = 0; j < columns; j++) {\\n      // column mark\\n      var mark = j + 1; // values in column j\\n\\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\\n        // row\\n        i = bindex[k]; // update workspace\\n\\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]); // mark i as updated\\n\\n        w[i] = mark;\\n      } // loop rows\\n\\n\\n      for (i = 0; i < rows; i++) {\\n        // check row is in workspace\\n        if (w[i] === mark) {\\n          // c[i][j] was already calculated\\n          cdata[i][j] = x[i];\\n        } else {\\n          // item does not exist in S\\n          cdata[i][j] = adata[i][j];\\n        }\\n      }\\n    } // return dense matrix\\n\\n\\n    return denseMatrix.createDenseMatrix({\\n      data: cdata,\\n      size: [rows, columns],\\n      datatype: dt\\n    });\\n  };\\n});\\nexports.createAlgorithm01 = createAlgorithm01;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createAlgorithm01\",\"_factory\",\"_DimensionError\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"algorithm1\",\"denseMatrix\",\"sparseMatrix\",\"callback\",\"inverse\",\"adata\",\"_data\",\"asize\",\"_size\",\"adt\",\"_datatype\",\"bvalues\",\"_values\",\"bindex\",\"_index\",\"bptr\",\"_ptr\",\"bsize\",\"bdt\",\"length\",\"DimensionError\",\"RangeError\",\"Error\",\"rows\",\"columns\",\"cf\",\"dt\",\"undefined\",\"find\",\"j\",\"cdata\",\"i\",\"x\",\"w\",\"mark\",\"k1\",\"k\",\"k0\",\"createDenseMatrix\",\"data\",\"size\",\"datatype\"]\n}\n"]