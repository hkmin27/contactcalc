["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setMultiplicity.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setMultiplicity=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.setMultiplicityDocs={name:\"setMultiplicity\",category:\"Set\",syntax:[\"setMultiplicity(element, set)\"],description:\"Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.\",examples:[\"setMultiplicity(1, [1, 2, 2, 4])\",\n\"setMultiplicity(2, [1, 2, 2, 4])\"],seealso:[\"setDistinct\",\"setSize\"]}}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setMultiplicity\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setMultiplicityDocs = void 0;\nvar setMultiplicityDocs = {\n  name: 'setMultiplicity',\n  category: 'Set',\n  syntax: ['setMultiplicity(element, set)'],\n  description: 'Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',\n  examples: ['setMultiplicity(1, [1, 2, 2, 4])', 'setMultiplicity(2, [1, 2, 2, 4])'],\n  seealso: ['setDistinct', 'setSize']\n};\nexports.setMultiplicityDocs = setMultiplicityDocs;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["setMultiplicityDocs","seealso","__esModule","name","value","syntax","category","examples","description"]],"~:compiled-at",1619135262419,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setMultiplicity.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uFAAA,CAA4G,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpJC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAYAH,QAAQI,CAAAA,mBAAR,CAR0BA,CACxBC,KAAM,iBADkBD,CAExBE,SAAU,KAFcF,CAGxBG,OAAQ,CAAC,+BAAD,CAHgBH,CAIxBI,YAAa,iJAJWJ,CAKxBK,SAAU,CAAC,kCAAD;AAAqC,kCAArC,CALcL,CAMxBM,QAAS,CAAC,aAAD,CAAgB,SAAhB,CANeN,CAP0H;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/expression/embeddedDocs/function/set/setMultiplicity.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$expression$embeddedDocs$function$set$setMultiplicity\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.setMultiplicityDocs = void 0;\\nvar setMultiplicityDocs = {\\n  name: 'setMultiplicity',\\n  category: 'Set',\\n  syntax: ['setMultiplicity(element, set)'],\\n  description: 'Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.',\\n  examples: ['setMultiplicity(1, [1, 2, 2, 4])', 'setMultiplicity(2, [1, 2, 2, 4])'],\\n  seealso: ['setDistinct', 'setSize']\\n};\\nexports.setMultiplicityDocs = setMultiplicityDocs;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"setMultiplicityDocs\",\"name\",\"category\",\"syntax\",\"description\",\"examples\",\"seealso\"]\n}\n"]