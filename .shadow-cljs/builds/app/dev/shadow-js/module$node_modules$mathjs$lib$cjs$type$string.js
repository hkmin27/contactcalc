["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/type/string.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$type$string=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createString=void 0;global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");var _collection=require(\"module$node_modules$mathjs$lib$cjs$utils$collection\"),_number=require(\"module$node_modules$mathjs$lib$cjs$utils$number\");require=(0,global.factory)(\"string\",[\"typed\"],function(_ref){_ref=_ref.typed;return _ref(\"string\",{\"\":function(){return\"\"},\nnumber:_number.format,\"null\":function(x){return\"null\"},\"boolean\":function(x){return x+\"\"},string:function(x){return x},\"Array | Matrix\":function(x){return(0,_collection.deepMap)(x,this)},any:function(x){return String(x)}})});exports.createString=require}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$type$string\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createString = void 0;\n\nvar _factory = require(\"../utils/factory.js\");\n\nvar _collection = require(\"../utils/collection.js\");\n\nvar _number = require(\"../utils/number.js\");\n\nvar name = 'string';\nvar dependencies = ['typed'];\nvar createString = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed;\n\n  /**\n   * Create a string or convert any object into a string.\n   * Elements of Arrays and Matrices are processed element wise.\n   *\n   * Syntax:\n   *\n   *    math.string(value)\n   *\n   * Examples:\n   *\n   *    math.string(4.2)               // returns string '4.2'\n   *    math.string(math.complex(3, 2) // returns string '3 + 2i'\n   *\n   *    const u = math.unit(5, 'km')\n   *    math.string(u.to('m'))         // returns string '5000 m'\n   *\n   *    math.string([true, false])     // returns ['true', 'false']\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, number, unit\n   *\n   * @param {* | Array | Matrix | null} [value]  A value to convert to a string\n   * @return {string | Array | Matrix} The created string\n   */\n  return typed(name, {\n    '': function _() {\n      return '';\n    },\n    number: _number.format,\n    \"null\": function _null(x) {\n      return 'null';\n    },\n    \"boolean\": function boolean(x) {\n      return x + '';\n    },\n    string: function string(x) {\n      return x;\n    },\n    'Array | Matrix': function ArrayMatrix(x) {\n      return (0, _collection.deepMap)(x, this);\n    },\n    any: function any(x) {\n      return String(x);\n    }\n  });\n});\nexports.createString = createString;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$number","~$module$node_modules$mathjs$lib$cjs$utils$collection","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["string","createString","__esModule","any","value","number"]],"~:compiled-at",1619135262162,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$type$string.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,8CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG3GC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,YAAR,CAAuB,IAAK,EAExBC,OAAAA,CAAWP,OAAA,CAAQ,kDAAR,CAEf,KAAIQ,YAAcR,OAAA,CAAQ,qDAAR,CAAlB,CAEIS,QAAUT,OAAA,CAAQ,iDAAR,CAIVM,QAAAA,CAA8B,CAAC,CAAA,CAAGC,MAASG,CAAAA,OAAb,EAFvBC,QAEuB,CADfC,CAAC,OAADA,CACe,CAA0C,QAAS,CAACC,IAAD,CAAO,CACtFC,IAAAA,CAAQD,IAAKC,CAAAA,KA2BjB,OAAOA,KAAA,CA9BEH,QA8BF,CAAY,CACjB,GAAII,QAAU,EAAG,CACf,MAAO,EADQ,CADA;AAIjBC,OAAQP,OAAQQ,CAAAA,MAJC,CAKjB,OAAQC,QAAc,CAACC,CAAD,CAAI,CACxB,MAAO,MADiB,CALT,CAQjB,UAAWC,QAAgB,CAACD,CAAD,CAAI,CAC7B,MAAOA,EAAP,CAAW,EADkB,CARd,CAWjBE,OAAQA,QAAe,CAACF,CAAD,CAAI,CACzB,MAAOA,EADkB,CAXV,CAcjB,iBAAkBG,QAAoB,CAACH,CAAD,CAAI,CACxC,MAAO,CAAC,CAAA,CAAGX,WAAYe,CAAAA,OAAhB,EAAyBJ,CAAzB,CAA4B,IAA5B,CADiC,CAdzB,CAiBjBK,IAAKA,QAAY,CAACL,CAAD,CAAI,CACnB,MAAOM,OAAA,CAAON,CAAP,CADY,CAjBJ,CAAZ,CA5BmF,CAA1D,CAkDlCjB,QAAQI,CAAAA,YAAR,CAAuBA,OAlEoF;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/type/string.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$type$string\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createString = void 0;\\n\\nvar _factory = require(\\\"../utils/factory.js\\\");\\n\\nvar _collection = require(\\\"../utils/collection.js\\\");\\n\\nvar _number = require(\\\"../utils/number.js\\\");\\n\\nvar name = 'string';\\nvar dependencies = ['typed'];\\nvar createString = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed;\\n\\n  /**\\n   * Create a string or convert any object into a string.\\n   * Elements of Arrays and Matrices are processed element wise.\\n   *\\n   * Syntax:\\n   *\\n   *    math.string(value)\\n   *\\n   * Examples:\\n   *\\n   *    math.string(4.2)               // returns string '4.2'\\n   *    math.string(math.complex(3, 2) // returns string '3 + 2i'\\n   *\\n   *    const u = math.unit(5, 'km')\\n   *    math.string(u.to('m'))         // returns string '5000 m'\\n   *\\n   *    math.string([true, false])     // returns ['true', 'false']\\n   *\\n   * See also:\\n   *\\n   *    bignumber, boolean, complex, index, matrix, number, unit\\n   *\\n   * @param {* | Array | Matrix | null} [value]  A value to convert to a string\\n   * @return {string | Array | Matrix} The created string\\n   */\\n  return typed(name, {\\n    '': function _() {\\n      return '';\\n    },\\n    number: _number.format,\\n    \\\"null\\\": function _null(x) {\\n      return 'null';\\n    },\\n    \\\"boolean\\\": function boolean(x) {\\n      return x + '';\\n    },\\n    string: function string(x) {\\n      return x;\\n    },\\n    'Array | Matrix': function ArrayMatrix(x) {\\n      return (0, _collection.deepMap)(x, this);\\n    },\\n    any: function any(x) {\\n      return String(x);\\n    }\\n  });\\n});\\nexports.createString = createString;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createString\",\"_factory\",\"_collection\",\"_number\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"_\",\"number\",\"format\",\"_null\",\"x\",\"boolean\",\"string\",\"ArrayMatrix\",\"deepMap\",\"any\",\"String\"]\n}\n"]