["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/geometry/intersect.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$function$geometry$intersect=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createIntersect=void 0;var _is=require(\"module$node_modules$mathjs$lib$cjs$utils$is\");global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");global=(0,global.factory)(\"intersect\",\"typed config abs add addScalar matrix multiply multiplyScalar divideScalar subtract smaller equalScalar\".split(\" \"),function(_ref){function _isNumeric(a){return\"number\"===\ntypeof a||(0,_is.isBigNumber)(a)}function _2d(x){return 2===x.length&&_isNumeric(x[0])&&_isNumeric(x[1])}function _3d(x){return 3===x.length&&_isNumeric(x[0])&&_isNumeric(x[1])&&_isNumeric(x[2])}function _intersect3dHelper(a,b,c,d,e,f,g,h,i,j,k,l){a=multiplyScalar(subtract(a,b),subtract(c,d));e=multiplyScalar(subtract(e,f),subtract(g,h));i=multiplyScalar(subtract(i,j),subtract(k,l));return addScalar(addScalar(a,e),i)}var typed=_ref.typed,config=_ref.config,abs=_ref.abs,add=_ref.add,addScalar=_ref.addScalar,\nmatrix=_ref.matrix,multiply=_ref.multiply,multiplyScalar=_ref.multiplyScalar,divideScalar=_ref.divideScalar,subtract=_ref.subtract,smaller=_ref.smaller,equalScalar=_ref.equalScalar;return typed(\"intersect\",{\"Array, Array, Array\":function(x$jscomp$0,y$jscomp$0,plane){if(!_3d(x$jscomp$0))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for first argument\");if(!_3d(y$jscomp$0))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for second argument\");if(!(4===plane.length&&\n_isNumeric(plane[0])&&_isNumeric(plane[1])&&_isNumeric(plane[2])&&_isNumeric(plane[3])))throw new TypeError(\"Array with 4 numbers expected as third argument\");var x1=x$jscomp$0[0],y1=x$jscomp$0[1];x$jscomp$0=x$jscomp$0[2];var x2=y$jscomp$0[0],y2=y$jscomp$0[1];y$jscomp$0=y$jscomp$0[2];var x=plane[0],y=plane[1],z=plane[2];plane=plane[3];var x1x=multiplyScalar(x1,x);x=multiplyScalar(x2,x);var y1y=multiplyScalar(y1,y);y=multiplyScalar(y2,y);var z1z=multiplyScalar(x$jscomp$0,z);z=multiplyScalar(y$jscomp$0,\nz);z=divideScalar(subtract(subtract(subtract(plane,x1x),y1y),z1z),subtract(subtract(subtract(addScalar(addScalar(x,y),z),x1x),y1y),z1z));x1=addScalar(x1,multiplyScalar(z,subtract(x2,x1)));y1=addScalar(y1,multiplyScalar(z,subtract(y2,y1)));x$jscomp$0=addScalar(x$jscomp$0,multiplyScalar(z,subtract(y$jscomp$0,x$jscomp$0)));return[x1,y1,x$jscomp$0]},\"Array, Array, Array, Array\":function(w,x,y,z){if(2===w.length){if(!_2d(w))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for first argument\");\nif(!_2d(x))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for second argument\");if(!_2d(y))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for third argument\");if(!_2d(z))throw new TypeError(\"Array with 2 numbers or BigNumbers expected for fourth argument\");var d1=subtract(w,x),d2=subtract(y,z),det=subtract(multiplyScalar(d1[0],d2[1]),multiplyScalar(d2[0],d1[1]));if(smaller(abs(det),config.epsilon))w=null;else{x=multiplyScalar(d2[0],w[1]);var d21o10=multiplyScalar(d2[1],\nw[0]);z=multiplyScalar(d2[0],y[1]);y=multiplyScalar(d2[1],y[0]);y=divideScalar(addScalar(subtract(subtract(x,d21o10),z),y),det);w=add(multiply(d1,y),w)}return w}if(3===w.length){if(!_3d(w))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for first argument\");if(!_3d(x))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for second argument\");if(!_3d(y))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for third argument\");if(!_3d(z))throw new TypeError(\"Array with 3 numbers or BigNumbers expected for fourth argument\");\nd2=w[0];d1=w[1];det=w[2];var x2=x[0],y2=x[1],z2=x[2];x=y[0];w=y[1];y=y[2];var x4=z[0];d21o10=z[1];z=z[2];var d1343=_intersect3dHelper(d2,x,x4,x,d1,w,d21o10,w,det,y,z,y),d4321=_intersect3dHelper(x4,x,x2,d2,d21o10,w,y2,d1,z,y,z2,det),d1321=_intersect3dHelper(d2,x,x2,d2,d1,w,y2,d1,det,y,z2,det),d4343=_intersect3dHelper(x4,x,x4,x,d21o10,w,d21o10,w,z,y,z,y),d2121=_intersect3dHelper(x2,d2,x2,d2,y2,d1,y2,d1,z2,det,z2,det);d1321=divideScalar(subtract(multiplyScalar(d1343,d4321),multiplyScalar(d1321,d4343)),\nsubtract(multiplyScalar(d2121,d4343),multiplyScalar(d4321,d4321)));d1343=divideScalar(addScalar(d1343,multiplyScalar(d1321,d4321)),d4343);d2=addScalar(d2,multiplyScalar(d1321,subtract(x2,d2)));d1=addScalar(d1,multiplyScalar(d1321,subtract(y2,d1)));det=addScalar(det,multiplyScalar(d1321,subtract(z2,det)));x=addScalar(x,multiplyScalar(d1343,subtract(x4,x)));w=addScalar(w,multiplyScalar(d1343,subtract(d21o10,w)));y=addScalar(y,multiplyScalar(d1343,subtract(z,y)));w=equalScalar(d2,x)&&equalScalar(d1,\nw)&&equalScalar(det,y)?[d2,d1,det]:null;return w}throw new TypeError(\"Arrays with two or thee dimensional points expected\");},\"Matrix, Matrix, Matrix\":function(x,y,plane){return matrix(this(x.valueOf(),y.valueOf(),plane.valueOf()))},\"Matrix, Matrix, Matrix, Matrix\":function(w,x,y,z){return matrix(this(w.valueOf(),x.valueOf(),y.valueOf(),z.valueOf()))}})});exports.createIntersect=global}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$geometry$intersect\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createIntersect = void 0;\n\nvar _is = require(\"../../utils/is.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'intersect';\nvar dependencies = ['typed', 'config', 'abs', 'add', 'addScalar', 'matrix', 'multiply', 'multiplyScalar', 'divideScalar', 'subtract', 'smaller', 'equalScalar'];\nvar createIntersect = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      abs = _ref.abs,\n      add = _ref.add,\n      addScalar = _ref.addScalar,\n      matrix = _ref.matrix,\n      multiply = _ref.multiply,\n      multiplyScalar = _ref.multiplyScalar,\n      divideScalar = _ref.divideScalar,\n      subtract = _ref.subtract,\n      smaller = _ref.smaller,\n      equalScalar = _ref.equalScalar;\n\n  /**\n   * Calculates the point of intersection of two lines in two or three dimensions\n   * and of a line and a plane in three dimensions. The inputs are in the form of\n   * arrays or 1 dimensional matrices. The line intersection functions return null\n   * if the lines do not meet.\n   *\n   * Note: Fill the plane coefficients as `x + y + z = c` and not as `x + y + z + c = 0`.\n   *\n   * Syntax:\n   *\n   *    math.intersect(endPoint1Line1, endPoint2Line1, endPoint1Line2, endPoint2Line2)\n   *    math.intersect(endPoint1, endPoint2, planeCoefficients)\n   *\n   * Examples:\n   *\n   *    math.intersect([0, 0], [10, 10], [10, 0], [0, 10])              // Returns [5, 5]\n   *    math.intersect([0, 0, 0], [10, 10, 0], [10, 0, 0], [0, 10, 0])  // Returns [5, 5, 0]\n   *    math.intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])            // Returns [7, -4, 3]\n   *\n   * @param  {Array | Matrix} w   Co-ordinates of first end-point of first line\n   * @param  {Array | Matrix} x   Co-ordinates of second end-point of first line\n   * @param  {Array | Matrix} y   Co-ordinates of first end-point of second line\n   *                              OR Co-efficients of the plane's equation\n   * @param  {Array | Matrix} z   Co-ordinates of second end-point of second line\n   *                              OR null if the calculation is for line and plane\n   * @return {Array}              Returns the point of intersection of lines/lines-planes\n   */\n  return typed('intersect', {\n    'Array, Array, Array': function ArrayArrayArray(x, y, plane) {\n      if (!_3d(x)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n      }\n\n      if (!_3d(y)) {\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n      }\n\n      if (!_4d(plane)) {\n        throw new TypeError('Array with 4 numbers expected as third argument');\n      }\n\n      return _intersectLinePlane(x[0], x[1], x[2], y[0], y[1], y[2], plane[0], plane[1], plane[2], plane[3]);\n    },\n    'Array, Array, Array, Array': function ArrayArrayArrayArray(w, x, y, z) {\n      if (w.length === 2) {\n        if (!_2d(w)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_2d(x)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');\n        }\n\n        if (!_2d(y)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');\n        }\n\n        if (!_2d(z)) {\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for fourth argument');\n        }\n\n        return _intersect2d(w, x, y, z);\n      } else if (w.length === 3) {\n        if (!_3d(w)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\n        }\n\n        if (!_3d(x)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\n        }\n\n        if (!_3d(y)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for third argument');\n        }\n\n        if (!_3d(z)) {\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for fourth argument');\n        }\n\n        return _intersect3d(w[0], w[1], w[2], x[0], x[1], x[2], y[0], y[1], y[2], z[0], z[1], z[2]);\n      } else {\n        throw new TypeError('Arrays with two or thee dimensional points expected');\n      }\n    },\n    'Matrix, Matrix, Matrix': function MatrixMatrixMatrix(x, y, plane) {\n      return matrix(this(x.valueOf(), y.valueOf(), plane.valueOf()));\n    },\n    'Matrix, Matrix, Matrix, Matrix': function MatrixMatrixMatrixMatrix(w, x, y, z) {\n      // TODO: output matrix type should match input matrix type\n      return matrix(this(w.valueOf(), x.valueOf(), y.valueOf(), z.valueOf()));\n    }\n  });\n\n  function _isNumeric(a) {\n    // intersect supports numbers and bignumbers\n    return typeof a === 'number' || (0, _is.isBigNumber)(a);\n  }\n\n  function _2d(x) {\n    return x.length === 2 && _isNumeric(x[0]) && _isNumeric(x[1]);\n  }\n\n  function _3d(x) {\n    return x.length === 3 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]);\n  }\n\n  function _4d(x) {\n    return x.length === 4 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]) && _isNumeric(x[3]);\n  }\n\n  function _intersect2d(p1a, p1b, p2a, p2b) {\n    var o1 = p1a;\n    var o2 = p2a;\n    var d1 = subtract(o1, p1b);\n    var d2 = subtract(o2, p2b);\n    var det = subtract(multiplyScalar(d1[0], d2[1]), multiplyScalar(d2[0], d1[1]));\n\n    if (smaller(abs(det), config.epsilon)) {\n      return null;\n    }\n\n    var d20o11 = multiplyScalar(d2[0], o1[1]);\n    var d21o10 = multiplyScalar(d2[1], o1[0]);\n    var d20o21 = multiplyScalar(d2[0], o2[1]);\n    var d21o20 = multiplyScalar(d2[1], o2[0]);\n    var t = divideScalar(addScalar(subtract(subtract(d20o11, d21o10), d20o21), d21o20), det);\n    return add(multiply(d1, t), o1);\n  }\n\n  function _intersect3dHelper(a, b, c, d, e, f, g, h, i, j, k, l) {\n    // (a - b)*(c - d) + (e - f)*(g - h) + (i - j)*(k - l)\n    var add1 = multiplyScalar(subtract(a, b), subtract(c, d));\n    var add2 = multiplyScalar(subtract(e, f), subtract(g, h));\n    var add3 = multiplyScalar(subtract(i, j), subtract(k, l));\n    return addScalar(addScalar(add1, add2), add3);\n  }\n\n  function _intersect3d(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4) {\n    var d1343 = _intersect3dHelper(x1, x3, x4, x3, y1, y3, y4, y3, z1, z3, z4, z3);\n\n    var d4321 = _intersect3dHelper(x4, x3, x2, x1, y4, y3, y2, y1, z4, z3, z2, z1);\n\n    var d1321 = _intersect3dHelper(x1, x3, x2, x1, y1, y3, y2, y1, z1, z3, z2, z1);\n\n    var d4343 = _intersect3dHelper(x4, x3, x4, x3, y4, y3, y4, y3, z4, z3, z4, z3);\n\n    var d2121 = _intersect3dHelper(x2, x1, x2, x1, y2, y1, y2, y1, z2, z1, z2, z1);\n\n    var ta = divideScalar(subtract(multiplyScalar(d1343, d4321), multiplyScalar(d1321, d4343)), subtract(multiplyScalar(d2121, d4343), multiplyScalar(d4321, d4321)));\n    var tb = divideScalar(addScalar(d1343, multiplyScalar(ta, d4321)), d4343);\n    var pax = addScalar(x1, multiplyScalar(ta, subtract(x2, x1)));\n    var pay = addScalar(y1, multiplyScalar(ta, subtract(y2, y1)));\n    var paz = addScalar(z1, multiplyScalar(ta, subtract(z2, z1)));\n    var pbx = addScalar(x3, multiplyScalar(tb, subtract(x4, x3)));\n    var pby = addScalar(y3, multiplyScalar(tb, subtract(y4, y3)));\n    var pbz = addScalar(z3, multiplyScalar(tb, subtract(z4, z3)));\n\n    if (equalScalar(pax, pbx) && equalScalar(pay, pby) && equalScalar(paz, pbz)) {\n      return [pax, pay, paz];\n    } else {\n      return null;\n    }\n  }\n\n  function _intersectLinePlane(x1, y1, z1, x2, y2, z2, x, y, z, c) {\n    var x1x = multiplyScalar(x1, x);\n    var x2x = multiplyScalar(x2, x);\n    var y1y = multiplyScalar(y1, y);\n    var y2y = multiplyScalar(y2, y);\n    var z1z = multiplyScalar(z1, z);\n    var z2z = multiplyScalar(z2, z);\n    var t = divideScalar(subtract(subtract(subtract(c, x1x), y1y), z1z), subtract(subtract(subtract(addScalar(addScalar(x2x, y2y), z2z), x1x), y1y), z1z));\n    var px = addScalar(x1, multiplyScalar(t, subtract(x2, x1)));\n    var py = addScalar(y1, multiplyScalar(t, subtract(y2, y1)));\n    var pz = addScalar(z1, multiplyScalar(t, subtract(z2, z1)));\n    return [px, py, pz]; // TODO: Add cases when line is parallel to the plane:\n    //       (a) no intersection,\n    //       (b) line contained in plane\n  }\n});\nexports.createIntersect = createIntersect;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$is","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["createIntersect","__esModule","value"]],"~:compiled-at",1619135262531,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$geometry$intersect.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/geometry/intersect.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$function$geometry$intersect\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createIntersect = void 0;\\n\\nvar _is = require(\\\"../../utils/is.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar name = 'intersect';\\nvar dependencies = ['typed', 'config', 'abs', 'add', 'addScalar', 'matrix', 'multiply', 'multiplyScalar', 'divideScalar', 'subtract', 'smaller', 'equalScalar'];\\nvar createIntersect = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      config = _ref.config,\\n      abs = _ref.abs,\\n      add = _ref.add,\\n      addScalar = _ref.addScalar,\\n      matrix = _ref.matrix,\\n      multiply = _ref.multiply,\\n      multiplyScalar = _ref.multiplyScalar,\\n      divideScalar = _ref.divideScalar,\\n      subtract = _ref.subtract,\\n      smaller = _ref.smaller,\\n      equalScalar = _ref.equalScalar;\\n\\n  /**\\n   * Calculates the point of intersection of two lines in two or three dimensions\\n   * and of a line and a plane in three dimensions. The inputs are in the form of\\n   * arrays or 1 dimensional matrices. The line intersection functions return null\\n   * if the lines do not meet.\\n   *\\n   * Note: Fill the plane coefficients as `x + y + z = c` and not as `x + y + z + c = 0`.\\n   *\\n   * Syntax:\\n   *\\n   *    math.intersect(endPoint1Line1, endPoint2Line1, endPoint1Line2, endPoint2Line2)\\n   *    math.intersect(endPoint1, endPoint2, planeCoefficients)\\n   *\\n   * Examples:\\n   *\\n   *    math.intersect([0, 0], [10, 10], [10, 0], [0, 10])              // Returns [5, 5]\\n   *    math.intersect([0, 0, 0], [10, 10, 0], [10, 0, 0], [0, 10, 0])  // Returns [5, 5, 0]\\n   *    math.intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])            // Returns [7, -4, 3]\\n   *\\n   * @param  {Array | Matrix} w   Co-ordinates of first end-point of first line\\n   * @param  {Array | Matrix} x   Co-ordinates of second end-point of first line\\n   * @param  {Array | Matrix} y   Co-ordinates of first end-point of second line\\n   *                              OR Co-efficients of the plane's equation\\n   * @param  {Array | Matrix} z   Co-ordinates of second end-point of second line\\n   *                              OR null if the calculation is for line and plane\\n   * @return {Array}              Returns the point of intersection of lines/lines-planes\\n   */\\n  return typed('intersect', {\\n    'Array, Array, Array': function ArrayArrayArray(x, y, plane) {\\n      if (!_3d(x)) {\\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\\n      }\\n\\n      if (!_3d(y)) {\\n        throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\\n      }\\n\\n      if (!_4d(plane)) {\\n        throw new TypeError('Array with 4 numbers expected as third argument');\\n      }\\n\\n      return _intersectLinePlane(x[0], x[1], x[2], y[0], y[1], y[2], plane[0], plane[1], plane[2], plane[3]);\\n    },\\n    'Array, Array, Array, Array': function ArrayArrayArrayArray(w, x, y, z) {\\n      if (w.length === 2) {\\n        if (!_2d(w)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for first argument');\\n        }\\n\\n        if (!_2d(x)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for second argument');\\n        }\\n\\n        if (!_2d(y)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for third argument');\\n        }\\n\\n        if (!_2d(z)) {\\n          throw new TypeError('Array with 2 numbers or BigNumbers expected for fourth argument');\\n        }\\n\\n        return _intersect2d(w, x, y, z);\\n      } else if (w.length === 3) {\\n        if (!_3d(w)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for first argument');\\n        }\\n\\n        if (!_3d(x)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for second argument');\\n        }\\n\\n        if (!_3d(y)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for third argument');\\n        }\\n\\n        if (!_3d(z)) {\\n          throw new TypeError('Array with 3 numbers or BigNumbers expected for fourth argument');\\n        }\\n\\n        return _intersect3d(w[0], w[1], w[2], x[0], x[1], x[2], y[0], y[1], y[2], z[0], z[1], z[2]);\\n      } else {\\n        throw new TypeError('Arrays with two or thee dimensional points expected');\\n      }\\n    },\\n    'Matrix, Matrix, Matrix': function MatrixMatrixMatrix(x, y, plane) {\\n      return matrix(this(x.valueOf(), y.valueOf(), plane.valueOf()));\\n    },\\n    'Matrix, Matrix, Matrix, Matrix': function MatrixMatrixMatrixMatrix(w, x, y, z) {\\n      // TODO: output matrix type should match input matrix type\\n      return matrix(this(w.valueOf(), x.valueOf(), y.valueOf(), z.valueOf()));\\n    }\\n  });\\n\\n  function _isNumeric(a) {\\n    // intersect supports numbers and bignumbers\\n    return typeof a === 'number' || (0, _is.isBigNumber)(a);\\n  }\\n\\n  function _2d(x) {\\n    return x.length === 2 && _isNumeric(x[0]) && _isNumeric(x[1]);\\n  }\\n\\n  function _3d(x) {\\n    return x.length === 3 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]);\\n  }\\n\\n  function _4d(x) {\\n    return x.length === 4 && _isNumeric(x[0]) && _isNumeric(x[1]) && _isNumeric(x[2]) && _isNumeric(x[3]);\\n  }\\n\\n  function _intersect2d(p1a, p1b, p2a, p2b) {\\n    var o1 = p1a;\\n    var o2 = p2a;\\n    var d1 = subtract(o1, p1b);\\n    var d2 = subtract(o2, p2b);\\n    var det = subtract(multiplyScalar(d1[0], d2[1]), multiplyScalar(d2[0], d1[1]));\\n\\n    if (smaller(abs(det), config.epsilon)) {\\n      return null;\\n    }\\n\\n    var d20o11 = multiplyScalar(d2[0], o1[1]);\\n    var d21o10 = multiplyScalar(d2[1], o1[0]);\\n    var d20o21 = multiplyScalar(d2[0], o2[1]);\\n    var d21o20 = multiplyScalar(d2[1], o2[0]);\\n    var t = divideScalar(addScalar(subtract(subtract(d20o11, d21o10), d20o21), d21o20), det);\\n    return add(multiply(d1, t), o1);\\n  }\\n\\n  function _intersect3dHelper(a, b, c, d, e, f, g, h, i, j, k, l) {\\n    // (a - b)*(c - d) + (e - f)*(g - h) + (i - j)*(k - l)\\n    var add1 = multiplyScalar(subtract(a, b), subtract(c, d));\\n    var add2 = multiplyScalar(subtract(e, f), subtract(g, h));\\n    var add3 = multiplyScalar(subtract(i, j), subtract(k, l));\\n    return addScalar(addScalar(add1, add2), add3);\\n  }\\n\\n  function _intersect3d(x1, y1, z1, x2, y2, z2, x3, y3, z3, x4, y4, z4) {\\n    var d1343 = _intersect3dHelper(x1, x3, x4, x3, y1, y3, y4, y3, z1, z3, z4, z3);\\n\\n    var d4321 = _intersect3dHelper(x4, x3, x2, x1, y4, y3, y2, y1, z4, z3, z2, z1);\\n\\n    var d1321 = _intersect3dHelper(x1, x3, x2, x1, y1, y3, y2, y1, z1, z3, z2, z1);\\n\\n    var d4343 = _intersect3dHelper(x4, x3, x4, x3, y4, y3, y4, y3, z4, z3, z4, z3);\\n\\n    var d2121 = _intersect3dHelper(x2, x1, x2, x1, y2, y1, y2, y1, z2, z1, z2, z1);\\n\\n    var ta = divideScalar(subtract(multiplyScalar(d1343, d4321), multiplyScalar(d1321, d4343)), subtract(multiplyScalar(d2121, d4343), multiplyScalar(d4321, d4321)));\\n    var tb = divideScalar(addScalar(d1343, multiplyScalar(ta, d4321)), d4343);\\n    var pax = addScalar(x1, multiplyScalar(ta, subtract(x2, x1)));\\n    var pay = addScalar(y1, multiplyScalar(ta, subtract(y2, y1)));\\n    var paz = addScalar(z1, multiplyScalar(ta, subtract(z2, z1)));\\n    var pbx = addScalar(x3, multiplyScalar(tb, subtract(x4, x3)));\\n    var pby = addScalar(y3, multiplyScalar(tb, subtract(y4, y3)));\\n    var pbz = addScalar(z3, multiplyScalar(tb, subtract(z4, z3)));\\n\\n    if (equalScalar(pax, pbx) && equalScalar(pay, pby) && equalScalar(paz, pbz)) {\\n      return [pax, pay, paz];\\n    } else {\\n      return null;\\n    }\\n  }\\n\\n  function _intersectLinePlane(x1, y1, z1, x2, y2, z2, x, y, z, c) {\\n    var x1x = multiplyScalar(x1, x);\\n    var x2x = multiplyScalar(x2, x);\\n    var y1y = multiplyScalar(y1, y);\\n    var y2y = multiplyScalar(y2, y);\\n    var z1z = multiplyScalar(z1, z);\\n    var z2z = multiplyScalar(z2, z);\\n    var t = divideScalar(subtract(subtract(subtract(c, x1x), y1y), z1z), subtract(subtract(subtract(addScalar(addScalar(x2x, y2y), z2z), x1x), y1y), z1z));\\n    var px = addScalar(x1, multiplyScalar(t, subtract(x2, x1)));\\n    var py = addScalar(y1, multiplyScalar(t, subtract(y2, y1)));\\n    var pz = addScalar(z1, multiplyScalar(t, subtract(z2, z1)));\\n    return [px, py, pz]; // TODO: Add cases when line is parallel to the plane:\\n    //       (a) no intersection,\\n    //       (b) line contained in plane\\n  }\\n});\\nexports.createIntersect = createIntersect;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createIntersect\",\"_is\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"_isNumeric\",\"a\",\"isBigNumber\",\"_2d\",\"x\",\"length\",\"_3d\",\"_intersect3dHelper\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"add1\",\"multiplyScalar\",\"subtract\",\"add2\",\"add3\",\"addScalar\",\"typed\",\"config\",\"abs\",\"add\",\"matrix\",\"multiply\",\"divideScalar\",\"smaller\",\"equalScalar\",\"ArrayArrayArray\",\"y\",\"plane\",\"TypeError\",\"x1x\",\"x1\",\"x2x\",\"x2\",\"y1y\",\"y1\",\"y2y\",\"y2\",\"z1z\",\"z1\",\"z\",\"z2z\",\"z2\",\"t\",\"px\",\"py\",\"pz\",\"ArrayArrayArrayArray\",\"w\",\"d1\",\"d2\",\"det\",\"epsilon\",\"d20o11\",\"d21o10\",\"d20o21\",\"d21o20\",\"d1343\",\"x3\",\"x4\",\"y3\",\"y4\",\"z3\",\"z4\",\"d4321\",\"d1321\",\"d4343\",\"d2121\",\"ta\",\"tb\",\"pax\",\"pay\",\"paz\",\"pbx\",\"pby\",\"pbz\",\"MatrixMatrixMatrix\",\"valueOf\",\"MatrixMatrixMatrixMatrix\"]\n}\n"]