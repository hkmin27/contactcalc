["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/matrix/size.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$function$matrix$size=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createSize=void 0;var _array=require(\"module$node_modules$mathjs$lib$cjs$utils$array\");global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");var _noop=require(\"module$node_modules$mathjs$lib$cjs$utils$noop\");require=(0,global.factory)(\"size\",[\"typed\",\"config\",\"?matrix\"],function(_ref){var typed=_ref.typed,config=\n_ref.config,matrix=_ref.matrix;return typed(\"size\",{Matrix:function(x){return x.create(x.size())},Array:_array.arraySize,string:function(x){return\"Array\"===config.matrix?[x.length]:matrix([x.length])},\"number | Complex | BigNumber | Unit | boolean | null\":function(x){return\"Array\"===config.matrix?[]:matrix?matrix([]):(0,_noop.noMatrix)()}})});exports.createSize=require}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$size\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSize = void 0;\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar _noop = require(\"../../utils/noop.js\");\n\nvar name = 'size';\nvar dependencies = ['typed', 'config', '?matrix'];\nvar createSize = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      config = _ref.config,\n      matrix = _ref.matrix;\n\n  /**\n   * Calculate the size of a matrix or scalar.\n   *\n   * Syntax:\n   *\n   *     math.size(x)\n   *\n   * Examples:\n   *\n   *     math.size(2.3)                  // returns []\n   *     math.size('hello world')        // returns [11]\n   *\n   *     const A = [[1, 2, 3], [4, 5, 6]]\n   *     math.size(A)                    // returns [2, 3]\n   *     math.size(math.range(1,6))      // returns [5]\n   *\n   * See also:\n   *\n   *     count, resize, squeeze, subset\n   *\n   * @param {boolean | number | Complex | Unit | string | Array | Matrix} x  A matrix\n   * @return {Array | Matrix} A vector with size of `x`.\n   */\n  return typed(name, {\n    Matrix: function Matrix(x) {\n      return x.create(x.size());\n    },\n    Array: _array.arraySize,\n    string: function string(x) {\n      return config.matrix === 'Array' ? [x.length] : matrix([x.length]);\n    },\n    'number | Complex | BigNumber | Unit | boolean | null': function numberComplexBigNumberUnitBooleanNull(x) {\n      // scalar\n      return config.matrix === 'Array' ? [] : matrix ? matrix([]) : (0, _noop.noMatrix)();\n    }\n  });\n});\nexports.createSize = createSize;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$mathjs$lib$cjs$utils$noop","~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$array","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["string","__esModule","value","createSize","Matrix","Array"]],"~:compiled-at",1619135262219,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$matrix$size.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,UAAR,CAAqB,IAAK,EAE1B,KAAIC,OAASP,OAAA,CAAQ,gDAAR,CAETQ,OAAAA,CAAWR,OAAA,CAAQ,kDAAR,CAEf,KAAIS,MAAQT,OAAA,CAAQ,+CAAR,CAIRM,QAAAA,CAA4B,CAAC,CAAA,CAAGE,MAASE,CAAAA,OAAb,EAFrBC,MAEqB,CADbC,CAAC,OAADA,CAAU,QAAVA,CAAoB,SAApBA,CACa,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IACpFC,MAAQD,IAAKC,CAAAA,KADuE,CAEpFC;AAASF,IAAKE,CAAAA,MAFsE,CAGpFC,OAASH,IAAKG,CAAAA,MAyBlB,OAAOF,MAAA,CA9BEH,MA8BF,CAAY,CACjBM,OAAQA,QAAe,CAACC,CAAD,CAAI,CACzB,MAAOA,EAAEC,CAAAA,MAAF,CAASD,CAAEE,CAAAA,IAAF,EAAT,CADkB,CADV,CAIjBC,MAAOd,MAAOe,CAAAA,SAJG,CAKjBC,OAAQA,QAAe,CAACL,CAAD,CAAI,CACzB,MAAyB,OAAlB,GAAAH,MAAOC,CAAAA,MAAP,CAA4B,CAACE,CAAEM,CAAAA,MAAH,CAA5B,CAAyCR,MAAA,CAAO,CAACE,CAAEM,CAAAA,MAAH,CAAP,CADvB,CALV,CAQjB,uDAAwDC,QAA8C,CAACP,CAAD,CAAI,CAExG,MAAyB,OAAlB,GAAAH,MAAOC,CAAAA,MAAP,CAA4B,EAA5B,CAAiCA,MAAA,CAASA,MAAA,CAAO,EAAP,CAAT,CAAsB,CAAC,CAAA,CAAGP,KAAMiB,CAAAA,QAAV,GAF0C,CARzF,CAAZ,CA5BiF,CAA1D,CA0ChCxB,QAAQI,CAAAA,UAAR,CAAqBA,OA1D+F;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/matrix/size.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$function$matrix$size\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createSize = void 0;\\n\\nvar _array = require(\\\"../../utils/array.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar _noop = require(\\\"../../utils/noop.js\\\");\\n\\nvar name = 'size';\\nvar dependencies = ['typed', 'config', '?matrix'];\\nvar createSize = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      config = _ref.config,\\n      matrix = _ref.matrix;\\n\\n  /**\\n   * Calculate the size of a matrix or scalar.\\n   *\\n   * Syntax:\\n   *\\n   *     math.size(x)\\n   *\\n   * Examples:\\n   *\\n   *     math.size(2.3)                  // returns []\\n   *     math.size('hello world')        // returns [11]\\n   *\\n   *     const A = [[1, 2, 3], [4, 5, 6]]\\n   *     math.size(A)                    // returns [2, 3]\\n   *     math.size(math.range(1,6))      // returns [5]\\n   *\\n   * See also:\\n   *\\n   *     count, resize, squeeze, subset\\n   *\\n   * @param {boolean | number | Complex | Unit | string | Array | Matrix} x  A matrix\\n   * @return {Array | Matrix} A vector with size of `x`.\\n   */\\n  return typed(name, {\\n    Matrix: function Matrix(x) {\\n      return x.create(x.size());\\n    },\\n    Array: _array.arraySize,\\n    string: function string(x) {\\n      return config.matrix === 'Array' ? [x.length] : matrix([x.length]);\\n    },\\n    'number | Complex | BigNumber | Unit | boolean | null': function numberComplexBigNumberUnitBooleanNull(x) {\\n      // scalar\\n      return config.matrix === 'Array' ? [] : matrix ? matrix([]) : (0, _noop.noMatrix)();\\n    }\\n  });\\n});\\nexports.createSize = createSize;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createSize\",\"_array\",\"_factory\",\"_noop\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"config\",\"matrix\",\"Matrix\",\"x\",\"create\",\"size\",\"Array\",\"arraySize\",\"string\",\"length\",\"numberComplexBigNumberUnitBooleanNull\",\"noMatrix\"]\n}\n"]