["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/mathjs/lib/cjs/function/matrix/squeeze.js"],"~:js","shadow$provide.module$node_modules$mathjs$lib$cjs$function$matrix$squeeze=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createSqueeze=void 0;var _object=require(\"module$node_modules$mathjs$lib$cjs$utils$object\"),_array=require(\"module$node_modules$mathjs$lib$cjs$utils$array\");global=require(\"module$node_modules$mathjs$lib$cjs$utils$factory\");global=(0,global.factory)(\"squeeze\",[\"typed\",\"matrix\"],function(_ref){var typed=_ref.typed,matrix=_ref.matrix;\nreturn typed(\"squeeze\",{Array:function(x){return(0,_array.squeeze)((0,_object.clone)(x))},Matrix:function(x){x=(0,_array.squeeze)(x.toArray());return Array.isArray(x)?matrix(x):x},any:function(x){return(0,_object.clone)(x)}})});exports.createSqueeze=global}","~:source","shadow$provide[\"module$node_modules$mathjs$lib$cjs$function$matrix$squeeze\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSqueeze = void 0;\n\nvar _object = require(\"../../utils/object.js\");\n\nvar _array = require(\"../../utils/array.js\");\n\nvar _factory = require(\"../../utils/factory.js\");\n\nvar name = 'squeeze';\nvar dependencies = ['typed', 'matrix'];\nvar createSqueeze = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\n  var typed = _ref.typed,\n      matrix = _ref.matrix;\n\n  /**\n   * Squeeze a matrix, remove inner and outer singleton dimensions from a matrix.\n   *\n   * Syntax:\n   *\n   *     math.squeeze(x)\n   *\n   * Examples:\n   *\n   *     math.squeeze([3])           // returns 3\n   *     math.squeeze([[3]])         // returns 3\n   *\n   *     const A = math.zeros(3, 1)    // returns [[0], [0], [0]] (size 3x1)\n   *     math.squeeze(A)             // returns [0, 0, 0] (size 3)\n   *\n   *     const B = math.zeros(1, 3)    // returns [[0, 0, 0]] (size 1x3)\n   *     math.squeeze(B)             // returns [0, 0, 0] (size 3)\n   *\n   *     // only inner and outer dimensions are removed\n   *     const C = math.zeros(2, 1, 3) // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\n   *     math.squeeze(C)             // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\n   *\n   * See also:\n   *\n   *     subset\n   *\n   * @param {Matrix | Array} x      Matrix to be squeezed\n   * @return {Matrix | Array} Squeezed matrix\n   */\n  return typed(name, {\n    Array: function Array(x) {\n      return (0, _array.squeeze)((0, _object.clone)(x));\n    },\n    Matrix: function Matrix(x) {\n      var res = (0, _array.squeeze)(x.toArray()); // FIXME: return the same type of matrix as the input\n\n      return Array.isArray(res) ? matrix(res) : res;\n    },\n    any: function any(x) {\n      // scalar\n      return (0, _object.clone)(x);\n    }\n  });\n});\nexports.createSqueeze = createSqueeze;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$mathjs$lib$cjs$utils$array","~$module$node_modules$mathjs$lib$cjs$utils$object","~$module$node_modules$mathjs$lib$cjs$utils$factory"]],"~:properties",["^5",["createSqueeze","__esModule","any","value","Matrix","Array"]],"~:compiled-at",1619135262220,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$mathjs$lib$cjs$function$matrix$squeeze.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,CAAA,0DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGvHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,aAAR,CAAwB,IAAK,EAE7B,KAAIC,QAAUP,OAAA,CAAQ,iDAAR,CAAd,CAEIQ,OAASR,OAAA,CAAQ,gDAAR,CAETS,OAAAA,CAAWT,OAAA,CAAQ,kDAAR,CAIXM,OAAAA,CAA+B,CAAC,CAAA,CAAGG,MAASC,CAAAA,OAAb,EAFxBC,SAEwB,CADhBC,CAAC,OAADA,CAAU,QAAVA,CACgB,CAA0C,QAAS,CAACC,IAAD,CAAO,CAAA,IACvFC,MAAQD,IAAKC,CAAAA,KAD0E,CAEvFC,OAASF,IAAKE,CAAAA,MA+BlB;MAAOD,MAAA,CAnCEH,SAmCF,CAAY,CACjBK,MAAOA,QAAc,CAACC,CAAD,CAAI,CACvB,MAAO,CAAC,CAAA,CAAGT,MAAOU,CAAAA,OAAX,EAAoB,CAAC,CAAA,CAAGX,OAAQY,CAAAA,KAAZ,EAAmBF,CAAnB,CAApB,CADgB,CADR,CAIjBG,OAAQA,QAAe,CAACH,CAAD,CAAI,CACrBI,CAAAA,CAAM,CAAC,CAAA,CAAGb,MAAOU,CAAAA,OAAX,EAAoBD,CAAEK,CAAAA,OAAF,EAApB,CAEV,OAAON,MAAMO,CAAAA,OAAN,CAAcF,CAAd,CAAA,CAAqBN,MAAA,CAAOM,CAAP,CAArB,CAAmCA,CAHjB,CAJV,CASjBG,IAAKA,QAAY,CAACP,CAAD,CAAI,CAEnB,MAAO,CAAC,CAAA,CAAGV,OAAQY,CAAAA,KAAZ,EAAmBF,CAAnB,CAFY,CATJ,CAAZ,CAjCoF,CAA1D,CAgDnCf,QAAQI,CAAAA,aAAR,CAAwBA,MAhE+F;\",\n\"sources\":[\"node_modules/mathjs/lib/cjs/function/matrix/squeeze.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$mathjs$lib$cjs$function$matrix$squeeze\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createSqueeze = void 0;\\n\\nvar _object = require(\\\"../../utils/object.js\\\");\\n\\nvar _array = require(\\\"../../utils/array.js\\\");\\n\\nvar _factory = require(\\\"../../utils/factory.js\\\");\\n\\nvar name = 'squeeze';\\nvar dependencies = ['typed', 'matrix'];\\nvar createSqueeze = /* #__PURE__ */(0, _factory.factory)(name, dependencies, function (_ref) {\\n  var typed = _ref.typed,\\n      matrix = _ref.matrix;\\n\\n  /**\\n   * Squeeze a matrix, remove inner and outer singleton dimensions from a matrix.\\n   *\\n   * Syntax:\\n   *\\n   *     math.squeeze(x)\\n   *\\n   * Examples:\\n   *\\n   *     math.squeeze([3])           // returns 3\\n   *     math.squeeze([[3]])         // returns 3\\n   *\\n   *     const A = math.zeros(3, 1)    // returns [[0], [0], [0]] (size 3x1)\\n   *     math.squeeze(A)             // returns [0, 0, 0] (size 3)\\n   *\\n   *     const B = math.zeros(1, 3)    // returns [[0, 0, 0]] (size 1x3)\\n   *     math.squeeze(B)             // returns [0, 0, 0] (size 3)\\n   *\\n   *     // only inner and outer dimensions are removed\\n   *     const C = math.zeros(2, 1, 3) // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\\n   *     math.squeeze(C)             // returns [[[0, 0, 0]], [[0, 0, 0]]] (size 2x1x3)\\n   *\\n   * See also:\\n   *\\n   *     subset\\n   *\\n   * @param {Matrix | Array} x      Matrix to be squeezed\\n   * @return {Matrix | Array} Squeezed matrix\\n   */\\n  return typed(name, {\\n    Array: function Array(x) {\\n      return (0, _array.squeeze)((0, _object.clone)(x));\\n    },\\n    Matrix: function Matrix(x) {\\n      var res = (0, _array.squeeze)(x.toArray()); // FIXME: return the same type of matrix as the input\\n\\n      return Array.isArray(res) ? matrix(res) : res;\\n    },\\n    any: function any(x) {\\n      // scalar\\n      return (0, _object.clone)(x);\\n    }\\n  });\\n});\\nexports.createSqueeze = createSqueeze;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"createSqueeze\",\"_object\",\"_array\",\"_factory\",\"factory\",\"name\",\"dependencies\",\"_ref\",\"typed\",\"matrix\",\"Array\",\"x\",\"squeeze\",\"clone\",\"Matrix\",\"res\",\"toArray\",\"isArray\",\"any\"]\n}\n"]